{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputRegionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputRegionModal.vue","mtime":1605259988000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { SweetModal } from 'sweet-modal-vue';\r\nimport FormMixin from '@/components/Mixins/FormMixin';\r\nimport BlockRegions from  '../Block/BlockRegions';\r\n\r\nexport default {\r\n  name: 'c-input-regionModal',\r\n  components: {\r\n    SweetModal,\r\n    BlockRegions\r\n  },\r\n  mixins: [\r\n    FormMixin\r\n  ],\r\n  props: {\r\n    filterOptions: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      placeHolder: '지역명',\r\n      selectedValue: ''\r\n    }\r\n  },\r\n  created() {\r\n    if (this.filterOptions.selectedValue !== undefined) {\r\n      this.selectedValue = this.filterOptions.selectedValue;\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  computed: {\r\n    iconStyle() {\r\n      if (this.iconCustomStyle) return this.iconCustomStyle;\r\n      else return {\r\n        color: this.brandColor.sub.color\r\n      };\r\n      },\r\n  },\r\n  methods: {\r\n    selectedRegion(res) {\r\n      this.selectedValue = `${res.sido.name} ${res.sigungu.name}`;\r\n      this.filterOptions.selectedValue = this.selectedValue;\r\n      this.$emit('update:filterOptions', this.filterOptions);\r\n      this.$emit('update:value', res);\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["CInputRegionModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CInputRegionModal.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\" class=\"full-width\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <!-- input 영역 -->\r\n    <div :style=\"inputStyle\" class=\"flex-between position-relative unselect\" @click=\"$refs.regionModal.open()\">\r\n      <div class=\"flex-align\">\r\n        <i class=\"material-icons\" style=\"font-size: 20px; margin-right: 8px; color: #d6d6d6\">location_on</i>\r\n        <span v-if=\"selectedValue\">{{ selectedValue }}</span>\r\n        <span v-else-if=\"placeholder\">{{ placeholder }}</span>\r\n        <span v-else>{{ placeHolder }}</span>\r\n      </div>\r\n      <i :style=\"iconStyle\" class=\"material-icons\">keyboard_arrow_down</i>\r\n    </div>\r\n\r\n    <!-- Modal -->\r\n    <sweet-modal ref=\"regionModal\" overlay-theme=\"dark\">\r\n      <block-regions :filterOptions=\"filterOptions\" @selectedRegion=\"selectedRegion\"\r\n                    @closeModal=\"$refs.regionModal.close()\"></block-regions>\r\n    </sweet-modal>\r\n    \r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport { SweetModal } from 'sweet-modal-vue';\r\nimport FormMixin from '@/components/Mixins/FormMixin';\r\nimport BlockRegions from  '../Block/BlockRegions';\r\n\r\nexport default {\r\n  name: 'c-input-regionModal',\r\n  components: {\r\n    SweetModal,\r\n    BlockRegions\r\n  },\r\n  mixins: [\r\n    FormMixin\r\n  ],\r\n  props: {\r\n    filterOptions: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      placeHolder: '지역명',\r\n      selectedValue: ''\r\n    }\r\n  },\r\n  created() {\r\n    if (this.filterOptions.selectedValue !== undefined) {\r\n      this.selectedValue = this.filterOptions.selectedValue;\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  computed: {\r\n    iconStyle() {\r\n      if (this.iconCustomStyle) return this.iconCustomStyle;\r\n      else return {\r\n        color: this.brandColor.sub.color\r\n      };\r\n      },\r\n  },\r\n  methods: {\r\n    selectedRegion(res) {\r\n      this.selectedValue = `${res.sido.name} ${res.sigungu.name}`;\r\n      this.filterOptions.selectedValue = this.selectedValue;\r\n      this.$emit('update:filterOptions', this.filterOptions);\r\n      this.$emit('update:value', res);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n</style>"]}]}