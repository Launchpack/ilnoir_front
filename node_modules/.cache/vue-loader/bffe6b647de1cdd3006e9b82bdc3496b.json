{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Common/QuantityInputPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Common/QuantityInputPopup.vue","mtime":1605259984000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"QuantityInputPopup\",\r\n  props: {\r\n    value: {\r\n      type: [String, Number],\r\n      required: false\r\n    },\r\n    inputStyle: {\r\n      type: Object,\r\n      default: ()=> {\r\n        return {\r\n          backgroundColor: '#ffffff',\r\n          borderRadius: '4px',\r\n          padding: '0 12px',\r\n          height: '48px',\r\n          width: '100%'\r\n        }\r\n      }\r\n    },\r\n    numberStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          fontSize: '14px',\r\n          fontWeight: '600'\r\n        }\r\n      }\r\n    },\r\n    btnMinusStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          width: '24px',\r\n          height: '24px',\r\n          borderRadius: '4px',\r\n          backgroundColor: '#eeeeee',\r\n          lineHeight: '24px',\r\n          color: '#000',\r\n          textAlign: 'center',\r\n          fontSize: '18px'\r\n        }\r\n      }\r\n    },\r\n    btnPlusStyle: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => {\r\n        return {\r\n          width: '24px',\r\n          height: '24px',\r\n          borderRadius: '4px',\r\n          backgroundColor: '#eeeeee',\r\n          lineHeight: '24px',\r\n          color: '#000',\r\n          textAlign: 'center',\r\n          fontSize: '18px'\r\n        }\r\n      }\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    max: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    disableState: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    numInput: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      inputValue: 0,\r\n      modalValue: 0\r\n    }\r\n  },\r\n  created() {\r\n    if(this.value) {\r\n      this.inputValue = this.value;\r\n    }\r\n  },\r\n  watch: {\r\n    value(n) {\r\n      this.inputValue = n;\r\n    },\r\n    inputValue(n) {\r\n      this.$emit('update:value', n);\r\n    },\r\n    modalValue(n) {\r\n      if(n > this.max) {\r\n        this.modalValue = this.max;\r\n      }\r\n\r\n      /*else if(n < this.min) {\r\n        this.modalValue = this.min;\r\n      }*/\r\n    }\r\n  },\r\n  methods: {\r\n    clickNum() {\r\n      if(this.numInput) {\r\n        this.modalValue = undefined;\r\n        this.$refs.numModal.open();\r\n      }\r\n    },\r\n    confirm() {\r\n      if(this.modalValue) {\r\n        this.inputValue = this.modalValue;\r\n        this.$emit('update:value', this.inputValue)\r\n      }\r\n      this.$refs.numModal.close();\r\n    },\r\n    clickIncrement() {\r\n      if(this.disableState!==undefined) {\r\n        if(!this.disableState) this.inputValue += 1;\r\n      }\r\n      else {\r\n        if(this.inputValue < this.max) {\r\n          this.inputValue += 1;\r\n        }\r\n      }\r\n      this.$emit('update:value', this.inputValue)\r\n    },\r\n    clickDecrement() {\r\n      if(this.inputValue > this.min) {\r\n        this.inputValue -= 1;\r\n      }\r\n      this.$emit('update:value', this.inputValue)\r\n    }\r\n  },\r\n  computed: {\r\n    iconLeftStyle() {\r\n      // disabled style\r\n      if (this.inputValue <= this.min) {\r\n        if (this.btnMinusStyle) {\r\n          let obj = this.cloneItem(this.btnMinusStyle);\r\n          obj.backgroundColor = '#ddd';\r\n          obj.color = '#bbb';\r\n          obj.cursor = 'not-allowed';\r\n          return obj;\r\n        }\r\n        else {\r\n          return {\r\n            width: '30px',\r\n            height: '30px',\r\n            marginRight: '8px',\r\n            backgroundColor: '#ddd',\r\n            color: '#bbb',\r\n            cursor: 'not-allowed'\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      if(this.btnMinusStyle) {\r\n        return this.btnMinusStyle;\r\n      }\r\n      else {\r\n        return {\r\n          width: '30px',\r\n          height: '30px',\r\n          marginRight: '8px'\r\n        }\r\n      }\r\n    },\r\n    iconRightStyle() {\r\n      // disabled style\r\n      if ((this.inputValue >= this.max) || this.disableState) {\r\n        if (this.btnPlusStyle) {\r\n          let obj = this.cloneItem(this.btnPlusStyle);\r\n          obj.backgroundColor = '#ddd';\r\n          obj.color = '#bbb';\r\n          obj.cursor = 'not-allowed';\r\n          return obj;\r\n        }\r\n        else {\r\n          return {\r\n            width: '30px',\r\n            height: '30px',\r\n            marginRight: '8px',\r\n            backgroundColor: '#ddd',\r\n            color: '#bbb',\r\n            cursor: 'not-allowed'\r\n          }\r\n        }\r\n      }\r\n\r\n      if(this.btnPlusStyle) {\r\n        return this.btnPlusStyle;\r\n      }\r\n      else {\r\n        return {\r\n          width: '30px',\r\n          height: '30px',\r\n          marginLeft: '8px'\r\n        }\r\n      }\r\n    },\r\n    inputNumberStyle() {\r\n      if(this.inputStyle) {\r\n        return this.inputStyle;\r\n      } else {\r\n        return {\r\n          width: '33px',\r\n          height: '30px',\r\n          textAlign:'right',\r\n          paddingRight:'6px'\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["QuantityInputPopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"QuantityInputPopup.vue","sourceRoot":"src/components/Components/Common","sourcesContent":["<template>\r\n<div class=\"flex-between\" :style=\"inputStyle\">\r\n  <div class=\"flex-center unselect\"\r\n    @click=\"clickDecrement\">\r\n    <i :style=\"iconLeftStyle\" class=\"material-icons\">remove</i>\r\n  </div>\r\n\r\n  <div class=\"unselect\" :style=\"numberStyle\" @click=\"clickNum\">{{ inputValue }}</div>\r\n\r\n  <div  class=\"flex-center unselect\"\r\n    @click=\"clickIncrement\">\r\n    <i :style=\"iconRightStyle\" class=\"material-icons\">add</i>\r\n  </div>\r\n  <sweet-modal ref=\"numModal\" overlay-theme=\"dark\">\r\n    <modal @confirm=\"confirm\" @cancel=\"$refs.numModal.close()\">\r\n      <template v-slot:header>수량 입력</template>\r\n      <template v-slot:content>\r\n        <input type=\"number\" v-model.number=\"modalValue\" />\r\n      </template>\r\n    </modal>\r\n  </sweet-modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"QuantityInputPopup\",\r\n  props: {\r\n    value: {\r\n      type: [String, Number],\r\n      required: false\r\n    },\r\n    inputStyle: {\r\n      type: Object,\r\n      default: ()=> {\r\n        return {\r\n          backgroundColor: '#ffffff',\r\n          borderRadius: '4px',\r\n          padding: '0 12px',\r\n          height: '48px',\r\n          width: '100%'\r\n        }\r\n      }\r\n    },\r\n    numberStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          fontSize: '14px',\r\n          fontWeight: '600'\r\n        }\r\n      }\r\n    },\r\n    btnMinusStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          width: '24px',\r\n          height: '24px',\r\n          borderRadius: '4px',\r\n          backgroundColor: '#eeeeee',\r\n          lineHeight: '24px',\r\n          color: '#000',\r\n          textAlign: 'center',\r\n          fontSize: '18px'\r\n        }\r\n      }\r\n    },\r\n    btnPlusStyle: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => {\r\n        return {\r\n          width: '24px',\r\n          height: '24px',\r\n          borderRadius: '4px',\r\n          backgroundColor: '#eeeeee',\r\n          lineHeight: '24px',\r\n          color: '#000',\r\n          textAlign: 'center',\r\n          fontSize: '18px'\r\n        }\r\n      }\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    max: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    disableState: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    numInput: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      inputValue: 0,\r\n      modalValue: 0\r\n    }\r\n  },\r\n  created() {\r\n    if(this.value) {\r\n      this.inputValue = this.value;\r\n    }\r\n  },\r\n  watch: {\r\n    value(n) {\r\n      this.inputValue = n;\r\n    },\r\n    inputValue(n) {\r\n      this.$emit('update:value', n);\r\n    },\r\n    modalValue(n) {\r\n      if(n > this.max) {\r\n        this.modalValue = this.max;\r\n      }\r\n\r\n      /*else if(n < this.min) {\r\n        this.modalValue = this.min;\r\n      }*/\r\n    }\r\n  },\r\n  methods: {\r\n    clickNum() {\r\n      if(this.numInput) {\r\n        this.modalValue = undefined;\r\n        this.$refs.numModal.open();\r\n      }\r\n    },\r\n    confirm() {\r\n      if(this.modalValue) {\r\n        this.inputValue = this.modalValue;\r\n        this.$emit('update:value', this.inputValue)\r\n      }\r\n      this.$refs.numModal.close();\r\n    },\r\n    clickIncrement() {\r\n      if(this.disableState!==undefined) {\r\n        if(!this.disableState) this.inputValue += 1;\r\n      }\r\n      else {\r\n        if(this.inputValue < this.max) {\r\n          this.inputValue += 1;\r\n        }\r\n      }\r\n      this.$emit('update:value', this.inputValue)\r\n    },\r\n    clickDecrement() {\r\n      if(this.inputValue > this.min) {\r\n        this.inputValue -= 1;\r\n      }\r\n      this.$emit('update:value', this.inputValue)\r\n    }\r\n  },\r\n  computed: {\r\n    iconLeftStyle() {\r\n      // disabled style\r\n      if (this.inputValue <= this.min) {\r\n        if (this.btnMinusStyle) {\r\n          let obj = this.cloneItem(this.btnMinusStyle);\r\n          obj.backgroundColor = '#ddd';\r\n          obj.color = '#bbb';\r\n          obj.cursor = 'not-allowed';\r\n          return obj;\r\n        }\r\n        else {\r\n          return {\r\n            width: '30px',\r\n            height: '30px',\r\n            marginRight: '8px',\r\n            backgroundColor: '#ddd',\r\n            color: '#bbb',\r\n            cursor: 'not-allowed'\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      if(this.btnMinusStyle) {\r\n        return this.btnMinusStyle;\r\n      }\r\n      else {\r\n        return {\r\n          width: '30px',\r\n          height: '30px',\r\n          marginRight: '8px'\r\n        }\r\n      }\r\n    },\r\n    iconRightStyle() {\r\n      // disabled style\r\n      if ((this.inputValue >= this.max) || this.disableState) {\r\n        if (this.btnPlusStyle) {\r\n          let obj = this.cloneItem(this.btnPlusStyle);\r\n          obj.backgroundColor = '#ddd';\r\n          obj.color = '#bbb';\r\n          obj.cursor = 'not-allowed';\r\n          return obj;\r\n        }\r\n        else {\r\n          return {\r\n            width: '30px',\r\n            height: '30px',\r\n            marginRight: '8px',\r\n            backgroundColor: '#ddd',\r\n            color: '#bbb',\r\n            cursor: 'not-allowed'\r\n          }\r\n        }\r\n      }\r\n\r\n      if(this.btnPlusStyle) {\r\n        return this.btnPlusStyle;\r\n      }\r\n      else {\r\n        return {\r\n          width: '30px',\r\n          height: '30px',\r\n          marginLeft: '8px'\r\n        }\r\n      }\r\n    },\r\n    inputNumberStyle() {\r\n      if(this.inputStyle) {\r\n        return this.inputStyle;\r\n      } else {\r\n        return {\r\n          width: '33px',\r\n          height: '30px',\r\n          textAlign:'right',\r\n          paddingRight:'6px'\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n  input\r\n    border 1px solid #dddddd\r\n    border-radius 4px\r\n    padding 12px\r\n    width 100%\r\n</style>\r\n"]}]}