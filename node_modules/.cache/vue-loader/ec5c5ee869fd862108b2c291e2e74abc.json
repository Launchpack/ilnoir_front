{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputText.vue?vue&type=style&index=0&id=271da954&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputText.vue","mtime":1605259989000},{"path":"/Users/mard/dev/ilnoir/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.c-input-text-container\n  width 100%\n\n.label\n  display block\n\ninput\n  border 0\n  flex 1\n  background-color transparent\n  -webkit-appearance 'none'\n  -webkit-border-radius 0\n\ntextarea:focus\ninput:focus\n  outline none\n\n.lp-error-msg\n  color #e80000\n  font-size 0.7rem\n  margin-top 4px\n  width: 100%\n\ntextarea\n  width 100%\n  height 100%\n  overflow hidden\n  border 0\n  resize none\n\n.input-disabled\n  background-color #eee\n  color #777\n\n",{"version":3,"sources":["CInputText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqQA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CInputText.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"containStyle ? containStyle : containerStyle\">\r\n    <!-- 레이블 -->\r\n    <div class=\"flex-align\" v-if=\"formType.label && label\">\r\n      <div :style=\"labelStyle\">{{ label }}</div>\r\n      <div v-if=\"type==='number'\">\r\n        <div v-if=\"validate.enable_option\"\r\n          :style=\"[labelStyle,brandColor.help]\" style=\"padding-left:4px\">({{ validate.min }}~{{ validate.max }} 사이 숫자만 입력)</div>\r\n        <div v-else\r\n          :style=\"[labelStyle,brandColor.help]\" style=\"padding-left:4px\">(숫자만 입력)</div>\r\n      </div>\r\n    </div>\r\n    <!-- description -->\r\n    <div v-if=\"formType.description && description\">\r\n      <div :style=\"descriptionStyle\">{{ description }}</div>\r\n    </div>\r\n\r\n    <!-- 인풋 -->\r\n    <div class=\"flex-align full-width position-relative\">\r\n      <!-- 아이콘 -->\r\n      <!--<i v-if=\"icon.enable\"\r\n        class=\"material-icons\"\r\n        :style=\"iconStyle\">\r\n        {{ properties.icon }}\r\n      </i>-->\r\n\r\n      <!-- input -->\r\n      <div\r\n        class=\"flex-align full-width\"\r\n        :class=\"{'input-disabled': disabled===true}\"\r\n        :style=\"disableStyle\"\r\n      >\r\n        <div v-if=\"prefix\" :style=\"brandColor.brand\" style=\"padding-right: 8px\">{{ prefix }}</div>\r\n\r\n        <input\r\n          class=\"input\"\r\n          :style=\"computedInputStyle\"\r\n          ref=\"input\"\r\n          :type=\"type\"\r\n          :value=\"inputValue\"\r\n          min=\"0\"\r\n          :maxlength=\"maxLength\"\r\n          @keyup.enter=\"$emit('onEnter')\"\r\n          @blur=\"chkValid\"\r\n          :placeholder=\"placeholder\"\r\n          @input=\"e => onKeyup(e.target.value)\"\r\n          :readonly=\"disabled===true\"\r\n        />\r\n\r\n        <div v-if=\"formType.unit && unit\" :style=\"unitStyle\" style=\"margin-left: 8px\">{{ unit }}</div>\r\n\r\n      </div>\r\n\r\n      <!-- 삭제 아이콘 -->\r\n      <i\r\n        v-if=\"deleteIcon\r\n              && value\"\r\n        class=\"material-icons unselect\"\r\n        :style=\"deleteIconStyle\"\r\n        @click=\"clear\"\r\n      >clear</i>\r\n    </div>\r\n\r\n    <!-- 에러메세지 -->\r\n    <div\r\n      v-if=\"errorMsg!=='' && !formType.vErrorNotShown\"\r\n      :style=\"errorStyle\"\r\n      class=\"lp-error-msg\"\r\n    >{{ errorMsg }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin';\r\n  \r\n  export default {\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        required: false,\r\n        default: 'text'\r\n      },\r\n      deleteIcon: {\r\n        type: Boolean,\r\n        required: false\r\n      },\r\n      validate: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      prefix: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      containStyle: {\r\n        type: Object,\r\n        required: false\r\n      }\r\n    },\r\n\r\n    created() {\r\n      if(this.value) {\r\n        this.inputValue = this.value;\r\n        if(this.type === 'number') {\r\n          if(typeof(this.inputValue) === String) {\r\n            this.inputValue = this.inputValue.replace(/-/gi, '');\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.computeInputStyle();\r\n      if(this.validate) {\r\n        this.valid = this.validate;\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        inputValue: '',\r\n        errorMsg: '',\r\n        keyup: false,\r\n        valid: {\r\n          valid_required: false,\r\n          error_msg: '',\r\n          max_length:100,\r\n          min_length:0,\r\n          alpha_s: true,\r\n          alpha_g: true,\r\n          special: true,\r\n          num: true\r\n        },\r\n        computedInputStyle: undefined,\r\n        minMsg: ''\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      value(n) {\r\n        this.inputValue = n;\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      maxLength() {\r\n        if (this.validate) \r\n          return this.validate.max_length ? this.validate.max_length : 50;\r\n      },\r\n      inputFormStyle() {\r\n        let deco = {};\r\n        deco.color = this.inputStyle.color;\r\n        return deco;\r\n      },\r\n      iconStyle() {\r\n        let styles = this.cloneItem(this.styles.input.icon);\r\n        let deco = this.decoToStyle(styles);\r\n        deco.position = 'absolute';\r\n        if (this.styles[this.type].icon.direction==='left') deco.right = 'unset';\r\n        else if (this.styles[this.type].icon.direction==='right') deco.left = 'unset';\r\n        return deco;\r\n      },\r\n\r\n      errorStyle() {\r\n        let deco = {\r\n          color: this.brandBgColor.alert\r\n        };\r\n        return deco;\r\n      },\r\n      disableStyle() {\r\n        return {\r\n          borderRadius: this.inputStyle.borderRadius ? this.inputStyle.borderRadius : '0'\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      computeInputStyle() {\r\n        let deco = this.inputStyle;\r\n\r\n        /*let color = this.getColor('기본 테두리선 색상');\r\n        if(this.errorMsg !== '') {\r\n         color = this.brandBgColor.alert.backgroundColor;\r\n        }\r\n\r\n        switch (this.formType && this.formType.input) {\r\n          case 'round':\r\n            deco.borderRadius = this.radius.borderRadius;\r\n            deco.border = `1px solid ${color}`;\r\n            break;\r\n          case 'underline':\r\n            deco.borderBottom = `1px solid ${color}`;\r\n            break;\r\n        }*/\r\n\r\n        deco.fontfamily = 'Noto Sans CJK kr';\r\n\r\n        this.computedInputStyle = deco;\r\n      },\r\n      onKeyup(value) {\r\n        this.inputValue = value;\r\n\r\n        if (this.type === 'phone') {\r\n          this.inputValue= autoHyphenPhone(this.inputValue);\r\n        }\r\n        // 숫자 타입일 때, 최대값이 설정된 경우 그 값이상 못 올라가도록 설정\r\n        else if(this.type === 'number') {\r\n          if(this.validate.enable_option) {\r\n            this.inputValue.replace('-','');\r\n            let min = this.validate.min;\r\n            let max = this.validate.max ? this.validate.max : this.validate.max_length;\r\n            if(min && min > 0) {\r\n              if(min > parseInt(this.inputValue)) {\r\n                this.minMsg = `${min} 이상의 숫자를 입력해주세요`\r\n              }\r\n              else this.minMsg = '';\r\n            }\r\n\r\n            if(max && max > 0) {\r\n              if(parseInt(this.inputValue) > max) {\r\n                this.inputValue= max;\r\n                this.toast(`최대 ${max}까지의 숫자만 입력할 수 있습니다`)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.$emit('update:value', this.inputValue);\r\n      },\r\n      chkValid() {\r\n        if(this.minMsg) this.errorMsg = this.minMsg;\r\n        else this.errorMsg = '';\r\n        // validation이 필수가 아닌 경우\r\n        if (!this.validate.valid_required) return;\r\n\r\n        let props = {\r\n          value: this.value,\r\n          type: this.type,\r\n          validate: this.validate\r\n        }\r\n\r\n        this.errorMsg = this.isValid(props, this.name);\r\n        this.validate.error_msg = this.errorMsg;\r\n        // this.valid.error_msg = this.errorMsg;\r\n        this.computeInputStyle();\r\n      },\r\n      clear() {\r\n        this.inputValue = '';\r\n        this.$emit('update:value', this.inputValue);\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n  .c-input-text-container\r\n    width 100%\r\n\r\n  .label\r\n    display block\r\n\r\n  input\r\n    border 0\r\n    flex 1\r\n    background-color transparent\r\n    -webkit-appearance 'none'\r\n    -webkit-border-radius 0\r\n\r\n  textarea:focus\r\n  input:focus\r\n    outline none\r\n\r\n  .lp-error-msg\r\n    color #e80000\r\n    font-size 0.7rem\r\n    margin-top 4px\r\n    width: 100%\r\n\r\n  textarea\r\n    width 100%\r\n    height 100%\r\n    overflow hidden\r\n    border 0\r\n    resize none\r\n\r\n  .input-disabled\r\n    background-color #eee\r\n    color #777\r\n\r\n</style>\r\n"]}]}