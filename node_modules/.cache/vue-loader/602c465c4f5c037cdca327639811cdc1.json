{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockRegions.vue?vue&type=style&index=0&id=309e6366&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockRegions.vue","mtime":1605259980000},{"path":"/Users/mard/dev/grit12/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.sido-item, .sigungu-item\n  padding: 12px 8px\n  height: 40px\n",{"version":3,"sources":["BlockRegions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqaA;AACA;AACA","file":"BlockRegions.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\r\n<div :style=\"pagePadding\" style=\"padding-top:20px; padding-bottom:20px;\">\r\n  \r\n  <!--주소 선택-->\r\n  <div class=\"flex-between\" style=\"margin-bottom:12px;\">\r\n    <div class=\"title size-20 bold\" :style=\"brandColor.main\">지역 선택</div>\r\n    <!--<div class=\"flex-align\">-->\r\n    <div v-if=\"$store.getters.social_key.naver.map.client_id !== ''\" class=\"col-6 button size-12 flex-between unselect\" style=\"padding:8px; width: 116px; height:32px; border-radius:4px;\" \r\n      :style=\"[brandBgColor.sub, brandColor.main]\"\r\n      @click=\"clickCurrent\">\r\n      <i class=\"material-icons size-20\" style=\"color: #48b0f7;\">gps_fixed</i>\r\n      <span>내 위치로 설정</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"full-width\" style=\"height: 40vh; overflow-y: scroll\">\r\n    <!-- 시도/시군구 데이터 -->\r\n    <div class=\"flex size-12 weight-500\" :style=\"{borderTop: brandBorder.main.border, borderBottom: brandBorder.main.border}\">\r\n      <!-- 시도 (좌측) -->\r\n        <div :style=\"[colLeft, scrollLeftStyle]\">\r\n          <div v-for=\"(item, idx) in sido\"\r\n               :key=\"`sido${idx}`\"\r\n               class=\"sido-item flex-align unselect\"\r\n               :style=\"[itemStyle(item, 'sido', idx)]\"\r\n               @click.stop.prevent=\"clickSido(item)\"\r\n               @mouseover.stop.prevent=\"overSido(item)\"\r\n               @mouseleave.stop.prevent=\"leaveSido\">\r\n            {{ item.name }}\r\n          </div>\r\n        </div>\r\n      <!-- 시군구 (우측) -->\r\n        <div :style=\"[colRight, scrollRightStyle]\">\r\n          <div v-for=\"(item, idx) in sigungu\"\r\n               :key=\"`sigungu${idx}`\"\r\n               class=\"sigungu-item flex-align unselect\"\r\n               :style=\"[itemStyle(item, 'sigungu', idx)]\"\r\n               @click.stop.prevent=\"clickSigungu(item)\"\r\n               @mouseover.stop.prevent=\"overSigungu(item)\"\r\n               @mouseleave.stop.prevent=\"leaveSigungu\">\r\n            {{ item.name }}\r\n            <i v-if=\"item.id===selectedSigungu.id\" class=\"material-icons size-20\" :style=\"brandColor.white\">check</i>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"flex\" style=\"margin-top:24px;\">\r\n    <div class=\"weight-500 size-14 flex-center\" :style=\"[radius, brandBgColor.sub, brandColor.main]\"\r\n      style=\"height: 48px; width: 50%; margin-right: 4px;\" @click.stop.prevent=\"$emit('closeModal')\">취소</div>\r\n    <div class=\"weight-500 size-14 flex-center\" :style=\"[radius, brandBgColor.primary, brandColor.white]\"\r\n      style=\"height: 48px; width: 50%; margin-left: 4px;\" @click.stop.prevent=\"selectRegion\">완료</div>\r\n  </div>\r\n  \r\n</div>\r\n</template>\r\n<script>\r\nimport CardMixin from '@/components/Mixins/CardMixin';\r\n\r\nexport default {\r\n  name: 'BlockRegion',\r\n  components: {\r\n\r\n  },\r\n  mixins: [\r\n    CardMixin\r\n  ],\r\n  props: {\r\n    scrollHeight: {\r\n      type: Number,\r\n      default: 300,\r\n      required: false,\r\n    },\r\n    filterOptions: {\r\n      type: Object,\r\n    },\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      \"dong\": [],\r\n      \"sido\": [],\r\n      \"type\": \"service\",\r\n      \"address\": {},\r\n      \"showMap\": false,\r\n      \"sigungu\": [],\r\n      \"hoverSido\": {},\r\n      \"hoverSigungu\": {},\r\n      \"selectedSido\": {},\r\n      \"selectedSigungu\": {}\r\n    }\r\n  },\r\n  created() {\r\n    // 시/도 데이터 가져오기\r\n    this.$axios.get(`public/address/${this.type}/sido`)\r\n      .then(res => {\r\n        if ( res.status === 200 ) {\r\n          this.sido = res.data;\r\n          this.sido.unshift({\r\n            id: '',\r\n            label: '전체',\r\n            name: '전체',\r\n            value: ''\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  },\r\n  \r\n  methods: {\r\n    getAddress(params) {\r\n      \r\n      console.log('params',params)\r\n\r\n      /* 좌표 세팅 로직 시작 */\r\n      if (params === undefined) {\r\n        // navigator 로 현재 좌표 가져오기\r\n        if (navigator.geolocation) { // GPS를 지원하면 navigator.geolocation 으로 현재 좌표 얻어오기\r\n          navigator.geolocation.getCurrentPosition(position => {\r\n            this.address.latitude = position.coords.latitude;\r\n            this.address.longitude = position.coords.longitude;\r\n            \r\n            let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n            this.$store.commit('setCurrentPosition', location);\r\n            this.$store.commit('setCurrentAddress', this.address);\r\n            // this.$emit('currentAddress', this.address);\r\n            \r\n            \r\n            // 다시 호출해서 좌표 업데이트하는 방식 - recursive\r\n            this.getAddress(location);\r\n            /*무한루프로 코드 제거*/\r\n          }, error => {\r\n            let address = {\r\n              lat: 37.5666805,\r\n              lng: 126.9784147\r\n            };\r\n            this.$axios.get(`public/service/geocode?latitude=${address.lat}&longitude=${address.lng}`)\r\n            .then(res => {\r\n              if (res.status === 200) {\r\n                if (res.data.address) {\r\n                  this.address = res.data.address;\r\n  \r\n                  let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n                  this.$store.commit('setCurrentPosition', location);                \r\n                  this.$store.commit('setCurrentAddress', this.address);\r\n                  this.$emit('currentAddress', this.address);\r\n                }\r\n  \r\n                // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\r\n                // if (res.data.address === false) this.setFullAddress(false);\r\n                // else this.setFullAddress(true);\r\n  \r\n                // 위치 업데이트 emit\r\n                this.$emit('updatePosition');\r\n  \r\n                // this.setFullAddress();\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n          }, {\r\n            enableHighAccuracy: false,\r\n            maximumAge:Infinity,\r\n            timeout: 10000\r\n          });\r\n        } \r\n        else {\r\n          console.log('GPS를 지원하지 않습니다');\r\n        }\r\n      }\r\n      else {\r\n        console.log('address', this.address)\r\n        \r\n        this.address.latitude = params.lat;\r\n        this.address.longitude = params.lng;\r\n        \r\n        let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n        this.$store.commit('setCurrentPosition', location);\r\n        this.$store.commit('setCurrentAddress', this.address);\r\n        this.$emit('changePosition', location)\r\n        // this.$emit('currentAddress', this.address);\r\n        \r\n        // 가져온 좌표로 주소 받아오기\r\n        setTimeout(() => {\r\n          this.$axios.get(`public/service/geocode?latitude=${this.address.latitude}&longitude=${this.address.longitude}`)\r\n            .then(res => {\r\n              if (res.status === 200) {\r\n                if (res.data.address) {\r\n                  this.address = res.data.address;\r\n\r\n                  let addressLabel = `${this.address.sido} ${this.address.sigungu}`;\r\n  \r\n                  let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n                  this.$store.commit('setCurrentPosition', location);  \r\n                  \r\n                  let sido = {\r\n                    id: this.address.sido_id,\r\n                    name: this.address.sido,\r\n                    label: this.address.sido,\r\n                    value: this.address.sido_id\r\n                  };\r\n                  let sigungu = {\r\n                    id: this.address.sigungu_id,\r\n                    name: this.address.sigungu,\r\n                    label: this.address.sigungu,\r\n                    value: this.address.sigungu_id\r\n                  }\r\n                  this.$emit('selectedRegion', {\r\n                    sido: sido,\r\n                    sigungu: sigungu\r\n                  });\r\n\r\n                  this.filterOptions.set.forEach(setItem => {\r\n                    if (setItem.operator ==='__sido__id') {\r\n                      setItem.value = this.address.sido_id;\r\n                      setItem.label = this.address.sido;\r\n                    } else if(setItem.operator ==='__sigungu__id') {\r\n                      setItem.value = this.address.sigungu_id;\r\n                      setItem.label = this.address.sigungu;\r\n                    }\r\n                  })\r\n                  this.$emit('update:filterOptions', this.filterOptions)\r\n\r\n                  this.$emit('selectedLabel',0,addressLabel)\r\n                  this.$emit('selectFilter')\r\n                }\r\n  \r\n                // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\r\n                // if (res.data.address === false) this.setFullAddress(false);\r\n                // else this.setFullAddress(true);\r\n  \r\n                // 위치 업데이트 emit\r\n                // this.$emit('updatePosition');\r\n  \r\n                // this.setFullAddress();\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              this.toast('현위치 설정에 실패하였습니다')\r\n            })\r\n        }, 500)\r\n      }\r\n      //this.$emit('selectedLabel',0,this.address)\r\n      //this.$emit('selectFilter')\r\n      this.selectedSido = {};\r\n      this.selectedSigungu = {};\r\n      this.$emit('closeModal');\r\n      /* 좌표 세팅 로직 끝 */\r\n    },\r\n    // 현재 위치로 설정\r\n    clickCurrent() {\r\n      this.getAddress();\r\n    },\r\n    // 마우스 오버, 클릭 style 때문에 methods로 처리\r\n    itemStyle(item, type, idx) {\r\n      let deco = {\r\n        color: this.brandColor.main.color,\r\n        borderBottom: this.brandBorder.main.border\r\n        // marginBottom: this.layout_gutter+'px'\r\n      };\r\n\r\n      // 시도 아이템: 마우스오버 or 클릭 시 배경색상\r\n      if ( type === 'sido' && item !== undefined ) {\r\n        deco.background = this.brandBgColor.sub.backgroundColor;\r\n        if ( item.id === this.hoverSido.id || item.id === this.selectedSido.id ) {\r\n          deco.background = this.brandBgColor.primary.backgroundColor;\r\n          deco.color = '#fff';\r\n          if (idx === this.sido.length-1) deco.border = 'none';\r\n        }\r\n      }\r\n\r\n      // 시군구 아이템: 마우스오버 or 클릭 시 배경색상\r\n      if ( type === 'sigungu' && item !== undefined ) {\r\n        deco.background = this.brandBgColor.white.backgroundColor;\r\n        if ( item.id === this.hoverSigungu.id || item.id === this.selectedSigungu.id ) {\r\n          deco.background = this.brandBgColor.primary.backgroundColor;\r\n          deco.color = '#fff';\r\n          deco.justifyContent = 'space-between';\r\n          if (idx === this.sigungu.length-1) deco.border = 'none';\r\n        }\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    clickSido(item) {\r\n        // 시군구 데이터 가져오기\r\n        if (item.id !== '') {\r\n          this.$axios.get(`public/address/${this.type}/sido/${item.id}/sigungu`)\r\n          .then(res => {\r\n            if ( res.status === 200 ) {\r\n              this.sigungu = res.data;\r\n              this.selectedSido = item;\r\n              this.selectedSigungu = {};\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n        } else {\r\n          this.sigungu = [\r\n            {\r\n              id: '',\r\n              label: '전체',\r\n              name: '전체',\r\n              sido_id: '',\r\n              value: '',\r\n            }\r\n          ];\r\n          this.selectedSido = item;\r\n          this.selectedSigungu = {};\r\n        }\r\n      },\r\n    clickSigungu(item) {\r\n        this.selectedSigungu = item;\r\n        this.$emit('selectedRegion', {\r\n          sido: this.selectedSido,\r\n          sigungu: this.selectedSigungu\r\n        });\r\n      },\r\n    selectRegion() {\r\n        let address = `${this.selectedSido.name} ${this.selectedSigungu.name}`;\r\n        if (this.selectedSido.name==='세종특별자치시') address = this.selectedSido.name;\r\n        if (this.selectedSido.name === '전체') address = this.selectedSido.name;\r\n        let url = `/public/service/local?search_text=${address}`;\r\n\r\n        if (this.isIE) {\r\n          url = encodeURI(`/public/service/local?search_text=${address}`);\r\n        }\r\n\r\n        this.$axios.get(url)\r\n        .then(res => {\r\n          if (res.status===200) {\r\n            let location = res.data.local_list[0];\r\n            if (location && Object.keys(location).length !== 0) {\r\n              this.$store.commit('setCurrentPosition', {\r\n                lng: location.x,\r\n                lat: location.y\r\n              })\r\n            }\r\n            this.filterOptions.set.forEach(setItem => {\r\n              if (setItem.operator ==='__sido__id') {\r\n                setItem.value = this.selectedSido.id;\r\n                setItem.label = this.selectedSido.label;\r\n              } else if(setItem.operator ==='__sigungu__id') {\r\n                setItem.value = this.selectedSigungu.id;\r\n                setItem.label = this.selectedSigungu.label;\r\n              }\r\n            })\r\n            this.$emit('update:filterOptions', this.filterOptions)\r\n            this.$emit('selectedLabel',0,address)\r\n            this.$emit('selectFilter')\r\n            this.$emit('closeModal');\r\n          }\r\n        })       \r\n      },\r\n    selectMap(val) {\r\n        this.$store.commit('setCurrentPosition', {\r\n          lng: val.x,\r\n          lat: val.y\r\n        })\r\n        this.$emit('changePosition', {\r\n          lng: val.x,\r\n          lat: val.y\r\n        })\r\n        this.showMap = false;\r\n        this.selectedSido = {};\r\n        this.selectedSigungu = {};\r\n      },\r\n    overSido(item) {\r\n        this.hoverSido = item;\r\n      },\r\n    leaveSido() {\r\n        this.hoverSido = {};\r\n      },\r\n    overSigungu(item) {\r\n        this.hoverSigungu = item;\r\n      },\r\n    leaveSigungu() {\r\n        this.hoverSigungu = {};\r\n      }\r\n  },\r\n  computed: {\r\n    colLeft() {\r\n      return {\r\n        width: '38%',\r\n        marginRight: `${this.layout_gutter/2}px`\r\n      }\r\n    },\r\n    colRight() {\r\n      return {\r\n        width: '62%',\r\n        marginLeft: `${this.layout_gutter/2}px`\r\n      }\r\n    },\r\n    scrollLeftStyle() {\r\n      let scrollbar = this.getScrollbarWidth();\r\n      return {\r\n        width: `calc(38% + ${scrollbar}px)`,\r\n        height: `calc(100vh - ${this.scrollHeight}px)`,\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden'\r\n      }\r\n    },\r\n    scrollRightStyle() {\r\n      let scrollbar = this.getScrollbarWidth();\r\n      return {\r\n        width: `calc(62% + ${scrollbar}px)`,\r\n        height: `calc(100vh - ${this.scrollHeight}px)`,\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden'\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    \r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .sido-item, .sigungu-item\r\n    padding: 12px 8px\r\n    height: 40px\r\n</style>\r\n\r\n"]}]}