{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/LaunchPack_Common/Header/modowaImgTxt/Gnbs.vue?vue&type=style&index=0&id=6451b902&scoped=true&lang=css&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/LaunchPack_Common/Header/modowaImgTxt/Gnbs.vue","mtime":1605260059000},{"path":"/Users/mard/dev/ilnoir/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.list-wrap {\n  overflow: hidden;\n}\n.grab-bing {\n  white-space: nowrap;\n  position: relative;\n}\n.list-item {\n  display: inline-block;\n}\n",{"version":3,"sources":["Gnbs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gnbs.vue","sourceRoot":"src/components/LaunchPack_Common/Header/modowaImgTxt","sourcesContent":["<template>\n<div>\n  <div class=\"grid-box flex-align full-width\">\n    <div v-for=\"(item,idx) in menu\"\n        :key=\"'tab-'+item.id\" class=\"unselect list-item position-relative col-3\"\n        :style=\"itemStyle(item.id)\"\n        @click.stop.prevent=\"clickTab(item,idx)\"\n        :ref=\"'tabItem'+idx\"\n        >\n        <div class=\"flex-justify\">\n          <div :style=\"categoryImg(item)\"></div>\n        </div>\n        <div class=\"ellipsis size-13\" \n          style=\"text-align:center;margin-top:10px;width:100%\">{{ item.name }}</div>\n        <div class=\"position-absolute\"></div>\n          <div v-if=\"item.id===selectedTab\" class=\"indicator\" :style=\"indicatorStyle\"></div>     \n    </div>\n  </div>\n</div>\n</template>\n<script>\nimport GnbsMixin from \"@/components/Mixins/GnbsMixin\"\n\nexport default {\n  name: 'Gnbs',\n  components: {\n\n  },\n  mixins: [\n    GnbsMixin\n  ],\n  props: {\n    menu: {\n      type: Array,\n      required: false,\n    },\n    depth: {\n      type: Number,\n      required: false,\n    },\n    indicatorStyle: {\n      type: Object,\n      required: false,\n    },\n    customItemStyle: {\n      type: Object,\n      required: false,\n    },\n    selectedItemStyle: {\n      type: Object,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"dragging\": false,\n      \"selectedTab\": 0\n    }\n  },\n  created() {\n    this.init();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    itemStyle(id) {\n      let obj = {\n        padding: '10px 0',\n        borderBottom: this.brandBorder.main.border,\n        borderRight: this.brandBorder.main.border\n      };\n\n      if(id) {\n        if (id===this.selectedTab) {\n          if(this.selectedItemStyle) {\n            return Object.assign(obj, this.selectedItemStyle);\n          }\n          else {\n            obj.color = this.brandColor.brand.color;\n          }\n        } \n      }\n      else {\n        let me = this.menu.filter(item => { return item.link === this.$route.path.slice(1) });\n        if (me && me.length>0) {\n          if(this.selectedItemStyle) {\n            return Object.assign(obj, this.selectedItemStyle);\n          }\n          else {\n            obj.color = this.brandColor.brand.color;\n          }\n        }\n      }\n      \n\n      if (this.customItemStyle) {\n        return Object.assign(obj, this.customItemStyle);\n      } else {\n        return obj;\n      }\n    },\n    categoryImg(item) {\n        let obj = {\n          width: '36px',\n          height: '36px',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'noRepeat',\n          borderRadius: '4px'\n        };\n        if(item.id===this.selectedTab) {\n          if(item.img_after) {\n            obj.backgroundImage = `url(${item.img_after})`;\n          }\n          else {\n            obj.backgroundImage = `url(${this.dummyImage.bg})`;\n          }\n        }\n        else {\n          if(item.img_before) {\n            obj.backgroundImage = `url(${item.img_before})`;\n          }\n          else {\n            obj.backgroundImage = `url(${this.dummyImage.bg})`;\n          }\n        }\n        \n        return obj;\n      }\n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n</script>\n<style scoped>\n.list-wrap {\n  overflow: hidden;\n}\n.grab-bing {\n  white-space: nowrap;\n  position: relative;\n}\n.list-item {\n  display: inline-block;\n}\n</style>\n\n"]}]}