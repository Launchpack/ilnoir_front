{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputAddress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputAddress.vue","mtime":1605259985000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FormMixin from \"@/components/Mixins/FormMixin\";\n\nexport default {\n  name: \"c-input-address\",\n\n  head: {\n    script() {\n      return [\n        {\n          type: \"text/javascript\",\n          src: \"https://ssl.daumcdn.net/dmaps/map_js_init/postcode.v2.js\",\n          head: true\n        }\n      ];\n    }\n  },\n\n  mixins: [FormMixin],\n\n  props: {\n    value: {\n      type: [Object, String],\n      required: false\n    },\n    label: {\n      type: String,\n      required: false\n    },\n    addressInputWrapStyle: {\n      type: Object,\n      required: false,\n      default: function () {\n        return {\n          marginTop: \"4px\"\n        };\n      }\n    },\n    addressButtonCustomStyle: {\n      type: Object,\n      required: false\n    },\n    addressButtonIcon: {\n      type: Object,\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      showMobile: false,\n      address_detail_ph: \"\",\n      address: {\n        sido: \"\",\n        sigungu: \"\",\n        dong: \"\",\n        detail: \"\",\n        post_code: \"\",\n        old: \"\",\n        new: \"\",\n        latitude: \"\",\n        longitude: \"\"\n      }\n    };\n  },\n\n  watch: {\n    value(n) {\n      if (!n)\n        this.address = {\n          sido: \"\",\n          sigungu: \"\",\n          dong: \"\",\n          old: \"\",\n          new: \"\",\n          full: \"\",\n          post_code: \"\",\n          detail: \"\"\n        };\n      else this.address = n;\n    },\n    address: {\n      handler(n) {\n        this.$emit(\"update:value\", n);\n      },\n      deep: true\n    }\n  },\n\n  created() {\n    if (!this.value) {\n      this.address = {\n        sido: \"\",\n        sigungu: \"\",\n        dong: \"\",\n        old: \"\",\n        new: \"\",\n        full: \"\",\n        post_code: \"\",\n        detail: \"\"\n      };\n    } else {\n      this.address = this.value;\n    }\n  },\n\n  methods: {\n    openDaumPostcode() {\n      // 모바일인 경우\n      let isMobile = false;\n      if (navigator.userAgent.match(/Android/i)\n        || navigator.userAgent.match(/webOS/i)\n        || navigator.userAgent.match(/iPhone/i)\n        || navigator.userAgent.match(/iPod/i)\n        || navigator.userAgent.match(/iPad/i)\n        || navigator.userAgent.match(/BlackBerry/i)\n        || navigator.userAgent.match(/Windows Phone/i)\n      ) {\n        isMobile = true;\n      }\n      daum.postcode.load(() => {\n        let pos_code = new daum.Postcode({\n          oncomplete: data => {\n            this.address.sido = data.sido;\n            this.address.sigungu = data.sigungu;\n            this.address.dong = data.bname;\n            this.address.old = data.jibunAddress\n              ? data.jibunAddress\n              : data.autoJibunAddress;\n            this.address.new = data.roadAddress\n              ? data.roadAddress\n              : data.autoRoadAddress;\n            this.address_detail_ph = \"상세 주소\";\n            this.address.post_code = data.zonecode;\n            this.setPosition();\n\n            if (isMobile) {\n              // this.showMobile = false;\n              // let layer = '';\n              // let el = document.getElementsByTagName('body')[0];\n              // for(let i=0; i<el.children.length; i++) {\n              //   if(el.children[i].id.indexOf('__daum__layer')>-1) {\n              //     layer = el.children[i];\n              //   }\n              // }\n              // el.removeChild(layer)\n              this.clickClose();\n            }\n          }\n        });\n        if (!isMobile) {\n          pos_code.open();\n        }\n        else {\n          let layer = document.createElement('div');\n          layer.setAttribute('id', 'layer');\n          layer.style.display = 'none';\n          let main = document.getElementsByClassName('app-main')[0];\n          main.appendChild(layer);\n          this.showMobile = true;\n          layer.style.display = 'block'\n          pos_code.embed(layer);\n          this.$nextTick(() => {\n            // let layer = '';\n            // let el = document.getElementsByTagName('body')[0];\n            // for(let i=0; i<el.children.length; i++) {\n            //   if(el.children[i].id.indexOf('__daum__layer')>-1) {\n            //     layer = el.children[i];\n            //   }\n            // }\n            // console.log(layer)\n            if(layer) {\n              // let el = document.getElementById('__daum__layer_1');\n              let addressArea = layer.firstElementChild;\n              addressArea.style.position = 'absolute';\n              addressArea.style.top = 0;\n              addressArea.style.left = 0;\n              addressArea.style.zIndex = 1000;\n              addressArea.style.height = '100%';\n              addressArea.style.width = '100%';\n            }\n          })\n        }\n      });\n    },\n    setPosition() {\n      this.$axios\n        .get(\"public/service/geocode?address=\" + encodeURI(this.address.old))\n        .then(res => {\n          this.address.latitude = res.data.position.latitude;\n          this.address.longitude = res.data.position.longitude;\n        });\n    },\n    clickClose() {\n      this.showMobile = false;\n      let layer = document.getElementById('layer');\n      let main = document.getElementsByClassName('app-main')[0];\n      layer.style.display = 'none';\n      main.removeChild(layer);\n      // let el = document.getElementsByTagName('body')[0];\n      // for(let i=0; i<el.children.length; i++) {\n      //   if(el.children[i].id.indexOf('__daum__layer')>-1) {\n      //     layer = el.children[i];\n      //   }\n      // }\n      // el.removeChild(layer);\n    }\n  }\n};\n",{"version":3,"sources":["CInputAddress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CInputAddress.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\">\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <div v-if=\"showMobile\"\r\n      style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; z-index: 999\">\r\n      <page-header style=\"left: 0\">\r\n        <div slot=\"left\">\r\n          <i class=\"material-icons header-icon\" @click=\"clickClose\" style=\"margin: 0 10px;\">close</i>\r\n        </div>\r\n        <span class=\"header-title\" slot=\"center\">주소 검색</span>\r\n      </page-header>\r\n    </div>\r\n\r\n    <div>\r\n      <div class=\"flex-align\" :style=\"addressInputWrapStyle\">\r\n        <input\r\n            class=\"address-zipcode\"\r\n            placeholder=\"우편번호\"\r\n            v-model=\"address.post_code\"\r\n            type=\"text\"\r\n            readonly\r\n            :style=\"inputStyle\"\r\n        />\r\n        <div class=\"unselect\">\r\n          <div :style=\"buttonStyle\" @click=\"openDaumPostcode\">\r\n            <i\r\n                v-if=\"addressButtonIcon\"\r\n                style=\"margin-right: 7px\"\r\n                :class=\"addressButtonIcon.className\"\r\n            >{{ addressButtonIcon.iconName }}</i> 주소 검색\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div :style=\"addressInputWrapStyle\">\r\n        <input\r\n            v-model=\"address.new\"\r\n            placeholder=\"시/도 시/군/구\"\r\n            class=\"full-width\"\r\n            type=\"text\"\r\n            readonly\r\n            :style=\"inputStyle\"\r\n        />\r\n      </div>\r\n      <div :style=\"addressInputWrapStyle\">\r\n        <input\r\n            :value=\"address.detail\"\r\n            class=\"full-width\"\r\n            @input=\"e => address.detail = e.target.value\"\r\n            type=\"text\"\r\n            placeholder=\"상세주소\"\r\n            :style=\"inputStyle\"\r\n        />\r\n        <!-- :placeholder=\"address_detail_ph\" -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from \"@/components/Mixins/FormMixin\";\r\n\r\n  export default {\r\n    name: \"c-input-address\",\r\n\r\n    head: {\r\n      script() {\r\n        return [\r\n          {\r\n            type: \"text/javascript\",\r\n            src: \"https://ssl.daumcdn.net/dmaps/map_js_init/postcode.v2.js\",\r\n            head: true\r\n          }\r\n        ];\r\n      }\r\n    },\r\n\r\n    mixins: [FormMixin],\r\n\r\n    props: {\r\n      value: {\r\n        type: [Object, String],\r\n        required: false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      addressInputWrapStyle: {\r\n        type: Object,\r\n        required: false,\r\n        default: function () {\r\n          return {\r\n            marginTop: \"4px\"\r\n          };\r\n        }\r\n      },\r\n      addressButtonCustomStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      addressButtonIcon: {\r\n        type: Object,\r\n        required: false\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        showMobile: false,\r\n        address_detail_ph: \"\",\r\n        address: {\r\n          sido: \"\",\r\n          sigungu: \"\",\r\n          dong: \"\",\r\n          detail: \"\",\r\n          post_code: \"\",\r\n          old: \"\",\r\n          new: \"\",\r\n          latitude: \"\",\r\n          longitude: \"\"\r\n        }\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      value(n) {\r\n        if (!n)\r\n          this.address = {\r\n            sido: \"\",\r\n            sigungu: \"\",\r\n            dong: \"\",\r\n            old: \"\",\r\n            new: \"\",\r\n            full: \"\",\r\n            post_code: \"\",\r\n            detail: \"\"\r\n          };\r\n        else this.address = n;\r\n      },\r\n      address: {\r\n        handler(n) {\r\n          this.$emit(\"update:value\", n);\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n\r\n    created() {\r\n      if (!this.value) {\r\n        this.address = {\r\n          sido: \"\",\r\n          sigungu: \"\",\r\n          dong: \"\",\r\n          old: \"\",\r\n          new: \"\",\r\n          full: \"\",\r\n          post_code: \"\",\r\n          detail: \"\"\r\n        };\r\n      } else {\r\n        this.address = this.value;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      openDaumPostcode() {\r\n        // 모바일인 경우\r\n        let isMobile = false;\r\n        if (navigator.userAgent.match(/Android/i)\r\n          || navigator.userAgent.match(/webOS/i)\r\n          || navigator.userAgent.match(/iPhone/i)\r\n          || navigator.userAgent.match(/iPod/i)\r\n          || navigator.userAgent.match(/iPad/i)\r\n          || navigator.userAgent.match(/BlackBerry/i)\r\n          || navigator.userAgent.match(/Windows Phone/i)\r\n        ) {\r\n          isMobile = true;\r\n        }\r\n        daum.postcode.load(() => {\r\n          let pos_code = new daum.Postcode({\r\n            oncomplete: data => {\r\n              this.address.sido = data.sido;\r\n              this.address.sigungu = data.sigungu;\r\n              this.address.dong = data.bname;\r\n              this.address.old = data.jibunAddress\r\n                ? data.jibunAddress\r\n                : data.autoJibunAddress;\r\n              this.address.new = data.roadAddress\r\n                ? data.roadAddress\r\n                : data.autoRoadAddress;\r\n              this.address_detail_ph = \"상세 주소\";\r\n              this.address.post_code = data.zonecode;\r\n              this.setPosition();\r\n\r\n              if (isMobile) {\r\n                // this.showMobile = false;\r\n                // let layer = '';\r\n                // let el = document.getElementsByTagName('body')[0];\r\n                // for(let i=0; i<el.children.length; i++) {\r\n                //   if(el.children[i].id.indexOf('__daum__layer')>-1) {\r\n                //     layer = el.children[i];\r\n                //   }\r\n                // }\r\n                // el.removeChild(layer)\r\n                this.clickClose();\r\n              }\r\n            }\r\n          });\r\n          if (!isMobile) {\r\n            pos_code.open();\r\n          }\r\n          else {\r\n            let layer = document.createElement('div');\r\n            layer.setAttribute('id', 'layer');\r\n            layer.style.display = 'none';\r\n            let main = document.getElementsByClassName('app-main')[0];\r\n            main.appendChild(layer);\r\n            this.showMobile = true;\r\n            layer.style.display = 'block'\r\n            pos_code.embed(layer);\r\n            this.$nextTick(() => {\r\n              // let layer = '';\r\n              // let el = document.getElementsByTagName('body')[0];\r\n              // for(let i=0; i<el.children.length; i++) {\r\n              //   if(el.children[i].id.indexOf('__daum__layer')>-1) {\r\n              //     layer = el.children[i];\r\n              //   }\r\n              // }\r\n              // console.log(layer)\r\n              if(layer) {\r\n                // let el = document.getElementById('__daum__layer_1');\r\n                let addressArea = layer.firstElementChild;\r\n                addressArea.style.position = 'absolute';\r\n                addressArea.style.top = 0;\r\n                addressArea.style.left = 0;\r\n                addressArea.style.zIndex = 1000;\r\n                addressArea.style.height = '100%';\r\n                addressArea.style.width = '100%';\r\n              }\r\n            })\r\n          }\r\n        });\r\n      },\r\n      setPosition() {\r\n        this.$axios\r\n          .get(\"public/service/geocode?address=\" + encodeURI(this.address.old))\r\n          .then(res => {\r\n            this.address.latitude = res.data.position.latitude;\r\n            this.address.longitude = res.data.position.longitude;\r\n          });\r\n      },\r\n      clickClose() {\r\n        this.showMobile = false;\r\n        let layer = document.getElementById('layer');\r\n        let main = document.getElementsByClassName('app-main')[0];\r\n        layer.style.display = 'none';\r\n        main.removeChild(layer);\r\n        // let el = document.getElementsByTagName('body')[0];\r\n        // for(let i=0; i<el.children.length; i++) {\r\n        //   if(el.children[i].id.indexOf('__daum__layer')>-1) {\r\n        //     layer = el.children[i];\r\n        //   }\r\n        // }\r\n        // el.removeChild(layer);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .address-zipcode {\r\n    // margin-bottom 4px\r\n    display: inline-block;\r\n    width: 92px;\r\n    margin-right: 10px;\r\n  }\r\n</style>\r\n"]}]}