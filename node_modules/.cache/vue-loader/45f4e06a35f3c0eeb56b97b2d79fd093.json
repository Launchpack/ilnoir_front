{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Slot/ListSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Slot/ListSlider.vue","mtime":1605259990000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Slick from 'vue-slick'\nimport uuidv4 from 'uuid/v4'\n\nexport default {\n  name: 'list-slider',\n\n  components: {\n    Slick\n  },\n\n  props: {\n    arrow: {\n      type: Boolean,\n      default: false\n    },\n    indicator: {\n      type: Boolean,\n      default: false\n    },\n    listData: {\n      type: Array,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: false\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    slidesToShow: {\n      type: Number,\n      default: 1\n    },\n    slidesToScroll: {\n      type: Number,\n      default: 1\n    },\n    autoplaySpeed: {\n      type: Number,\n      default: 3000\n    },\n    arrowLeftStyle: {\n      type: Object,\n      required: false\n    },\n    arrowRightStyle: {\n      type: Object,\n      required: false\n    },\n    centerPadding: {\n      type: String,\n      default: ''\n    }\n  },\n\n  data() {\n    return {\n      currentSlide: 0,\n      reRender: true,\n      slickId: '',\n      rendered: false\n    }\n  },\n\n  created() {\n    this.slickId = 'slick-'+uuidv4();\n  },\n\n  mounted() {\n    if(!this.rendered) {\n      this.$nextTick(() => {\n        this.reRenderSlick();\n        this.rendered = true;\n      });\n    }\n  },\n\n\n  methods: {\n    reRenderSlick() {\n      if(this.reRender === false) return;\n\n      this.$nextTick(() => {\n        this.reRender = false;\n        setTimeout(() => {\n          this.reRender = true;\n\n          this.$nextTick(() => {\n            this.$refs[this.slickId].$el.getElementsByClassName('slick-list')[0].addEventListener('touchstart', () => {\n              console.log('touchstart');\n              this.$refs[this.slickId].play();\n            });\n          });\n        },200);\n      });\n    },\n\n    handleAfterChange(event, slick, currentSlide) {\n      this.currentSlide = currentSlide;\n    }\n  },\n\n  computed: {\n    currentIndicatorStyle() {\n      return {\n        width: '8px',\n        height: '8px',\n        borderRadius: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        marginRight: '4px'\n      };\n    },\n\n    indicatorStyle() {\n      return {\n        width: '8px',\n        height: '8px',\n        borderRadius: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        marginRight: '4px'\n      };\n    },\n\n    // 슬릭 옵션\n    slickOptions() {\n\n      return {\n        infinite: true,\n        variableWidth: false,\n        centerPadding: this.centerPadding,\n        centerMode: false,\n        autoplay: this.autoplay,\n        arrows: false,\n        dots: false,\n        slidesToShow: this.slidesToShow,\n        slidesToScroll: this.slidesToScroll,\n        autoplaySpeed: this.autoplaySpeed,\n        responsive: [ { settings: { waitForAnimate : false, pauseOnFocus : false, pauseOnHover : false, swipe : false } } ]\n      }\n    },\n    arrowLeftComputedStyle() {\n      if (this.arrowLeftStyle) return this.arrowLeftStyle;\n      else {\n        return {\n          height: '24px',\n          fontSize: '24px',\n          borderRadius: '50%',\n          backgroundColor: 'rgba(0,0,0,0.2)',\n          top: 'calc(50% - 12px)',\n          color: 'white',\n          left: '8px'\n        }\n      }\n    },\n\n    arrowRightComputedStyle() {\n      if (this.arrowRightStyle) return this.arrowRightStyle;\n      else {\n        return {\n          height: '24px',\n          fontSize: '24px',\n          borderRadius: '50%',\n          backgroundColor: 'rgba(0,0,0,0.2)',\n          top: 'calc(50% - 12px)',\n          color: 'white',\n          right: '8px'\n        }\n      }\n    },\n  }\n}\n",{"version":3,"sources":["ListSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListSlider.vue","sourceRoot":"src/components/Components/Slot","sourcesContent":["<template>\r\n  <div class=\"image-slider-container\">\r\n    <div class=\"flex position-relative\">\r\n\r\n      <!-- 왼쪽 화살표 -->\r\n      <i v-if=\"arrow && listData.length > 1\"\r\n         class=\"slider-arrow material-icons unselect\"\r\n         :style=\"arrowLeftComputedStyle\"\r\n         @click=\"$refs.slick.prev()\">keyboard_arrow_left</i>\r\n\r\n      <!-- 슬라이드 리스트 -->\r\n      <div style=\"overflow: hidden; flex:1\"\r\n           ref=\"cardlist\">\r\n\r\n        <transition name=\"fade\">\r\n          <slick :ref=\"slickId\"\r\n                 v-if=\"reRender\"\r\n                 @afterChange=\"handleAfterChange\"\r\n                 :options=\"slickOptions\">\r\n\r\n            <!-- 카드뷰 -->\r\n            <slot name=\"card\"></slot>\r\n\r\n          </slick>\r\n        </transition>\r\n\r\n        <!-- Indicator -->\r\n        <div class=\"indicator-container\" v-if=\"indicator && listData.length > 1\">\r\n          <div class=\"indicator-wrapper\">\r\n            <div v-for=\"i in Array.from({length:listData.length}, (v,k) => k)\" :key=\"'ic'+i\" @click=\"$refs[slickId].goTo(i)\">\r\n              <div v-if=\"i === currentSlide\" :style=\"currentIndicatorStyle\"></div>\r\n              <div v-else :style=\"indicatorStyle\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 오른쪽 화살표 -->\r\n      <i v-if=\"arrow && listData.length > 1\"\r\n         class=\"slider-arrow material-icons unselect\"\r\n         :style=\"arrowRightComputedStyle\"\r\n         @click=\"$refs[slickId].next()\">keyboard_arrow_right</i>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Slick from 'vue-slick'\r\n  import uuidv4 from 'uuid/v4'\r\n\r\n  export default {\r\n    name: 'list-slider',\r\n\r\n    components: {\r\n      Slick\r\n    },\r\n\r\n    props: {\r\n      arrow: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      indicator: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      listData: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      height: {\r\n        type: Number,\r\n        required: false\r\n      },\r\n      autoplay: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      slidesToShow: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      slidesToScroll: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      autoplaySpeed: {\r\n        type: Number,\r\n        default: 3000\r\n      },\r\n      arrowLeftStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      arrowRightStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      centerPadding: {\r\n        type: String,\r\n        default: ''\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        currentSlide: 0,\r\n        reRender: true,\r\n        slickId: '',\r\n        rendered: false\r\n      }\r\n    },\r\n\r\n    created() {\r\n      this.slickId = 'slick-'+uuidv4();\r\n    },\r\n\r\n    mounted() {\r\n      if(!this.rendered) {\r\n        this.$nextTick(() => {\r\n          this.reRenderSlick();\r\n          this.rendered = true;\r\n        });\r\n      }\r\n    },\r\n\r\n\r\n    methods: {\r\n      reRenderSlick() {\r\n        if(this.reRender === false) return;\r\n\r\n        this.$nextTick(() => {\r\n          this.reRender = false;\r\n          setTimeout(() => {\r\n            this.reRender = true;\r\n\r\n            this.$nextTick(() => {\r\n              this.$refs[this.slickId].$el.getElementsByClassName('slick-list')[0].addEventListener('touchstart', () => {\r\n                console.log('touchstart');\r\n                this.$refs[this.slickId].play();\r\n              });\r\n            });\r\n          },200);\r\n        });\r\n      },\r\n\r\n      handleAfterChange(event, slick, currentSlide) {\r\n        this.currentSlide = currentSlide;\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      currentIndicatorStyle() {\r\n        return {\r\n          width: '8px',\r\n          height: '8px',\r\n          borderRadius: '100%',\r\n          backgroundColor: 'rgba(255, 255, 255, 1)',\r\n          marginRight: '4px'\r\n        };\r\n      },\r\n\r\n      indicatorStyle() {\r\n        return {\r\n          width: '8px',\r\n          height: '8px',\r\n          borderRadius: '100%',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.6)',\r\n          marginRight: '4px'\r\n        };\r\n      },\r\n\r\n      // 슬릭 옵션\r\n      slickOptions() {\r\n\r\n        return {\r\n          infinite: true,\r\n          variableWidth: false,\r\n          centerPadding: this.centerPadding,\r\n          centerMode: false,\r\n          autoplay: this.autoplay,\r\n          arrows: false,\r\n          dots: false,\r\n          slidesToShow: this.slidesToShow,\r\n          slidesToScroll: this.slidesToScroll,\r\n          autoplaySpeed: this.autoplaySpeed,\r\n          responsive: [ { settings: { waitForAnimate : false, pauseOnFocus : false, pauseOnHover : false, swipe : false } } ]\r\n        }\r\n      },\r\n      arrowLeftComputedStyle() {\r\n        if (this.arrowLeftStyle) return this.arrowLeftStyle;\r\n        else {\r\n          return {\r\n            height: '24px',\r\n            fontSize: '24px',\r\n            borderRadius: '50%',\r\n            backgroundColor: 'rgba(0,0,0,0.2)',\r\n            top: 'calc(50% - 12px)',\r\n            color: 'white',\r\n            left: '8px'\r\n          }\r\n        }\r\n      },\r\n\r\n      arrowRightComputedStyle() {\r\n        if (this.arrowRightStyle) return this.arrowRightStyle;\r\n        else {\r\n          return {\r\n            height: '24px',\r\n            fontSize: '24px',\r\n            borderRadius: '50%',\r\n            backgroundColor: 'rgba(0,0,0,0.2)',\r\n            top: 'calc(50% - 12px)',\r\n            color: 'white',\r\n            right: '8px'\r\n          }\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n  .slider-arrow\r\n    position absolute\r\n    z-index 1\r\n\r\n  .indicator-container\r\n    position absolute\r\n    width 100%\r\n    bottom 16px\r\n\r\n  .indicator-wrapper\r\n    display flex\r\n    justify-content center\r\n\r\n  .fade-enter-active\r\n    transition opacity .5s\r\n  .fade-enter\r\n    opacity 0\r\n\r\n</style>\r\n"]}]}