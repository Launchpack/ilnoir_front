{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Common/BottomMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Common/BottomMenu.vue","mtime":1605259983000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneItem } from \"@/utils/helper/object-helper.js\";\nexport default {\n  name: \"BottomMenu\",\n  props: [\n    'menu'\n  ],\n  computed: {\n    containerStyle() {\n      let sub = 0;\n      if(this.$store.getters.browserType === 'pc')\n        sub = 4;\n      return {\n        position: 'fixed',\n        zIndex: 9,\n        background: 'white',\n        borderTop: '1px solid #eee',\n        width: `${this.$store.getters.deviceWidth - sub}px`,\n        bottom: 0\n      }\n    },\n    menuItemStyle() {\n      let width = 100 / this.menu.length;\n      return {\n        width: `${width}%`,\n        padding: '5px 0',\n        textAlign: 'center',\n        height:'50px'\n      };\n    }\n  },\n  methods: {\n    clickBottomMenu(item) {\n      if (item.emit) {\n        this.$emit(item.emit);\n      }\n      else if (item.link!==undefined) {\n        this.$router.push(item.link);\n      }\n    },\n    currentPath(path) {\n      return this.$route.path.indexOf(path) > -1;\n    },\n    imgStyle(item) {\n      let deco = {\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      };\n      if(this.currentPath(item.link)) {\n        deco.backgroundImage = `url(${item.img_before})`;\n      } else {\n        deco.backgroundImage = `url(${item.img_after})`;\n      }\n      return deco;\n    },\n    iconStyle(item) {\n      let deco = {};\n\n      if(this.currentPath(item.link)) {\n        deco = cloneItem(this.brandColor.brand);\n      } else {\n        deco = cloneItem(this.brandColor.sub);\n      }\n      return deco;\n    },\n\n    titleStyle(item) {\n      let deco = {};\n\n      if(this.currentPath(item.link)) {\n        deco = cloneItem(this.brandColor.brand);\n      } else {\n        deco = cloneItem(this.brandColor.sub);\n      }\n      deco.fontSize = '10px';\n      deco.marginTop = '4px';\n      return deco;\n    },\n    hasFeed(item) {\n      return item.feed && item.feed !== '' && item.feed !== '0' && item.feed !== 0;\n    }\n  }\n}\n",{"version":3,"sources":["BottomMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BottomMenu.vue","sourceRoot":"src/components/Components/Common","sourcesContent":["<template>\r\n  <div class=\"flex-align full-width\" :style=\"containerStyle\">\r\n    <div :style=\"menuItemStyle\" class=\"unselect\" @click=\"clickBottomMenu(item)\"\r\n      v-for=\"item in menu\" :key=\"`menu-${item.link}`\">\r\n      <div class=\"flex-center\">\r\n        <div class=\"position-relative\" style=\"width:24px;height:24px\">\r\n          <i class=\"material-icons p-icon position-relative\" :style=\"iconStyle(item)\" v-if=\"item.icon\">{{ item.icon }}</i>\r\n          <div v-if=\"item.img_before || item.img_after\"\r\n               style=\"width:24px;height:24px\"\r\n               :style=\"imgStyle(item)\"></div>\r\n          <badge v-if=\"hasFeed(item)\" :val=\"item.feed\"></badge>\r\n        </div>\r\n      </div>\r\n      <div :style=\"titleStyle(item)\">{{ item.name }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { cloneItem } from \"@/utils/helper/object-helper.js\";\r\n  export default {\r\n    name: \"BottomMenu\",\r\n    props: [\r\n      'menu'\r\n    ],\r\n    computed: {\r\n      containerStyle() {\r\n        let sub = 0;\r\n        if(this.$store.getters.browserType === 'pc')\r\n          sub = 4;\r\n        return {\r\n          position: 'fixed',\r\n          zIndex: 9,\r\n          background: 'white',\r\n          borderTop: '1px solid #eee',\r\n          width: `${this.$store.getters.deviceWidth - sub}px`,\r\n          bottom: 0\r\n        }\r\n      },\r\n      menuItemStyle() {\r\n        let width = 100 / this.menu.length;\r\n        return {\r\n          width: `${width}%`,\r\n          padding: '5px 0',\r\n          textAlign: 'center',\r\n          height:'50px'\r\n        };\r\n      }\r\n    },\r\n    methods: {\r\n      clickBottomMenu(item) {\r\n        if (item.emit) {\r\n          this.$emit(item.emit);\r\n        }\r\n        else if (item.link!==undefined) {\r\n          this.$router.push(item.link);\r\n        }\r\n      },\r\n      currentPath(path) {\r\n        return this.$route.path.indexOf(path) > -1;\r\n      },\r\n      imgStyle(item) {\r\n        let deco = {\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          backgroundRepeat: 'no-repeat'\r\n        };\r\n        if(this.currentPath(item.link)) {\r\n          deco.backgroundImage = `url(${item.img_before})`;\r\n        } else {\r\n          deco.backgroundImage = `url(${item.img_after})`;\r\n        }\r\n        return deco;\r\n      },\r\n      iconStyle(item) {\r\n        let deco = {};\r\n\r\n        if(this.currentPath(item.link)) {\r\n          deco = cloneItem(this.brandColor.brand);\r\n        } else {\r\n          deco = cloneItem(this.brandColor.sub);\r\n        }\r\n        return deco;\r\n      },\r\n\r\n      titleStyle(item) {\r\n        let deco = {};\r\n\r\n        if(this.currentPath(item.link)) {\r\n          deco = cloneItem(this.brandColor.brand);\r\n        } else {\r\n          deco = cloneItem(this.brandColor.sub);\r\n        }\r\n        deco.fontSize = '10px';\r\n        deco.marginTop = '4px';\r\n        return deco;\r\n      },\r\n      hasFeed(item) {\r\n        return item.feed && item.feed !== '' && item.feed !== '0' && item.feed !== 0;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}