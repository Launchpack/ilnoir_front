{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Common/RangeComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Common/RangeComponent.vue","mtime":1605259985000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport vueSlider from 'vue-slider-component'\n\nexport default {\n  name: 'range-component',\n\n  components: {\n    vueSlider\n  },\n\n  mixins: [\n  ],\n\n  data() {\n    return {\n      rangeValue: []\n    }\n  },\n\n  props: {\n    value: {\n      type: [Array, Number],\n      required: true\n    },\n    /* props for customizing */\n    minLabel: {\n      type: String,\n      required: false\n    },\n    maxLabel: {\n      type: String,\n      required: false\n    },\n    rangeLabelStyle: {\n      type: Object,\n      required: false\n    },    \n    /* vue-slider-component props */\n    min: {\n      type: Number,\n      required: true\n    },\n    max: {\n      type: Number,\n      required: true\n    },\n    interval: {\n      default: 1,\n      required: false\n    },\n    width: {\n      default: 300,\n      required: false\n    },\n    height: {\n      default: 4,\n      required: false\n    },\n    tooltip: {\n      default: 'none',\n      required: false\n    },\n    dotSize: {\n      default: 20,\n      required: false\n    },\n    dotStyle: {\n      type: Object,\n      required: false\n    },\n    dotOptions: {\n      type: Object,\n      required: false\n    },\n    processStyle: {\n      default: function() {\n        return {\n          backgroundColor: '#ddd'\n        }\n      },\n      required: false\n    },\n    sliderStyle: {\n      required: false\n    },\n    tooltipStyle: {\n      required: false\n    },\n    railStyle: {\n      default: function() {\n        return {\n          backgroundColor: '#ddd'\n        }\n      },\n      required: false\n    },\n    rangeValueStyle: {\n      default: function() {\n        return { \n          backgroundColor: '#888',\n          color: 'white',\n          fontSize: '13px',\n          borderRadius: '50%',\n          width: '20px',\n          height: '20px'\n        }\n      },\n      required: false\n    }      \n  },\n\n  created() {\n    if (this.value) this.rangeValue = this.value;\n  },\n\n  updated() {\n    if (this.value) this.rangeValue = this.value;\n  },\n\n  computed: {\n    computedProcessStyle() {\n      if (this.processStyle) return this.processStyle;\n      else return { \n        backgroundColor: this.brandColor.primary.color\n      }\n    },\n    computedSliderStyle() {\n      if (this.sliderStyle) return this.sliderStyle;\n      else return { backgroundColor: '#ddd' }\n    },\n    computedTooltipStyle() {\n      if (this.tooltipStyle) return this.tooltipStyle;\n      else return {}\n    }\n  }\n}\n",{"version":3,"sources":["RangeComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"RangeComponent.vue","sourceRoot":"src/components/Components/Common","sourcesContent":["<!-- Range Output Component (Input Component: CInputRange) -->\r\n<template>\r\n  <div class=\"range-component flex-align\">\r\n\r\n      <!-- min label -->\r\n      <div v-if=\"minLabel\" class=\"range-label\" :style=\"rangeLabelStyle\">{{ minLabel }}</div>\r\n\r\n      <!-- 레인지 슬라이더 -->\r\n      <div class=\"flex-center\" style=\"margin: 0 16px;\">\r\n        <vue-slider  ref=\"slider\" v-model=\"rangeValue\" \r\n          :min=\"min\" :max=\"max\" :interval=\"interval\" \r\n          :width=\"width\" :height=\"height\" :tooltip=\"tooltip\"\r\n          :dotSize=\"dotSize\" :dotStyle=\"dotStyle\" :dotOptions=\"{disabled: true}\"\r\n          :processStyle=\"computedProcessStyle\"\r\n          :sliderStyle=\"computedSliderStyle\"\r\n          :tooltipStyle=\"computedTooltipStyle\"\r\n          :railStyle=\"railStyle\"\r\n          @drag-end=\"$emit('changed')\"\r\n          @click.native=\"$emit('changed')\">\r\n          <!-- Dot 대신 들어가는 Value -->\r\n          <template v-slot:dot=\"{ value }\">\r\n            <div class=\"flex-center\" :style=\"rangeValueStyle\">{{ rangeValue }}</div>\r\n          </template>\r\n        </vue-slider>\r\n      </div>\r\n\r\n      <!-- max label -->\r\n      <div v-if=\"maxLabel\" class=\"range-label\" :style=\"rangeLabelStyle\">{{ maxLabel }}</div>\r\n      \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import vueSlider from 'vue-slider-component'\r\n\r\n  export default {\r\n    name: 'range-component',\r\n\r\n    components: {\r\n      vueSlider\r\n    },\r\n\r\n    mixins: [\r\n    ],\r\n\r\n    data() {\r\n      return {\r\n        rangeValue: []\r\n      }\r\n    },\r\n\r\n    props: {\r\n      value: {\r\n        type: [Array, Number],\r\n        required: true\r\n      },\r\n      /* props for customizing */\r\n      minLabel: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      maxLabel: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      rangeLabelStyle: {\r\n        type: Object,\r\n        required: false\r\n      },    \r\n      /* vue-slider-component props */\r\n      min: {\r\n        type: Number,\r\n        required: true\r\n      },\r\n      max: {\r\n        type: Number,\r\n        required: true\r\n      },\r\n      interval: {\r\n        default: 1,\r\n        required: false\r\n      },\r\n      width: {\r\n        default: 300,\r\n        required: false\r\n      },\r\n      height: {\r\n        default: 4,\r\n        required: false\r\n      },\r\n      tooltip: {\r\n        default: 'none',\r\n        required: false\r\n      },\r\n      dotSize: {\r\n        default: 20,\r\n        required: false\r\n      },\r\n      dotStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      dotOptions: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      processStyle: {\r\n        default: function() {\r\n          return {\r\n            backgroundColor: '#ddd'\r\n          }\r\n        },\r\n        required: false\r\n      },\r\n      sliderStyle: {\r\n        required: false\r\n      },\r\n      tooltipStyle: {\r\n        required: false\r\n      },\r\n      railStyle: {\r\n        default: function() {\r\n          return {\r\n            backgroundColor: '#ddd'\r\n          }\r\n        },\r\n        required: false\r\n      },\r\n      rangeValueStyle: {\r\n        default: function() {\r\n          return { \r\n            backgroundColor: '#888',\r\n            color: 'white',\r\n            fontSize: '13px',\r\n            borderRadius: '50%',\r\n            width: '20px',\r\n            height: '20px'\r\n          }\r\n        },\r\n        required: false\r\n      }      \r\n    },\r\n\r\n    created() {\r\n      if (this.value) this.rangeValue = this.value;\r\n    },\r\n\r\n    updated() {\r\n      if (this.value) this.rangeValue = this.value;\r\n    },\r\n\r\n    computed: {\r\n      computedProcessStyle() {\r\n        if (this.processStyle) return this.processStyle;\r\n        else return { \r\n          backgroundColor: this.brandColor.primary.color\r\n        }\r\n      },\r\n      computedSliderStyle() {\r\n        if (this.sliderStyle) return this.sliderStyle;\r\n        else return { backgroundColor: '#ddd' }\r\n      },\r\n      computedTooltipStyle() {\r\n        if (this.tooltipStyle) return this.tooltipStyle;\r\n        else return {}\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}