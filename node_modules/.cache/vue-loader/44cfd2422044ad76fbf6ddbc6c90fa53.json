{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockContactReg.vue?vue&type=style&index=0&id=6f587c14&scoped=true&lang=css&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockContactReg.vue","mtime":1605260024000},{"path":"/Users/mard/dev/grit12/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.pc-style {\n  width: 192px !important;\n}\n",{"version":3,"sources":["BlockContactReg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8UA;AACA;AACA","file":"BlockContactReg.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div class=\"full-width\" :style=\"[brandBgColor.main]\">\n  <div class=\"text-center bold\" :style=\"[titleStyle, brandColor.brand]\">수업 문의</div>\n\n    <div>\n      <component \n          v-for=\"form in formData\"\n          :key=\"form.name\"\n          :is=\"form.elType\" \n          v-bind=\"form\"\n          :value.sync=\"form.value\"\n          :options=\"form.options\"\n          :formType=\"formTypeCustomLabel\"\n          :containerCustomStyle=\"form.containerCustom\"\n          :labelCustomStyle=\"labelCustom\"\n          :dropdownCustomStyle=\"form.dropdownCustom\"\n          :dropListCustomStyle=\"dropListCustomStyle\"\n          :dropItemCustomStyle=\"inputCustom\"\n          :inputCustomStyle=\"form.inputCustom\"\n          :buttonCustomStyle=\"buttonCustom\"\n          :iconCustomStyle=\"iconCustomStyle\"\n        ></component>\n    </div>\n    <div v-if=\"$store.getters.device === 'mobile'\">\n      <div :style=\"buttonCustom\" style=\"margin: 48px 0 0;\" @click=\"register\">제출하기</div>         \n      <!--<div :style=\"buttonCustomCancel\" style=\"margin: 12px 0 20px;\" @click=\"clickBack\">취소</div>      -->\n    </div>\n    <div v-else class=\"flex-justify\" style=\"margin-top:48px\">\n      <!--<div :style=\"buttonCustomCancel\" style=\"margin-right:16px;\" class=\"pc-style\" @click=\"clickBack\">취소</div>-->\n      <div :style=\"buttonCustom\" class=\"pc-style size-20 bold\" @click=\"register\">제출하기</div>         \n    </div>\n    \n\n    <!--<div>-->\n    <!--  <btn :color=\"brandColor.white\"-->\n    <!--    :backgroundColor=\"brandBgColor.brand\"-->\n    <!--    @clicked=\"register\"-->\n    <!--    style=\"margin: 48px 0 12px;\">제출하기</btn>  -->\n    <!--</div>-->\n    <!--<div>-->\n    <!--    <btn :backgroundColor=\"btnColor\" :color=\"brandColor.white\"-->\n    <!--      @clicked=\"clickBack\">취소</btn>-->\n    <!--  </div>-->\n  </div>\n</template>\n<script>\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockContactReg',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    BlockMixin,\n    HeaderMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"첨부파일\",\n          \"field\": \"file\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CFileUploader\",\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"\"\n        },\n        {\n          \"name\": \"이름\",\n          \"field\": \"name\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"이름\"\n        },\n        {\n          \"name\": \"연락처\",\n          \"field\": \"name\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"연락처\"\n        },\n        {\n          \"name\": \"이메일\",\n          \"field\": \"name\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"이메일\"\n        },\n        {\n          \"name\": \"문의 유형\",\n          \"field\": \"title\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CDropdown\",\n          \"options\": [\n            {\n              \"label\": \"문의 유형 1\",\n              \"value\": \"type1\"\n            },\n            {\n              \"label\": \"문의 유형 2\",\n              \"value\": \"type2\"\n            },\n            {\n              \"label\": \"문의 유형 3\",\n              \"value\": \"type3\"\n            }\n          ],\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"문의 유형 선택\"\n        },\n        {\n          \"name\": \"문의 제목\",\n          \"field\": \"title\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"문의제목을 입력해주세요\"\n        },\n        {\n          \"name\": \"문의 내용\",\n          \"field\": \"content\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_textarea\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"문의내용을 입력해주세요\"\n        },\n        {\n          \"name\": \"이용약관 및 개인정보처리방침 동의\",\n          \"items\": [\n            {\n              \"link\": \"termsofservice_overlay\",\n              \"text\": \"이용약관\",\n              \"styles\": {\n                \"container\": {\n                  \"fontWeight\": \"bold\"\n                }\n              },\n              \"linkType\": \"overlay\"\n            },\n            {\n              \"text\": \" 및 \",\n              \"styles\": {\n                \"container\": {\n                  \"padding\": \"0 4px\"\n                }\n              }\n            },\n            {\n              \"link\": \"privacy_overlay\",\n              \"text\": \"개인정보처리방침\",\n              \"styles\": {\n                \"container\": {\n                  \"fontWeight\": \"bold\"\n                }\n              },\n              \"linkType\": \"overlay\"\n            },\n            {\n              \"text\": \"에 동의하기\"\n            }\n          ],\n          \"label\": \"\",\n          \"value\": false,\n          \"format\": \"CgCheckboxArray\",\n          \"validate\": {\n            \"valid_required\": true\n          }\n        }\n      ]\n    }\n  },\n  created() {\n      // this.formData = this.setForm(this.formData);\n      this.getForm();\n    },\n  \n  methods: {\n    getForm() {\n        this.$axios.get('public/inquiry/personal/category')\n        .then(res => {\n          let categories = res.data;\n          this.$axios.get('public/inquiry/personal/formdata')\n          .then(res2 => {\n            let result = [];\n            res2.data.forEach(item => {\n              if (item.field==='type_id') {\n                item.options = categories;\n              }\n\n              result.push(item);\n              \n            })\n            this.formData = this.setForm(result);\n\n            let dropdown = find(this.formData, 'format', 'CDropdown');\n            let dropStyle = this.cloneItem(this.inputCustom);\n            dropStyle.color = this.brandColor.primary.color;\n            dropStyle.fontWeight = '500';\n            dropdown.dropdownCustom = dropStyle;\n            \n            let name = find(this.formData, 'field', 'name');\n            name.inputCustom = this.inputCustom;\n            \n            let phone = find(this.formData, 'field', 'phone');\n            phone.inputCustom = this.inputCustom;\n            \n            let email = find(this.formData, 'field', 'email');\n            email.inputCustom = this.inputCustom;\n            \n            let content = find(this.formData, 'field', 'content');\n            content.inputCustom = this.inputCustomTextarea;\n            \n          })\n        })\n      },\n    register() {\n        let result = this.getParamData(this.formData);\n        if (result.enable) {\n          let user_id = this.$store.getters.user.user_id;\n          if (user_id)\n            result.params.user_id = user_id;\n          this.$axios.post('public/inquiry/personal', result.params)\n          .then(res => {\n            if (res.status === 200) {\n              this.toast('문의글이 작성되었습니다.');\n              this.$router.replace('home');\n            }\n          })\n          .catch(err => {\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      }\n  },\n  computed: {\n    titleStyle() {\n      if(this.$store.getters.device==='pc') {\n        return {\n          padding: '80px 0 40px',\n          borderBottom: this.brandBorder.main.border,\n          fontSize: '40px'\n        } \n      }\n      else {\n        return {\n          padding: '40px 0 20px',\n          borderBottom: this.brandBorder.main.border,\n          fontSize: '20px'\n        }\n      }\n    },\n    btnColor() {\n      return {\n        backgroundColor: '#9b9b9b'\n      }\n    },\n    buttonCustomCancel() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea() {\n      let styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    },\n    dropListCustomStyle() {\n      return {\n        top: '48px'\n      }\n    },\n    dropItemCustomStyle() {\n      return {\n        backgroundColor: '#fff'\n      }\n    },\n    iconCustomStyle() {\n      return {\n        fontSize: '22px',\n        position: 'absolute',\n        right: '16px',\n        color: this.brandColor.main.color\n      }\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n<style scoped>\n.pc-style {\n  width: 192px !important;\n}\n</style>\n\n"]}]}