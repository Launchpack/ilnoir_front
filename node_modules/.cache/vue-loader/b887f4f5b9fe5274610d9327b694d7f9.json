{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Block/BlockTermsofservice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Block/BlockTermsofservice.vue","mtime":1605260033000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'BlockTermsofservice',\n  components: {\n\n  },\n  mixins: [\n    BlockMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"limit\": undefined\n    }\n  },\n  created() {\n      this.$axios.get(`public/policy`)\n      .then(res => {\n        this.limit = res.data.policy.limit;\n      })\n    },\n  \n  methods: {\n    \n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BlockTermsofservice.vue"],"names":[],"mappings":";;;;;;AAMA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA","file":"BlockTermsofservice.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div class=\"full-width full-height\">\n  <e-editor v-if=\"limit\" :html=\"limit\" style=\"padding: 0 16px 16px\"></e-editor>\n</div>\n</template>\n<script>\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'BlockTermsofservice',\n  components: {\n\n  },\n  mixins: [\n    BlockMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"limit\": undefined\n    }\n  },\n  created() {\n      this.$axios.get(`public/policy`)\n      .then(res => {\n        this.limit = res.data.policy.limit;\n      })\n    },\n  \n  methods: {\n    \n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"]}]}