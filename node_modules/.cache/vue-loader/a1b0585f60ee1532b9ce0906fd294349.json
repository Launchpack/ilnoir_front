{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Slot/AnchorTab.vue?vue&type=style&index=0&id=19ece5e8&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Slot/AnchorTab.vue","mtime":1605259989000},{"path":"/Users/mard/dev/grit12/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n\r\n.anchor-head \r\n.anchor-head-wrap \r\n  display flex\r\n  justify-content space-around\r\n  align-items center\r\n  z-index 10\r\n  // background #fff\r\n\r\n",{"version":3,"sources":["AnchorTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AnchorTab.vue","sourceRoot":"src/components/Components/Slot","sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"anchorHead\" class=\"flex-center anchor-head\" \r\n      :style=\"[headStyle, brandColor.main, brandBgColor.main]\">\r\n      <div class=\"flex-center anchor-head-wrap\" :style=\"headWrapStyle\">\r\n        <div v-for=\"(item, idx) in menu\" :key=\"item.id\" class=\"unselect\"\r\n          @click=\"clickAnchor(item.id, idx)\"\r\n          :style=\"headItemStyle(item.id)\">\r\n          <span>{{item.name}}</span>\r\n          <span v-if=\"item.count!==undefined\">({{item.count}})</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <slot name=\"content\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    menu: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    anchorHeadStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    headHeight: {   // 앵커 헤더 높이\r\n      type: Number,\r\n      required: false,\r\n      default: function() {\r\n        return 48;\r\n      }\r\n    },\r\n    scrollOffset: {   // 헤더 등 fixed 처리 시 상위 offset\r\n      type: Number,\r\n      required: false,\r\n      default: function() {\r\n        return 0;\r\n      }\r\n    },\r\n    anchorHeadItemStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    anchorHeadUnselectedItemStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    changeOffset: {   // 상위 엘레먼트 등 clientHeight 변경 시 감지\r\n      type: Number,\r\n      required: false\r\n    },\r\n    extraScrollAnchor: {\r\n      type: Number,\r\n      required: false\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.initializeAnchorTop();\r\n    this.setHeadStyle();\r\n  },\r\n\r\n  mounted() {\r\n    this.$nextTick(function() {\r\n      if (this.$refs.anchorHead) {\r\n        window.addEventListener('scroll', () => {\r\n          this.onScroll();\r\n        });\r\n      }\r\n    })\r\n  },\r\n\r\n  updated() {\r\n    this.$nextTick(function() {\r\n      if (this.$refs.anchorHead) {\r\n        this.currentTop = this.$refs.anchorHead.getBoundingClientRect().top;\r\n      }\r\n    })\r\n  },\r\n\r\n  destroyed() {\r\n    window.removeEventListener('scroll', () => {\r\n      this.onScroll();\r\n    });\r\n  },\r\n  \r\n  watch: {\r\n    changeOffset(n) {\r\n      this.initializeAnchorTop();\r\n    },\r\n    extraScrollAnchor(n) {\r\n      if (n!==-undefined) {\r\n        this.clickAnchor(n);\r\n        this.$emit('initialExtra');\r\n      }\r\n    }\r\n  },  \r\n\r\n  data() {\r\n    return {\r\n      currentTop: 0,\r\n      initialAnchorTop: 0,\r\n      anchorTop: 0,\r\n      scrollUp: false,\r\n      sticky_state: false,\r\n      selectedTab: 0,\r\n      headStyle: {},\r\n      headWrapStyle: {}\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    computedMenu() {\r\n      let result = [];\r\n      this.menu.forEach(item => {\r\n        if(item.id === this.selectedTab)\r\n          result.push(item);\r\n      });\r\n      return result;\r\n    },\r\n    scrollOptions() {\r\n      return {\r\n        // container: '#anchor',\r\n        easing: 'ease-out',\r\n        offset: -(this.scrollOffset + this.headHeight),\r\n        force: true,\r\n        cancelable: true,\r\n        onStart: function() {\r\n          // scrolling started\r\n        },\r\n        onDone: function() {\r\n          // scrolling done\r\n        },\r\n        onCancel: function() {\r\n          // scrolling has been interrupted\r\n        },\r\n        x: false,\r\n        y: true\r\n      };\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initializeAnchorTop() {\r\n      this.$nextTick(function() {\r\n        if (this.$refs.anchorHead) {\r\n          let elOffset = this.$refs.anchorHead.offsetTop;\r\n          this.initialAnchorTop = elOffset;\r\n        }\r\n      })\r\n    },    \r\n    onScroll() {\r\n      this.$nextTick(function() {\r\n        if (this.$refs.anchorHead) {\r\n\r\n          let currentTop = this.currentTop;\r\n\r\n          // sticky 상태가 아닐 경우\r\n          if (currentTop > this.scrollOffset) {\r\n            this.sticky_state = false;\r\n            this.setHeadStyle();\r\n          }\r\n          else if (currentTop < this.scrollOffset) {\r\n            this.sticky_state = true;\r\n            this.setHeadStyle();\r\n          }\r\n          \r\n          // sticky 상태 일 경우\r\n          else {\r\n            let pageScroll = $(window).scrollTop(); \r\n\r\n            if (pageScroll >= (this.initialAnchorTop - this.scrollOffset)) {\r\n              this.sticky_state = true;\r\n              this.setHeadStyle();\r\n            }\r\n            else {\r\n              this.sticky_state = false;\r\n              this.setHeadStyle();\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n    },\r\n    clickAnchor(id, idx) {\r\n      let duration = 500;\r\n      this.$scrollTo(`#anchor${id}`, duration, this.scrollOptions);\r\n      this.selectedTab = id;\r\n    },\r\n    setHeadStyle() {\r\n      // head\r\n      let head = {};\r\n      if (this.sticky_state) {\r\n        head.position = 'fixed';\r\n        head.width = '100vw';\r\n        head.top = `${this.scrollOffset}px`;\r\n        head.left = 0;\r\n      }\r\n      else {\r\n        head.position = 'static';\r\n        head.width = '';\r\n        head.top = '';\r\n        head.left = '';\r\n      }\r\n      head.height = `${this.headHeight}px`;\r\n      head.borderBottom = this.brandBorder.main.border;\r\n      this.headStyle = head;\r\n\r\n      // head wrap\r\n      let head_wrap = {};\r\n      if (this.anchorHeadStyle) head_wrap = this.anchorHeadStyle;\r\n      if (this.sticky_state&&this.maxWidth) {\r\n        head_wrap.width = this.maxWidth;\r\n      }\r\n      else head_wrap.width = '100%';\r\n      this.headWrapStyle = head_wrap;\r\n\r\n    },\r\n    headItemStyle(id) {\r\n      if (this.selectedTab===id) {\r\n        if (this.anchorHeadItemStyle) return this.anchorHeadItemStyle;\r\n      }\r\n      else {\r\n        if (this.anchorHeadUnselectedItemStyle) return this.anchorHeadUnselectedItemStyle;\r\n      }\r\n\r\n      let styles = {};\r\n      styles.color = this.brandColor.main;\r\n      if (this.selectedTab===id) styles.fontWeight = 'bold';\r\n      return styles;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n\r\n.anchor-head \r\n.anchor-head-wrap \r\n  display flex\r\n  justify-content space-around\r\n  align-items center\r\n  z-index 10\r\n  // background #fff\r\n\r\n</style>"]}]}