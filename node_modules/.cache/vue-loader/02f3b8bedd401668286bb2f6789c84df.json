{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Button/IconCircleShare.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Button/IconCircleShare.vue","mtime":1605259982000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"IconCircleShare\",\n  props: {\n    size: {\n      type: Number,\n      default: 24\n    },\n    color: {\n      type: String,\n      default: 'sub'\n    },\n    icon: {\n      type: String,\n      default: 'share'\n    },\n    width: {\n      type: Number,\n      default: 48,\n    },\n    height: {\n      type: Number,\n      default: 48,\n    },\n    borderRadius: {\n      type: Number,\n      default: 8,\n    },\n    text: {\n      type: String,\n      required: false\n    },\n    shareContainStyle: {\n      type: Object,\n      required: false\n    },\n    shareTextStyle: {\n      type: Object,\n      required: false\n    }\n  },\n  methods: {\n    clickBtn() {\n      this.$emit('share');\n    }\n  },\n  computed: {\n    iconStyle() {\n      let deco = this.brandColor[this.color];\n      deco.fontSize = this.size+'px';\n      deco.height = deco.fontSize;\n      return deco;\n    },\n    iconWrapStyle() {\n      let deco = {\n        backgroundColor: `${this.getColor('기본 배경 색상')}`\n      }\n\n      if(this.width) deco.width = `${this.width}px`;\n      if(this.height) deco.height = `${this.height}px`;\n      if(this.borderRadius) deco.borderRadius = `${this.borderRadius}px`;\n\n      return deco;\n    },\n    letterStyle() {\n      return {\n        marginLeft: '6px',\n        whiteSpace: 'pre',\n        color: this.getColor('보조 내용 색상')\n      }\n    }\n  }\n}\n",{"version":3,"sources":["IconCircleShare.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IconCircleShare.vue","sourceRoot":"src/components/Components/Button","sourcesContent":["<template>\r\n  <div class=\"flex-center\" :style=\"[shareContainStyle ? shareContainStyle : iconWrapStyle]\" @click=\"clickBtn\">\r\n    <i class=\"material-icons unselect\" :style=\"iconStyle\">{{ icon }}</i>\r\n    <div v-if=\"text\" :style=\"[shareTextStyle ? shareTextStyle : letterStyle]\">{{ text }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"IconCircleShare\",\r\n    props: {\r\n      size: {\r\n        type: Number,\r\n        default: 24\r\n      },\r\n      color: {\r\n        type: String,\r\n        default: 'sub'\r\n      },\r\n      icon: {\r\n        type: String,\r\n        default: 'share'\r\n      },\r\n      width: {\r\n        type: Number,\r\n        default: 48,\r\n      },\r\n      height: {\r\n        type: Number,\r\n        default: 48,\r\n      },\r\n      borderRadius: {\r\n        type: Number,\r\n        default: 8,\r\n      },\r\n      text: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      shareContainStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      shareTextStyle: {\r\n        type: Object,\r\n        required: false\r\n      }\r\n    },\r\n    methods: {\r\n      clickBtn() {\r\n        this.$emit('share');\r\n      }\r\n    },\r\n    computed: {\r\n      iconStyle() {\r\n        let deco = this.brandColor[this.color];\r\n        deco.fontSize = this.size+'px';\r\n        deco.height = deco.fontSize;\r\n        return deco;\r\n      },\r\n      iconWrapStyle() {\r\n        let deco = {\r\n          backgroundColor: `${this.getColor('기본 배경 색상')}`\r\n        }\r\n\r\n        if(this.width) deco.width = `${this.width}px`;\r\n        if(this.height) deco.height = `${this.height}px`;\r\n        if(this.borderRadius) deco.borderRadius = `${this.borderRadius}px`;\r\n\r\n        return deco;\r\n      },\r\n      letterStyle() {\r\n        return {\r\n          marginLeft: '6px',\r\n          whiteSpace: 'pre',\r\n          color: this.getColor('보조 내용 색상')\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}