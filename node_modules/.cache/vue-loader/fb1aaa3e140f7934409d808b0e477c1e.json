{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/LaunchPack_Common/Block/BlockPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/LaunchPack_Common/Block/BlockPassword.vue","mtime":1605259998000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Mixins/FormCustomMixin\"\n\nexport default {\n  name: 'BlockPassword',\n  components: {\n\n  },\n  mixins: [\n    AuthMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"check\": false,\n      \"value\": {\n        \"password\": \"\",\n        \"new_password\": \"\",\n        \"new_password_re\": \"\"\n      }\n    }\n  },\n  created() {\n\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    modify() {\n        let err = '';\n        if(!this.value.password) err = '비밀번호를 입력하세요.';\n        else if(!this.value.new_password) err = '새 비밀번호를 입력하세요.';\n        else if(!this.value.new_password_re) err = '새 비밀번호 확인을 입력하세요.';\n        else if(this.value.new_password !== this.value.new_password_re) err = '새 비밀번호가 다릅니다.';\n        if(err) {\n          this.toast(err);\n          return;\n        }\n        // 비밀번호 체크 api\n        this.$axios.post('auth/user/login', {\n          username: this.$store.getters.user.username,\n          password: this.value.password\n        }).then(res=> {\n          if(res.status===200) {\n            this.check = true;\n          }\n        }).catch(error=> {\n          this.toast('잘못된 비밀번호 입니다.');\n        })\n\n        if(this.check) this.updateInfo();\n      },\n    // 내 정보 수정 api\n      updateInfo() {\n        let params = {\n          username: this.$store.getters.user.username,\n          password: this.value.new_password\n        }\n        this.$axios.patch(`user/${this.$store.getters.user.user_id}`,\n          params).then(res=>{\n          if(res.status===200) {\n            this.toast('비밀번호가 변경되었습니다.');\n            this.setUserData(res.data);\n            this.$router.replace('mypage');\n          }\n        }).catch(err=> {\n          if(!err.response.data.message)\n            this.toast(err.response.data.detail);\n          else\n            this.toast(err.response.data.message);\n        })\n      }\n  },\n  computed: {\n    inputStyle() {\n      let deco = this.cloneItem(this.inputCustom);\n      deco.border = this.brandBorder.main.border;\n      return deco;\n    }\n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BlockPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"BlockPassword.vue","sourceRoot":"src/components/LaunchPack_Common/Block","sourcesContent":["<template>\n<div>\n    <c-input-password :inputCustomStyle=\"inputStyle\" :value.sync=\"value.password\" placeholder=\"현재 비밀번호\"></c-input-password>\n    <c-input-password :inputCustomStyle=\"inputStyle\" :value.sync=\"value.new_password\" placeholder=\"새 비밀번호변경\"></c-input-password>\n    <c-input-password :inputCustomStyle=\"inputStyle\" :value.sync=\"value.new_password_re\" placeholder=\"새 비밀번호변경 확인\"></c-input-password>\n    <div style=\"margin-top: 24px\">\n      <btn :color=\"brandColor.white\"\n           :backgroundColor=\"brandBgColor.brand\"\n           @clicked=\"modify\">비밀번호 변경하기</btn>\n    </div>\n  </div>\n</template>\n<script>\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Mixins/FormCustomMixin\"\n\nexport default {\n  name: 'BlockPassword',\n  components: {\n\n  },\n  mixins: [\n    AuthMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"check\": false,\n      \"value\": {\n        \"password\": \"\",\n        \"new_password\": \"\",\n        \"new_password_re\": \"\"\n      }\n    }\n  },\n  created() {\n\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    modify() {\n        let err = '';\n        if(!this.value.password) err = '비밀번호를 입력하세요.';\n        else if(!this.value.new_password) err = '새 비밀번호를 입력하세요.';\n        else if(!this.value.new_password_re) err = '새 비밀번호 확인을 입력하세요.';\n        else if(this.value.new_password !== this.value.new_password_re) err = '새 비밀번호가 다릅니다.';\n        if(err) {\n          this.toast(err);\n          return;\n        }\n        // 비밀번호 체크 api\n        this.$axios.post('auth/user/login', {\n          username: this.$store.getters.user.username,\n          password: this.value.password\n        }).then(res=> {\n          if(res.status===200) {\n            this.check = true;\n          }\n        }).catch(error=> {\n          this.toast('잘못된 비밀번호 입니다.');\n        })\n\n        if(this.check) this.updateInfo();\n      },\n    // 내 정보 수정 api\n      updateInfo() {\n        let params = {\n          username: this.$store.getters.user.username,\n          password: this.value.new_password\n        }\n        this.$axios.patch(`user/${this.$store.getters.user.user_id}`,\n          params).then(res=>{\n          if(res.status===200) {\n            this.toast('비밀번호가 변경되었습니다.');\n            this.setUserData(res.data);\n            this.$router.replace('mypage');\n          }\n        }).catch(err=> {\n          if(!err.response.data.message)\n            this.toast(err.response.data.detail);\n          else\n            this.toast(err.response.data.message);\n        })\n      }\n  },\n  computed: {\n    inputStyle() {\n      let deco = this.cloneItem(this.inputCustom);\n      deco.border = this.brandBorder.main.border;\n      return deco;\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"]}]}