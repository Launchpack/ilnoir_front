{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Pages/ProductPc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Pages/ProductPc.vue","mtime":1605263217425},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LocationComp from \"@/components/Components/Common/LocationComp\"\nimport CardProductPc from \"@/components/Components/Card/CardProductPc\"\nimport FooterMobile from \"@/components/Components/Footer/FooterMobile\"\nimport BlockRegionPc from \"@/components/Components/Block/BlockRegionPc\"\nimport BreadCrumbPc from \"@/components/Components/Common/BreadCrumbPc\"\nimport PaginationDefault from \"@/components/Components/Common/PaginationDefault\"\nimport PageMixin from \"@/components/Components/Mixin/PageMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport ListMixin from \"@/components/Mixins/ListMixin\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'ProductPc',\n  components: {\n    LocationComp,\n    CardProductPc,\n    FooterMobile,\n    BlockRegionPc,\n    BreadCrumbPc,\n    PaginationDefault\n  },\n  mixins: [\n    PageMixin,\n    HeaderMixin,\n    ListMixin,\n    BlockMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"list\": undefined,\n      \"sorted\": {\n        \"value\": \"\"\n      },\n      \"address\": undefined,\n      \"category\": undefined,\n      \"dropdown\": {\n        \"isOpen\": false,\n        \"options\": [],\n        \"selected\": {\n          \"label\": \"\",\n          \"value\": \"\"\n        },\n        \"mouseOverIndex\": -1\n      },\n      \"imgStyle\": {\n        \"width\": \"100%\",\n        \"objectFit\": \"cover\"\n      },\n      \"breadcrumb\": [],\n      \"pagingData\": undefined,\n      \"setAddress\": undefined,\n      \"showRegion\": false,\n      \"searchValue\": \"\",\n      \"selectedTab\": 27,\n      \"sortOptions\": undefined,\n      \"categoryList\": [],\n      \"productCount\": 0,\n      \"categoryAllId\": \"\",\n      \"currentStatus\": false,\n      \"selectedTabId\": \"\",\n      \"changePosition\": undefined,\n      \"curPaginationNum\": undefined,\n      \"selectedCategory\": \"\",\n      \"headerCenterStyle\": {}\n    }\n  },\n  created() {\n    this.init();\n  },\n  \n  methods: {\n    curNum(num) {\n      this.curPaginationNum = num;\n      this.getData();\n    },\n    clickTab(item) {\n      this.selectedTab = item.id;\n      this.tabStyle(item);\n      this.getData();\n    },\n    tabStyle(item) {\n      let deco = {};\n      \n      if(item.id===this.selectedTab) {\n        deco.color = 'white';\n        deco.fontWeight = 'bold'\n      }\n      else {\n        deco.color = '#888888'\n      }\n      \n      return deco;\n    },\n    init() {\n        this.pageLoadType = 'infinite';\n        \n        this.headerCenterStyle = {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        };      \n\n        // 카테고리\n        // this.$axios.get('public/category').then(res=> {\n        //   this.category = res.data;\n        //   this.category.unshift({id:this.categoryAllId, name:'전체보기'})\n          \n          this.$axios.get('public/category')\n        .then(res => {\n          this.category = res.data;\n\n          let lis = [];\n          this.category.forEach(item => {\n            if(item.packages&&item.packages.length>0) {\n              if(item.packages[0]==='call') {\n                lis.push(item);\n              }\n            }\n          });\n          this.categoryList = lis;\n\n        })\n          this.categoryList = lis;\n          \n          this.$axios.get(`public/service/set/filter/${1}`)\n          .then(res =>{\n            \n            this.sortOptions = res.data.sort;\n\n            // active 필터링            \n            this.sortOptions = this.sortOptions.filter(item => item.is_active);\n            \n            // '거리순' 초기값 설정\n            let distance = find(this.sortOptions, 'value', 'distance');\n            if (distance) {\n              let rmIdx = this.sortOptions.indexOf(distance);\n              this.sortOptions.splice(rmIdx,1);\n              this.sortOptions.unshift(distance);\n              this.sorted = '-created_time'\n            }\n            \n            // 정렬옵션 initialize\n            if(this.sortOptions && this.sortOptions.length>0) {\n              this.dropdown.options = this.sortOptions;\n              this.dropdown.selected =this.dropdown.options[0];\n            }         \n\n            this.getData();\n          });\n\n        // })\n\n      },\n    getData() {\n        // let location = '';\n        // if (this.$store.getters.currentPosition===undefined) location = '';\n        // else {\n        //   location = `${this.$store.getters.currentPosition.lng},${this.$store.getters.currentPosition.lat}`;\n        // }\n        \n        // if(this.$route.query.search) {\n        //   this.searchValue = this.$route.query.search;\n        // }\n        // else this.searchValue = '';\n\n        // let sorting = ''\n        // if (typeof(this.sorted)==='string' && this.sorted !== '') {\n        //   sorting = {\n        //     value: this.sorted.replace('-visit', '-partner__visit').replace('-pop_score', '-partner__pop_score')\n        //   }\n        // }\n        \n        let num = 1;\n        if(this.curPaginationNum) {\n          num = this.curPaginationNum;\n        }\n        \n        if (typeof(this.sorted)==='object'&&this.sorted.value!==undefined) this.sorted = this.sorted.value; \n\n        this.url = `user/${this.user.user_id}/mapping/product?fields=id,name,img,like_count,shared_count,visit,simple_desc,rate,reviews_count,partner,products.category,price`\n        // this.url += '&search_keyword=' + encodeURI(this.searchValue);\n        this.url += `&page_num=${num}&page_length=12`;\n        // this.url += `&location=${location}`;\n        this.url += `&ordering=${this.sorted}`;\n        this.url += `&category=${this.selectedTab}`;\n        \n        // 카테고리로 브래드크럼 세팅\n        //this.setBreadCrumb();\n        // 카테고리 한글네임\n        this.setCategoryName();\n        \n        this.currentPage = 1;\n\n        this.$axios.get(this.url).then(res => {\n          this.totalPages = res.data.total_page;\n          this.totalCount = res.data.count;\n          this.currentPage = 2;\n          this.list = res.data.data;\n          this.pagingData = res.data;\n          this.productCount = res.data.count;\n        });\n      },\n    setCategoryName() {\n      if (this.category && this.category.length>0) {\n        let sel = this.category.filter(item => item.id===this.tabId)[0];\n        if (sel) {\n          this.selectedCategory = sel.name;\n        }\n        else this.selectedCategory = '';\n      }\n    },\n    setBreadCrumb() {\n      this.breadcrumb = [];\n      \n      this.breadcrumb.push({\n        \"link\": \"home\",\n        \"name\": \"홈\"\n      });\n\n      // 카테고리 브래드크럼      \n      let catList = [];\n      this.category.forEach(cat => {\n        let search = this.$route.query.search ? this.$route.query.search : '';\n        cat.link = `product?tab=${cat.id}&search=${search}`\n        catList.push(cat);\n      })\n      let currentBread;\n      if (this.$route.query.tab===undefined || this.$route.query.tab==='') currentBread = catList[0];\n      else currentBread = find(catList, 'id', parseInt(this.$route.query.tab));\n      \n      this.breadcrumb.push({\n        name: currentBread.name,\n        link: currentBread.link,\n        list: catList\n      })\n    },\n    onSelectSorted(val) {\n        this.sorted = val;\n        this.getData();\n      },\n    onClickTab(item) {\n        this.selectedTabId = item;\n        this.getData();\n        this.setCategoryName();\n      },\n    updatePosition() {\n        this.getData();\n      },\n    onVMap(value) {\n        if (value) {\n          this.headerCenterStyle = {\n            position: 'absolute',\n            transform: 'none',\n            left: 0\n          };\n        }\n        else {\n          this.headerCenterStyle = {\n            position: 'static',\n            transform: 'none',\n            left: 0\n          };\n        }\n      },\n    // 정렬 옵션 드롭다운\n    toggleList() {\n      this.dropdown.isOpen = !this.dropdown.isOpen;\n    },\n    closeDropdown() {\n      this.dropdown.isOpen = false;\n    },\n    clickItem(item) {\n      this.dropdown.selected = item;\n      this.dropdown.isOpen = false;\n      // this.$emit('selectSorted', item.value);\n      this.onSelectSorted(item.value);\n    },\n    itemStyle(idx) {\n      if (this.dropdown.mouseOverIndex==idx) {\n        return {\n          color: this.brandColor.primary.color\n        }\n      }\n      else {\n        return {\n          color: this.brandColor.main.color\n        }\n      }\n    },\n    cardStyle(idx) {\n      let obj = {\n        // display: 'inline-block',\n        // width: '320px',\n        height: '316px',\n      };\n      \n      let gutters = 16;\n      obj.paddingLeft = `${gutters/2}px`;\n      obj.paddingRight = `${gutters/2}px`;\n      obj.marginBottom = `60px`;\n\n      // if(idx%4===0) obj.paddingLeft = 0;\n      // else if(idx%4===3) obj.paddingRight = 0;\n      \n      return obj;\n    }\n  },\n  computed: {\n    titleStyle() {\n      return {\n        padding: '140px 0 40px',\n        borderBottom: this.brandBorder.main.border,\n        marginBottom: '48px'\n      }\n    },\n    pageBg() {\n      return this.brandBgColor.main;\n    },\n    tabId() {\n      let tab = \"\";\n      if (this.$route.query.tab===undefined || this.$route.query.tab===\"\") tab = \"\";\n      else tab = parseInt(this.$route.query.tab);\n      return tab;\n    },\n    currentAddress() {\n      // 현재 주소\n      let add = this.address;\n      if (add && add.sido && add.sigungu) {\n        return `${add.sido} ${add.sigungu}`;\n      }\n      else return '';\n    },\n    containerStyle() {\n        return {\n          marginTop: '50px',\n          minHeight: 'calc(100vh - 50px)',\n          paddingBottom: '20px'\n        }\n      },\n    headerStyles() {\n        return {\n          container: {\n            // backgroundColor: 'white',\n            color: '#fff',\n            // fontWeight: 400\n          }\n        }\n      },\n    filtered() {\n        return this.$store.getters.filtered.length > 0;\n      },\n    inputStyle() {\n        return {\n          border: 'none',\n          width: '100%',\n          height: '48px',\n          backgroundColor: 'white',\n          padding: '12px 40px 12px 20px',\n          display: 'flex',\n          justifyContent: 'space-between',\n          borderRadius: '12px',\n          fontSize: '14px'\n        }\n      },\n    iconSearchStyle() {\n        return {\n          position: 'absolute',\n          top: '12px',\n          right: '16px'\n        }\n      },\n    btnStyles() {\n        return {\n          container: {\n            // backgroundColor: 'white',\n            // color: this.brandColor.primary.color,\n            color: '#fff',\n            fontWeight: 400\n          }\n        }\n      },\n    unsetCenter() {\n        return {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        }\n      },\n    selectedTabStyle() {\n        return {\n          padding: '12px 16px 11px',\n          textAlign: 'center',\n          fontSize: '14px',\n          borderTop: this.brandBorder.main.border,\n          borderBottom: `2px solid ${this.brandColor.primary.color}`,\n          backgroundColor: '#fff',\n          color: this.brandColor.primary.color\n        }\n      },\n    unselectedTabStyle() {\n        return {\n          padding: '12px 16px',\n          textAlign: 'center',\n          fontSize: '14px',\n          color: this.brandColor.main.color,\n          backgroundColor: '#fff',\n          borderTop: this.brandBorder.main.border,\n        }\n      }\n  },\n  watch: {\n    $route(n) {\n      this.list = undefined;\n      this.getData();\n    },\n    address(n) {\n      if (n) this.getData();\n    }\n  }\n}\n",{"version":3,"sources":["ProductPc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"ProductPc.vue","sourceRoot":"src/components/Pages","sourcesContent":["<template>\n<div :style=\"pageBg\">\n  <div class=\"flex-justify\">\n    <div :style=\"pcMaxWidth\">\n      \n      <div class=\"size-40 bold text-center\" :style=\"[titleStyle, brandColor.brand]\">GRIT12 굿즈</div>\n    </div>\n  </div>\n    \n    <img src=\"https://launchpack-storage.s3.ap-northeast-2.amazonaws.com/media/grit12/non-path/38500665.png\"\n      :style=\"imgStyle\">\n  \n  <div class=\"flex-justify\">\n    <div :style=\"pcMaxWidth\">\n      \n      <div class=\"flex-center\" style=\"padding:24px 0 16px\">\n        <div v-for=\"(item,idx) in categoryList\" :key=\"'tab-'+item.id\"\n          class=\"flex-align\">\n          <div @click=\"clickTab(item)\" style=\"padding:4px 8px\"\n            :style=\"tabStyle(item)\" class=\"unselect\">{{ item.name }}</div> \n          <div v-if=\"idx<categoryList.length-1\" style=\"color:#888888\">|</div> \n        </div>\n      </div>\n      \n      <div class=\"flex-between position-relative\" style=\"min-height: 112px\">\n        \n        <div class=\"flex-align size-12\" style=\"color:#CCCCCC\">\n          <div style=\"text-decoration:underline\"\n            >{{ productCount }}</div>\n          <div>개의 상품</div>\n        </div>\n        <!--<bread-crumb-pc :breadcrumb=\"breadcrumb\"></bread-crumb-pc>-->\n        \n        <!-- 정렬 드롭다운 -->\n        <div class=\"size-14 weight-500\" :style=\"brandColor.main\"\n          v-click-outside=\"closeDropdown\">\n          <div class=\"dropdown flex-center unselect position-relative\" :style=\"brandBgColor.main\" style=\"z-index:1\"\n            @click.stop.prevent=\"toggleList\">\n            \n            <!--선택된 값-->\n            <i class=\"material-icons\" style=\"font-size: 20px; margin-right:10px;\"\n              :style=\"{color: dropdown.isOpen ? brandColor.primary.color : brandColor.main.color}\"\n              >sort</i>\n            <div v-if=\"dropdown.selected\"\n              :style=\"{color: dropdown.isOpen ? brandColor.primary.color : brandColor.main.color}\"\n              >{{ dropdown.selected.label }}</div>\n              \n            <!--리스트-->\n            <ul v-if=\"dropdown.isOpen\" class=\"dropdown-ul position-absolute\" :style=\"brandBgColor.white\">\n              <li class=\"dropdown-item\" style=\"padding: 12px 16px;\"\n                  v-for=\"(item, idx) in dropdown.options\" :key=\"idx\"\n                  :style=\"itemStyle(idx)\"\n                  @click.stop.prevent=\"clickItem(item)\"\n                  @mouseover.stop.prevent=\"dropdown.mouseOverIndex=idx\"\n                  @mouseleave.stop.prevent=\"dropdown.mouseOverIndex=-1\">\n                {{ item.label }}\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n      </div>\n\n      <!-- 검색된 상품 목록 -->\n      <list-vertical style=\"margin-top:32px;\">\n        <!--<div slot=\"middle-content\" class=\"flex-between\" style=\"align-items: flex-end; margin-bottom:16px;\">-->\n        <!--  <div>-->\n        <!--    <div class=\"size-20 weight-500\" :style=\"brandColor.main\">{{ selectedCategory }}</div>-->\n        <!--  </div>-->\n        <!--</div>-->\n        <div slot=\"card-grid\" class=\"full-width\">\n          <transition-group name=\"fade\" tag=\"div\" class=\"full-width flex wrap\">\n            <div class=\"col-3\"\n              v-for=\"(item,idx) in list\"\n              :style=\"cardStyle(idx)\"\n              :key=\"`card-prod-${item.id}`\">\n              <card-product-pc :card=\"item\"></card-product-pc>\n            </div>\n          </transition-group>\n          <div v-if=\"list && list.length===0\" key=\"empty-view\"\n              class=\"empty-view\"\n              :style=\"brandColor.sub\">검색 결과가 없습니다.</div>  \n              \n        </div>\n      </list-vertical>\n      \n      <pagination-default :pagingData=\"pagingData\" :pageNum=\"3\" :arrowEnd=\"false\"\n        @curPaginationNum=\"(val) => curNum(val)\"\n        v-if=\"pagingData\"></pagination-default>\n      \n    </div>\n  </div>\n    <transition name=\"fade\">\n      <div v-if=\"showRegion\" class=\"region-modal-bg flex-center\" @click.stop.prevent=\"showRegion=false\">\n        <div class=\"region-modal\" @click.stop>\n          <block-region-pc \n            @closeRegion=\"showRegion=false\"\n            @setCurrent=\"currentStatus=true\"\n            @changePosition=\"region => changePosition=region\"\n            ></block-region-pc>\n        </div>\n      </div>\n    </transition>\n    \n  </div>\n\n  <!--  <page-header-mobile type=\"close\" -->\n  <!--  :currentStatus=\"currentStatus\"-->\n  <!--  @currentStatus=\"currentStatus=false\"-->\n  <!--  :changePosition=\"changePosition\" -->\n  <!--  @changePosition=\"changePosition=undefined\"></page-header-mobile>-->\n  <!--<div :style=\"[wrapperStyle, pageHeight, brandBgColor.main]\">-->\n  <!--  <block-region -->\n  <!--    @setCurrent=\"currentStatus=true\"-->\n  <!--    @changePosition=\"region => changePosition=region\"></block-region>-->\n  <!--</div>-->\n</template>\n<script>\nimport LocationComp from \"@/components/Components/Common/LocationComp\"\nimport CardProductPc from \"@/components/Components/Card/CardProductPc\"\nimport FooterMobile from \"@/components/Components/Footer/FooterMobile\"\nimport BlockRegionPc from \"@/components/Components/Block/BlockRegionPc\"\nimport BreadCrumbPc from \"@/components/Components/Common/BreadCrumbPc\"\nimport PaginationDefault from \"@/components/Components/Common/PaginationDefault\"\nimport PageMixin from \"@/components/Components/Mixin/PageMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport ListMixin from \"@/components/Mixins/ListMixin\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'ProductPc',\n  components: {\n    LocationComp,\n    CardProductPc,\n    FooterMobile,\n    BlockRegionPc,\n    BreadCrumbPc,\n    PaginationDefault\n  },\n  mixins: [\n    PageMixin,\n    HeaderMixin,\n    ListMixin,\n    BlockMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"list\": undefined,\n      \"sorted\": {\n        \"value\": \"\"\n      },\n      \"address\": undefined,\n      \"category\": undefined,\n      \"dropdown\": {\n        \"isOpen\": false,\n        \"options\": [],\n        \"selected\": {\n          \"label\": \"\",\n          \"value\": \"\"\n        },\n        \"mouseOverIndex\": -1\n      },\n      \"imgStyle\": {\n        \"width\": \"100%\",\n        \"objectFit\": \"cover\"\n      },\n      \"breadcrumb\": [],\n      \"pagingData\": undefined,\n      \"setAddress\": undefined,\n      \"showRegion\": false,\n      \"searchValue\": \"\",\n      \"selectedTab\": 27,\n      \"sortOptions\": undefined,\n      \"categoryList\": [],\n      \"productCount\": 0,\n      \"categoryAllId\": \"\",\n      \"currentStatus\": false,\n      \"selectedTabId\": \"\",\n      \"changePosition\": undefined,\n      \"curPaginationNum\": undefined,\n      \"selectedCategory\": \"\",\n      \"headerCenterStyle\": {}\n    }\n  },\n  created() {\n    this.init();\n  },\n  \n  methods: {\n    curNum(num) {\n      this.curPaginationNum = num;\n      this.getData();\n    },\n    clickTab(item) {\n      this.selectedTab = item.id;\n      this.tabStyle(item);\n      this.getData();\n    },\n    tabStyle(item) {\n      let deco = {};\n      \n      if(item.id===this.selectedTab) {\n        deco.color = 'white';\n        deco.fontWeight = 'bold'\n      }\n      else {\n        deco.color = '#888888'\n      }\n      \n      return deco;\n    },\n    init() {\n        this.pageLoadType = 'infinite';\n        \n        this.headerCenterStyle = {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        };      \n\n        // 카테고리\n        // this.$axios.get('public/category').then(res=> {\n        //   this.category = res.data;\n        //   this.category.unshift({id:this.categoryAllId, name:'전체보기'})\n          \n          this.$axios.get('public/category')\n        .then(res => {\n          this.category = res.data;\n\n          let lis = [];\n          this.category.forEach(item => {\n            if(item.packages&&item.packages.length>0) {\n              if(item.packages[0]==='call') {\n                lis.push(item);\n              }\n            }\n          });\n          this.categoryList = lis;\n\n        })\n          this.categoryList = lis;\n          \n          this.$axios.get(`public/service/set/filter/${1}`)\n          .then(res =>{\n            \n            this.sortOptions = res.data.sort;\n\n            // active 필터링            \n            this.sortOptions = this.sortOptions.filter(item => item.is_active);\n            \n            // '거리순' 초기값 설정\n            let distance = find(this.sortOptions, 'value', 'distance');\n            if (distance) {\n              let rmIdx = this.sortOptions.indexOf(distance);\n              this.sortOptions.splice(rmIdx,1);\n              this.sortOptions.unshift(distance);\n              this.sorted = '-created_time'\n            }\n            \n            // 정렬옵션 initialize\n            if(this.sortOptions && this.sortOptions.length>0) {\n              this.dropdown.options = this.sortOptions;\n              this.dropdown.selected =this.dropdown.options[0];\n            }         \n\n            this.getData();\n          });\n\n        // })\n\n      },\n    getData() {\n        // let location = '';\n        // if (this.$store.getters.currentPosition===undefined) location = '';\n        // else {\n        //   location = `${this.$store.getters.currentPosition.lng},${this.$store.getters.currentPosition.lat}`;\n        // }\n        \n        // if(this.$route.query.search) {\n        //   this.searchValue = this.$route.query.search;\n        // }\n        // else this.searchValue = '';\n\n        // let sorting = ''\n        // if (typeof(this.sorted)==='string' && this.sorted !== '') {\n        //   sorting = {\n        //     value: this.sorted.replace('-visit', '-partner__visit').replace('-pop_score', '-partner__pop_score')\n        //   }\n        // }\n        \n        let num = 1;\n        if(this.curPaginationNum) {\n          num = this.curPaginationNum;\n        }\n        \n        if (typeof(this.sorted)==='object'&&this.sorted.value!==undefined) this.sorted = this.sorted.value; \n\n        this.url = `user/${this.user.user_id}/mapping/product?fields=id,name,img,like_count,shared_count,visit,simple_desc,rate,reviews_count,partner,products.category,price`\n        // this.url += '&search_keyword=' + encodeURI(this.searchValue);\n        this.url += `&page_num=${num}&page_length=12`;\n        // this.url += `&location=${location}`;\n        this.url += `&ordering=${this.sorted}`;\n        this.url += `&category=${this.selectedTab}`;\n        \n        // 카테고리로 브래드크럼 세팅\n        //this.setBreadCrumb();\n        // 카테고리 한글네임\n        this.setCategoryName();\n        \n        this.currentPage = 1;\n\n        this.$axios.get(this.url).then(res => {\n          this.totalPages = res.data.total_page;\n          this.totalCount = res.data.count;\n          this.currentPage = 2;\n          this.list = res.data.data;\n          this.pagingData = res.data;\n          this.productCount = res.data.count;\n        });\n      },\n    setCategoryName() {\n      if (this.category && this.category.length>0) {\n        let sel = this.category.filter(item => item.id===this.tabId)[0];\n        if (sel) {\n          this.selectedCategory = sel.name;\n        }\n        else this.selectedCategory = '';\n      }\n    },\n    setBreadCrumb() {\n      this.breadcrumb = [];\n      \n      this.breadcrumb.push({\n        \"link\": \"home\",\n        \"name\": \"홈\"\n      });\n\n      // 카테고리 브래드크럼      \n      let catList = [];\n      this.category.forEach(cat => {\n        let search = this.$route.query.search ? this.$route.query.search : '';\n        cat.link = `product?tab=${cat.id}&search=${search}`\n        catList.push(cat);\n      })\n      let currentBread;\n      if (this.$route.query.tab===undefined || this.$route.query.tab==='') currentBread = catList[0];\n      else currentBread = find(catList, 'id', parseInt(this.$route.query.tab));\n      \n      this.breadcrumb.push({\n        name: currentBread.name,\n        link: currentBread.link,\n        list: catList\n      })\n    },\n    onSelectSorted(val) {\n        this.sorted = val;\n        this.getData();\n      },\n    onClickTab(item) {\n        this.selectedTabId = item;\n        this.getData();\n        this.setCategoryName();\n      },\n    updatePosition() {\n        this.getData();\n      },\n    onVMap(value) {\n        if (value) {\n          this.headerCenterStyle = {\n            position: 'absolute',\n            transform: 'none',\n            left: 0\n          };\n        }\n        else {\n          this.headerCenterStyle = {\n            position: 'static',\n            transform: 'none',\n            left: 0\n          };\n        }\n      },\n    // 정렬 옵션 드롭다운\n    toggleList() {\n      this.dropdown.isOpen = !this.dropdown.isOpen;\n    },\n    closeDropdown() {\n      this.dropdown.isOpen = false;\n    },\n    clickItem(item) {\n      this.dropdown.selected = item;\n      this.dropdown.isOpen = false;\n      // this.$emit('selectSorted', item.value);\n      this.onSelectSorted(item.value);\n    },\n    itemStyle(idx) {\n      if (this.dropdown.mouseOverIndex==idx) {\n        return {\n          color: this.brandColor.primary.color\n        }\n      }\n      else {\n        return {\n          color: this.brandColor.main.color\n        }\n      }\n    },\n    cardStyle(idx) {\n      let obj = {\n        // display: 'inline-block',\n        // width: '320px',\n        height: '316px',\n      };\n      \n      let gutters = 16;\n      obj.paddingLeft = `${gutters/2}px`;\n      obj.paddingRight = `${gutters/2}px`;\n      obj.marginBottom = `60px`;\n\n      // if(idx%4===0) obj.paddingLeft = 0;\n      // else if(idx%4===3) obj.paddingRight = 0;\n      \n      return obj;\n    }\n  },\n  computed: {\n    titleStyle() {\n      return {\n        padding: '140px 0 40px',\n        borderBottom: this.brandBorder.main.border,\n        marginBottom: '48px'\n      }\n    },\n    pageBg() {\n      return this.brandBgColor.main;\n    },\n    tabId() {\n      let tab = \"\";\n      if (this.$route.query.tab===undefined || this.$route.query.tab===\"\") tab = \"\";\n      else tab = parseInt(this.$route.query.tab);\n      return tab;\n    },\n    currentAddress() {\n      // 현재 주소\n      let add = this.address;\n      if (add && add.sido && add.sigungu) {\n        return `${add.sido} ${add.sigungu}`;\n      }\n      else return '';\n    },\n    containerStyle() {\n        return {\n          marginTop: '50px',\n          minHeight: 'calc(100vh - 50px)',\n          paddingBottom: '20px'\n        }\n      },\n    headerStyles() {\n        return {\n          container: {\n            // backgroundColor: 'white',\n            color: '#fff',\n            // fontWeight: 400\n          }\n        }\n      },\n    filtered() {\n        return this.$store.getters.filtered.length > 0;\n      },\n    inputStyle() {\n        return {\n          border: 'none',\n          width: '100%',\n          height: '48px',\n          backgroundColor: 'white',\n          padding: '12px 40px 12px 20px',\n          display: 'flex',\n          justifyContent: 'space-between',\n          borderRadius: '12px',\n          fontSize: '14px'\n        }\n      },\n    iconSearchStyle() {\n        return {\n          position: 'absolute',\n          top: '12px',\n          right: '16px'\n        }\n      },\n    btnStyles() {\n        return {\n          container: {\n            // backgroundColor: 'white',\n            // color: this.brandColor.primary.color,\n            color: '#fff',\n            fontWeight: 400\n          }\n        }\n      },\n    unsetCenter() {\n        return {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        }\n      },\n    selectedTabStyle() {\n        return {\n          padding: '12px 16px 11px',\n          textAlign: 'center',\n          fontSize: '14px',\n          borderTop: this.brandBorder.main.border,\n          borderBottom: `2px solid ${this.brandColor.primary.color}`,\n          backgroundColor: '#fff',\n          color: this.brandColor.primary.color\n        }\n      },\n    unselectedTabStyle() {\n        return {\n          padding: '12px 16px',\n          textAlign: 'center',\n          fontSize: '14px',\n          color: this.brandColor.main.color,\n          backgroundColor: '#fff',\n          borderTop: this.brandBorder.main.border,\n        }\n      }\n  },\n  watch: {\n    $route(n) {\n      this.list = undefined;\n      this.getData();\n    },\n    address(n) {\n      if (n) this.getData();\n    }\n  }\n}\n</script>\n<style scoped>\n.dropdown {\n  border-radius: 8px;\n  justify-content: space-between;\n  padding: 14px;  \n}\n.dropdown-ul {\n  background-color: white;\n  box-shadow: 0 4px 24px 0 rgba(0,0,0,0.24);\n  border-radius: 4px;\n  padding: 10px 0;\n  top: 60px;\n  right: 0;\n  width: 120px;\n}\n\n.location-comp-absolute {\n  position: absolute;\n  left: calc(50% - 128px);\n  background-color: #fff;\n}\n\n.location-comp-fixed {\n  position: fixed;\n  z-index: 101;\n  background-color: #fff;  \n  top: calc(((((100% - 64px - 540px) / 2) - 48px) / 2) + 64px); \n  left: calc(50% - 128px);\n}\n\n.region-modal-bg {\n  position: fixed;\n  top: 64px;\n  left: 0;\n  width: 100vw;\n  height: calc(100vh - 64px);\n  background: rgba(0,0,0,0.5);\n  z-index: 100;\n}\n.region-modal {\n  padding: 32px;\n  width: 860px;\n  height: 540px;\n  background: #fff;\n  border-radius: 8px;\n  /*overflow-y: auto;*/\n}\n</style>\n\n"]}]}