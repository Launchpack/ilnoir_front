{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputRating.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputRating.vue","mtime":1605259988000},{"path":"/Users/mard/dev/ilnoir/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.c-rating\n  margin-bottom 6px\n\n.not-form .c-rating\n  margin 0 !important\n\n",{"version":3,"sources":["CInputRating.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;;AAEA;AACA","file":"CInputRating.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div class=\"c-rating\" :style=\"containerStyle\">\r\n\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <star-rating :star-size=\"starSize\"\r\n                 :border-width=\"2\"\r\n                 inactive-color=\"#ffffff\"\r\n                 :border-color=\"rateColor\"\r\n                 :increment=\"0.5\"\r\n                 :active-color=\"rateColor\"\r\n                 :show-rating=\"showRating\"\r\n                 :read-only=\"disabled\"\r\n                 v-model=\"rating\"></star-rating>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import StarRating from 'vue-star-rating';\r\n  import FormMixin from \"@/components/Mixins/FormMixin\"\r\n\r\n  export default {\r\n    name: \"c-input-rating\",\r\n    props: {\r\n      rateColor: {\r\n        type: String,\r\n        required: false,\r\n        default: '#fddb46'\r\n      },\r\n      rateSize: {\r\n        type: Number,\r\n        required: false,\r\n        default: 25\r\n      },\r\n      showRating: {\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      }\r\n    },\r\n\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    components: {\r\n      StarRating\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        rating: this.value\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      rating(n) {\r\n        this.$emit('update:value', n);\r\n      },\r\n      value(n) {\r\n        this.rating = n;\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      starSize() {\r\n        return this.rateSize;\r\n      }\r\n      /*\r\n            rating: {\r\n              get() {\r\n                let change = this.$store.state.builder.backendChange;\r\n\r\n                if (typeof(this.properties.rating) === 'number') {\r\n                  return this.properties.rating\r\n                }\r\n\r\n                let text = this.cloneItem(this.properties.rating);\r\n                let dataSet = this.getDataSet(text);\r\n                // text에서 {} 로 매핑할 데이터 구성한 경우\r\n                if (text.search('{') > -1) {\r\n                  // dataSet이 없을 때, 관리자의 경우 dummy값 출력\r\n                  if (dataSet === undefined) {\r\n                    text = '';\r\n                  }\r\n\r\n                  else {\r\n                    let arr = text.match(/\\{([^}]+)\\}/g);\r\n                    if (arr === null) return '';\r\n                    for (let i = 0; i < arr.length; i++) {\r\n                      let val = arr[i];\r\n                      let val_org = val;\r\n                      let isLength = false;\r\n                      if (val.search('.length') > -1) {\r\n                        isLength = true;\r\n                        val = val.replace('.length', '');\r\n                      }\r\n\r\n                      let dataVal = this.objectValue(dataSet, val);\r\n                      if (dataVal === undefined) {\r\n                        if (this.isAdmin())\r\n                          text = this.properties.emptyView;\r\n                        else\r\n                          text = '';\r\n                        break;\r\n                      } else {\r\n                        if (isLength) {\r\n                          dataVal = dataVal.length.toString();\r\n                        }\r\n                      }\r\n                      text = text.replace(val_org, dataVal);\r\n                    }\r\n                  }\r\n                }\r\n\r\n                if (text === \"undefined\" || text === undefined || text === '') {\r\n                  if (this.isAdmin())\r\n                    text = this.properties.emptyView;\r\n                  else\r\n                    text = '';\r\n                }\r\n                if (text === '') text = 0;\r\n                text = parseInt(text);\r\n                return text;\r\n              },\r\n\r\n              set(newValue) {\r\n                this.properties.rating = newValue;\r\n              }\r\n            }*/\r\n    }\r\n  }\r\n</script>\r\n<style type=\"stylus\" lang=\"stylus\">\r\n  .c-rating\r\n    margin-bottom 6px\r\n\r\n  .not-form .c-rating\r\n    margin 0 !important\r\n\r\n</style>\r\n"]}]}