{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Slot/ListVertical.vue?vue&type=template&id=2b32c21c&scoped=true&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Slot/ListVertical.vue","mtime":1605259990000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n<div>\r\n  <!--<div class=\"flex-between full-width\" style=\"margin-bottom:8px\">-->\r\n  <div class=\"flex-between full-width wrap\">\r\n    <div class=\"full-width\">\r\n      <slot name=\"title\"></slot>\r\n    </div>\r\n    <div class=\"full-width\">\r\n      <search-list v-if=\"search\"\r\n        @getSearch=\"(type, word) => getSearch(type, word)\"></search-list>\r\n    </div>\r\n    <div class=\"full-width\">\r\n      <slot name=\"head\"></slot>\r\n    </div>\r\n\r\n    <!-- 순서대로 display block으로 나열되는 가운데 삽입하고 있을 경우 사용 가능 -->\r\n    <slot name=\"above-sort\"></slot>\r\n\r\n    <div v-if=\"sortStraight\" class=\"full-width flex-end\"\r\n      style=\"margin-top:24px\">\r\n      <div v-for=\"(item,idx) in sortStraight\" :key=\"'key'+idx\"\r\n        :style=\"labelStyle(idx)\" class=\"unselect\"\r\n        v-show=\"item.is_active || item.is_active === undefined\"\r\n        @click=\"clickSort(item)\">\r\n        {{ item.label }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 리스트 정렬 드롭 다운 -->\r\n    <div v-if=\"sortOptions\"\r\n        v-click-outside=\"closeDropdown\" \r\n        style=\"margin:12px 0\" :style=\"sortOptionsStyle\">\r\n      <!-- 드롭다운 -->\r\n      <div class=\"dropdown unselect\" @click.stop.prevent=\"toggleList\">\r\n        <div :style=\"selItemStyle\" v-if=\"dropdown.selected\">{{ dropdown.selected.label }}</div>\r\n        <i class=\"material-icons drop-icon\" :style=\"arrowStyle\">{{ dropdown.isOpen ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\r\n        <!-- Dropdown Item -->\r\n        <ul v-if=\"dropdown.isOpen\" class=\"dropdown-list\">\r\n          <li class=\"dropdown-item\"\r\n              v-for=\"(item, idx) in dropdown.options\"\r\n              :key=\"idx\"\r\n              v-show=\"item.is_active || item.is_active === undefined\"\r\n              :style=\"[itemStyle, mouseOverStyle(idx)]\"\r\n              @click.stop.prevent=\"clickItem(item)\"\r\n              @mouseover=\"dropdown.mouseOverIndex=idx\"\r\n              @mouseleave=\"dropdown.mouseOverIndex=-1\">\r\n            {{ item.label }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 한 요소에서 flex시켜 나열하고 싶을 때 위의 slot 대신 사용 가능 -->\r\n  <slot name=\"middle-content\"></slot>\r\n\r\n  <!-- middle-content slot 밑에 flex 아닌 block으로 나열하고 싶을 때 사용 가능 -->\r\n  <slot name=\"middle-content-second\"></slot>\r\n\r\n  <slot name=\"card\" v-if=\"!hideList\"></slot>\r\n\r\n  <div class=\"grid-box\" v-if=\"!hideList\">\r\n    <slot name=\"card-grid\"></slot>\r\n  </div>\r\n\r\n  <slot name=\"more\"></slot>\r\n\r\n  <pagination :pageNum=\"pageNum\" :pagingData=\"pagingData\" v-if=\"pagingData\"\r\n      @curPaginationNum=\"num => getPaginationNum(num)\"\r\n      :arrowEnd=\"true\"></pagination>\r\n</div>\r\n",null]}