{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputRadiobuttonGroup.vue?vue&type=style&index=0&id=713359bb&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputRadiobuttonGroup.vue","mtime":1605259988000},{"path":"/Users/mard/dev/ilnoir/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.c-input-radiobutton-group-container\n  display flex\n  flex-wrap wrap\n\n.c-input-radiobutton-group-wrap\n  display flex\n  align-items center\n\n.radio-button\n.radio-button-text\n  cursor pointer\n\n.outer\n  border-radius 50%\n  display flex\n  align-items center\n  justify-content center\n  width 18px\n  height 18px\n\n.inner\n  border-radius 50%\n  width 10px\n  height 10px\n\n\n\n.hover-text-style\n  left 0\n  top 28px\n  padding 2px 12px\n  white-space pre \n  border-radius 8px\n\n",{"version":3,"sources":["CInputRadiobuttonGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4QA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA","file":"CInputRadiobuttonGroup.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\">\r\n\r\n  <!-- 레이블 -->\r\n  <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <div :style=\"listStyle\" class=\"full-width wrap\" style=\"margin-top:12px\">\r\n      <div v-for=\"(item, idx) in options\"\r\n          :key=\"`radio-button-${idx}`\"\r\n          class=\"flex-between full-width\"\r\n          :style=\"lableWrapStyle(item,idx)\"\r\n          @click.stop.prevent=\"selectRadioButton(item)\">\r\n\r\n        <div class=\"flex-align\">\r\n          <div v-if=\"align==='left'\"\r\n            class=\"outer\" :style=\"outerStyle(item)\">\r\n            <div v-if=\"item.value===selectedValue\"\r\n                :style=\"innerStyle(item)\"\r\n              class=\"inner\"></div>\r\n          </div>\r\n\r\n          <div class=\"radio-button-text position-relative\" :style=\"itemLabelStyle(item)\"\r\n            @mouseover=\"setHover(true, item)\"\r\n            @mouseleave=\"setHover(false, item)\">{{ item.label }}\r\n            <div class=\"position-absolute hover-text-style\" \r\n              v-if=\"hoverText&&item.disabled&&item.disabled_action==='hover'\"\r\n              :style=\"[brandColor.sub, brandBgColor.sub, brandBorder.main]\">준비중입니다.</div>\r\n            <div :style=\"brandColor.main\" style=\"font-size:11px\" v-if=\"item.desc\">{{ item.desc }}</div>\r\n          </div>\r\n\r\n          <div v-if=\"align==='right'\"\r\n            class=\"outer\" :style=\"outerStyle(item)\">\r\n            <div v-if=\"item.value===selectedValue\"\r\n              class=\"inner\" :style=\"innerStyle(item)\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <i v-if=\"align==='check' && item.value===selectedValue\" class=\"material-icons size-14 bold\" :style=\"brandColor.brand\">check</i>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n\r\n  export default {\r\n    name: 'c-input-radiobuttonGroup',\r\n\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    props: {\r\n      options: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      value: {\r\n        type: [String, Number, Boolean],\r\n        required: false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      align: {\r\n        type: String,\r\n        required: false,\r\n        default: 'left'\r\n      },\r\n      itemLableSelectedStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      itemLableUnselectedStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      lableWrapCustomStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      lableWrapLastStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n    },\r\n\r\n    computed: {\r\n      \r\n    },\r\n\r\n    data() {\r\n      return {\r\n        currentIdx: 0,\r\n        hover: false,\r\n        selectedValue: '',\r\n        hoverText: false,\r\n        disabledState: ''\r\n      }\r\n    },\r\n\r\n    created() {\r\n\r\n      if (this.options) {\r\n        this.disabledState = this.options.every(item => {\r\n          return item.disabled===undefined || item.disabled===false || item.disabled==='';\r\n        })\r\n      }\r\n      else this.disabledState = true;\r\n      \r\n      \r\n      if(this.disabledState===false) {\r\n        this.options.forEach(item => {\r\n          if(item.disabled) {\r\n            \r\n            for(let i=0;this.options.length;i++) {\r\n              if ((this.options[i].disabled===undefined || this.options[i].disabled===false) && (this.options[i].value !==undefined || this.options[i].value!=='') && this.selectedValue==='') {\r\n                this.selectedValue = this.options[i].value;\r\n                this.$emit('update:value', this.selectedValue);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n      \r\n      else {\r\n        if(this.value) {\r\n          this.selectedValue = this.value;\r\n          this.$emit('update:value', this.selectedValue)\r\n        }\r\n        if(this.options.length > 0 && (this.value===undefined || this.value === '') && this.selectedValue==='') {\r\n          this.$emit('update:value', this.options[0].value);\r\n          // this.value = ;\r\n        }\r\n\r\n        if((this.value || this.value===0 || this.value===false) && this.selectedValue==='') {\r\n          this.selectedValue = this.value;\r\n          this.$emit('update:value', this.options[0].value);\r\n          if (find(this.options, 'value', this.value)!==undefined) {\r\n            this.$emit('update:selectedValue', find(this.options, 'value', this.value).label);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      options(n) {\r\n        if(this.value.length===0) {\r\n          this.value = n[0].value;\r\n        }\r\n      },\r\n      value(n) {\r\n        if(n || n===0 || n===false) {\r\n          this.selectedValue = n;\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      outerStyle(item) {\r\n        let deco = {\r\n          width: '16px',\r\n          height: '16px',\r\n          margin: '0px 8px 0px 0px',\r\n          border: '1px solid ' + this.getColor('기본 테두리선 색상'),\r\n          cursor: 'pointer'\r\n        };\r\n        if(item.disabled) {\r\n          deco.cursor = 'default'\r\n        }\r\n        return deco;\r\n      },\r\n\r\n      innerStyle(item) {\r\n        let deco = {\r\n          width: '8px',\r\n          height: '8px',\r\n          backgroundColor: this.brandBgColor.brand.backgroundColor,\r\n          cursor: 'pointer'\r\n        };\r\n        if(item.disabled) {\r\n          deco.cursor = 'default'\r\n        }\r\n        return deco;\r\n      },\r\n      setHover(val, item) {\r\n        this.hover = val;\r\n        if(this.hover) {\r\n          if(item.disabled&&item.disabled_action==='hover') {\r\n            this.hoverText = true;\r\n          }\r\n        }\r\n        else {\r\n          this.hoverText = false;\r\n        }\r\n      },\r\n      lableWrapStyle(item,idx) {\r\n        let deco = {}\r\n\r\n        if(this.lableWrapCustomStyle) {\r\n          deco = this.lableWrapCustomStyle;\r\n          if(idx===this.options.length-1) {\r\n            if(this.lableWrapLastStyle) deco = this.lableWrapLastStyle;\r\n          }\r\n        }\r\n        \r\n        else {\r\n          deco.marginRight = '24px';\r\n          deco.marginBottom = '12px';\r\n\r\n          if(item.id===this.options[this.options.length-1].id) {\r\n            deco.marginRight = '0';\r\n          }          \r\n        }\r\n        return deco;\r\n      },\r\n      itemLabelStyle(item) {\r\n        let deco = {\r\n          fontSize: '15px'\r\n        };\r\n        if(item.disabled) {\r\n          deco.color = '#bbb';\r\n          deco.cursor = 'default';\r\n        }\r\n        else {\r\n          if(item.value === this.selectedValue) {\r\n            if(this.itemLableSelectedStyle) deco = this.itemLableSelectedStyle;\r\n            else deco.color = this.brandColor.brand.color;\r\n          } else {\r\n            if(this.itemLableUnselectedStyle) deco = this.itemLableUnselectedStyle;\r\n            else deco.color = this.brandColor.main.color;\r\n          }\r\n        }\r\n\r\n        return deco;\r\n      },\r\n      selectRadioButton(item) {\r\n        if(!item.disabled) {\r\n          this.selectedValue = item.value;\r\n          this.$emit('update:value', item.value);\r\n          this.$emit('update:selectedValue', item.label);\r\n        }\r\n\r\n        // // 모든 라디오버튼 off\r\n        // let data = this.itemProperties.options;\r\n        // for(let i=0; i<data.length; i++) {\r\n        //   data[i].selected = false;\r\n        // }\r\n        // // 선택된 라디오버튼만 on\r\n        // data[idx].selected = true;\r\n\r\n        /*let action = this.cloneItem(this.properties.action);\r\n        if(action!==undefined) {\r\n          action.value = action.value.replace('{value}', item.label);\r\n        }\r\n        this.onClickAction(action);*/\r\n\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n  .c-input-radiobutton-group-container\r\n    display flex\r\n    flex-wrap wrap\r\n\r\n  .c-input-radiobutton-group-wrap\r\n    display flex\r\n    align-items center\r\n\r\n  .radio-button\r\n  .radio-button-text\r\n    cursor pointer\r\n\r\n  .outer\r\n    border-radius 50%\r\n    display flex\r\n    align-items center\r\n    justify-content center\r\n    width 18px\r\n    height 18px\r\n\r\n  .inner\r\n    border-radius 50%\r\n    width 10px\r\n    height 10px\r\n\r\n\r\n\r\n  .hover-text-style\r\n    left 0\r\n    top 28px\r\n    padding 2px 12px\r\n    white-space pre \r\n    border-radius 8px\r\n\r\n</style>\r\n"]}]}