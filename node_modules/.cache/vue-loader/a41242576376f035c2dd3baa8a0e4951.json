{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputfileUploaderSingle.vue?vue&type=style&index=0&id=0383dabb&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputfileUploaderSingle.vue","mtime":1605259989000},{"path":"/Users/mard/dev/grit12/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//@import '~assets/css/ui_main'\n.imgUploader-view\n  background-size cover\n  background-position center\n\n.imgUploader-input\n  position fixed\n  top -20px\n  left -20px\n  width 0\n  height 0\n\n.imgUploader-box\n  display flex\n  justify-content center\n  align-items center\n  text-align center\n  width 100%\n  height 100%\n\n.imgUploader-close\n  cursor pointer\n  background-color rgba(0, 0, 0, 0.5)\n  color #eee\n  border-radius 50%\n  padding 2px\n  font-size 15px\n  font-weight bold\n  text-align center\n  position absolute\n  top 3px\n  right 3px\n  z-index 10\n",{"version":3,"sources":["CInputfileUploaderSingle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CInputfileUploaderSingle.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"[containerStyle, alignStyle]\"\r\n       class=\"flex wrap\r\n              c-input-imgUploader-container\r\n              position-relative\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\" style=\"width:100%;\">{{ label }}</div>\r\n\r\n    <!-- 이미지 업로더 -->\r\n    <div class=\"imgUploader-view flex-center\"\r\n      :style=\"viewStyles\">\r\n      <input class=\"imgUploader-input\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        @click.stop\r\n        :id=\"uid\"\r\n        @change=\"onFileChange\" \r\n        multiple=\"multiple\" />\r\n      <label class=\"imgUploader-box\"\r\n              @click.stop :for=\"uid\" style=\"width:72px;height:32px;\"> \r\n        <i v-if=\"!fileExisted\" \r\n          class=\"material-icons unselect\"\r\n          :style=\"addIconStyle\">add_a_photo</i>\r\n      </label>\r\n    \r\n\r\n      <div v-if=\"fileExisted\"\r\n          style=\"position: relative; width: 100%; height: 100%;\">\r\n        <!-- 닫기버튼 -->\r\n        <i class=\"imgUploader-close material-icons\"\r\n            style=\"cursor: pointer;\"\r\n            :style=\"closeStyles\"\r\n            @click.stop.prevent=\"deleteImg\">close</i>\r\n      </div>\r\n\r\n    </div>\r\n<!-- \r\n    <div class=\"flex full-width\" style=\"margin-top:12px\">\r\n      <input class=\"imgUploader-input\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              @click.stop\r\n              :id=\"uid\"\r\n              @change=\"onFileChange\" \r\n              multiple=\"multiple\" />\r\n      <label class=\"imgUploader-box\"\r\n              @click.stop :for=\"uid\" style=\"width:72px;height:32px;\">          \r\n        <div class=\"flex-center unselect\" :style=\"imgAddButtonStyle\">{{ fileExisted ? '변경' : '추가' }}</div>\r\n      </label>\r\n\r\n      <div v-if=\"fileExisted\" class=\"flex-center unselect\" :style=\"imgRemoveButtonStyle\" @click.stop.prevent=\"deleteImg\">삭제</div>\r\n    </div> -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n  import ImageUploaderMixin from \"@/components/Mixins/ImageUploaderMixin\";\r\n  import uuidv4 from \"uuid/v4\";\r\n  export default {\r\n    name: 'c-input-fileUploader-single',\r\n    mixins: [\r\n      ImageUploaderMixin,\r\n      FormMixin\r\n    ],\r\n    props: {\r\n      data: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      index: {\r\n        type: Number,\r\n        required: false\r\n      },\r\n      borderStyle: {\r\n        type: String,\r\n        default: 'rectangle'      // circle, rectangle, radius\r\n      },\r\n      align: {\r\n        type: String,\r\n        default: 'left'           // left, center, right\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        uid: '',\r\n        file: this.value,\r\n        imageArray: []\r\n      };\r\n    },\r\n    created() {\r\n      this.uid = uuidv4();\r\n      // if(this.data!==undefined) {\r\n      //   this.properties.img = this.objectValue(this.getDataSet(), this.properties.data);\r\n      // }\r\n      //this.element('a-input-label').properties.enable = true;\r\n    },\r\n    computed: {\r\n      fileExisted() {\r\n        if (this.file===undefined || this.file==='') return false;\r\n        else return true;\r\n      },\r\n      alignStyle() {\r\n        let deco = {};\r\n        if(this.align === 'center') {\r\n          deco.display = 'flex';\r\n          deco.justifyContent = 'center';\r\n        }\r\n\r\n        return deco;\r\n      },\r\n      viewStyles() {\r\n        let deco = {\r\n          border: '2px solid #ddd',\r\n          backgroundImage: 'url('+ this.file +')',\r\n          marginTop: '8px',\r\n          marginRight: '6px',\r\n          width: '96px',\r\n          height: '96px',\r\n          borderRadius: this.radius.borderRadius,\r\n          backgroundColor: '#fff'\r\n        };\r\n\r\n        if (this.imgUploaderStyle) {\r\n          if (this.imgUploaderStyle.width) deco.width = this.imgUploaderStyle.width;\r\n          if (this.imgUploaderStyle.height) deco.height = this.imgUploaderStyle.height;\r\n        }\r\n\r\n        return deco;\r\n      },\r\n      closeStyles() {\r\n        return {};\r\n      },\r\n      addIconStyle() {\r\n        return {\r\n          color: '#bbb',\r\n          fontSize: '36px'\r\n        }\r\n        // return { color: this.getColor('브랜드 강조 색상') }\r\n      },\r\n      imgAddButtonStyle() {\r\n        return {\r\n          fontSize: '12px',\r\n          fontWeight: '500',\r\n          color: this.brandColor.main.color,\r\n          backgroundColor: '#fff',\r\n          borderRadius: this.radius.borderRadius,\r\n          width: '64px',\r\n          height: '32px',\r\n          margin: '0 4px'\r\n        }\r\n      },\r\n      imgRemoveButtonStyle() {\r\n        return {\r\n          fontSize: '12px',\r\n          fontWeight: '500',\r\n          color: '#fff',\r\n          backgroundColor: '#999',\r\n          borderRadius: this.radius.borderRadius,\r\n          width: '64px',\r\n          height: '32px',\r\n          margin: '0 4px'\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      value(n) {\r\n        if (Array.isArray(this.file)) {\r\n          this.file = n;\r\n        }\r\n        else {\r\n          this.file = this.image(n);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      async onFileChange(e) {\r\n        this.$store.commit('setLoadingSpinner', true);\r\n        let files = e.target.files || e.dataTransfer.files;\r\n        if (!files.length) {\r\n          this.$store.commit('setLoadingSpinner', false);\r\n          return;\r\n        }\r\n\r\n        let length = Object.keys(files).length;\r\n\r\n        for(let j=0; j<length; j++) {\r\n          await this.loadFile(files[j], length, j);\r\n        }\r\n      },\r\n      loadFile(file, length, index) {\r\n        return new Promise((resolve) => {\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = (f) => {\r\n            let params = {\r\n              f: f,\r\n              file: file,\r\n              length: length,\r\n              index: index\r\n            };\r\n            resolve(params);\r\n          };\r\n        })\r\n        .then((params) => {\r\n          return this.loadImage(params.f, params.file, params.length, params.index);\r\n        }) \r\n        .catch((err) => {\r\n          this.$store.commit('setLoadingSpinner', false);\r\n          console.log(err);\r\n        })\r\n      },\r\n      loadImage(f, file, length, index) {\r\n        return new Promise((resolve, reject) => {\r\n          const image = new Image;\r\n          image.onload = () => {\r\n            let params = {\r\n              file: file,\r\n              image: image,\r\n              length: length,\r\n              index: index\r\n            };\r\n            resolve(params);\r\n          };\r\n          image.src = f.target.result;\r\n        })  \r\n        .then(params => {\r\n          let afterAction = (function(file, resizeImg, length, index) {\r\n            let self = this;\r\n            self.imageArray.push(resizeImg);\r\n            if (length===self.imageArray.length) {\r\n              if (length===1) self.file = self.imageArray[0];\r\n              else self.file = self.imageArray;\r\n              self.$emit('update:value', self.file);\r\n              self.imageArray = [];\r\n              self.$store.commit('setLoadingSpinner', false);\r\n            }\r\n          }).bind(this);\r\n\r\n          return this.getFixedImage(params.file, params.image, params.length, params.index, afterAction);\r\n          // return this.getFixedImage(params.file, params.image, params.length, params.index);\r\n        })  \r\n        .catch((err) => {\r\n          this.$store.commit('setLoadingSpinner', false);\r\n          console.log(err);\r\n        })           \r\n      },\r\n      deleteImg() {\r\n        if ( this.file && this.file !== '' ) {\r\n          this.file = '';\r\n          this.$emit('delImg', this.index);\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  //@import '~assets/css/ui_main'\r\n  .imgUploader-view\r\n    background-size cover\r\n    background-position center\r\n\r\n  .imgUploader-input\r\n    position fixed\r\n    top -20px\r\n    left -20px\r\n    width 0\r\n    height 0\r\n\r\n  .imgUploader-box\r\n    display flex\r\n    justify-content center\r\n    align-items center\r\n    text-align center\r\n    width 100%\r\n    height 100%\r\n\r\n  .imgUploader-close\r\n    cursor pointer\r\n    background-color rgba(0, 0, 0, 0.5)\r\n    color #eee\r\n    border-radius 50%\r\n    padding 2px\r\n    font-size 15px\r\n    font-weight bold\r\n    text-align center\r\n    position absolute\r\n    top 3px\r\n    right 3px\r\n    z-index 10\r\n</style>\r\n"]}]}