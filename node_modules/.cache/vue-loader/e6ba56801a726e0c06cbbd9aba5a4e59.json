{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/LaunchPack_Common/Header/betweenTxt/Gnbs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/LaunchPack_Common/Header/betweenTxt/Gnbs.vue","mtime":1605260060000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GnbsMixin from \"@/components/Mixins/GnbsMixin\"\n\nexport default {\n  name: 'Gnbs',\n  components: {\n\n  },\n  mixins: [\n    GnbsMixin\n  ],\n  props: {\n    menu: {\n      type: Array,\n      required: false,\n    },\n    depth: {\n      type: Number,\n      required: false,\n    },\n    indicatorStyle: {\n      type: Object,\n      required: false,\n    },\n    customItemStyle: {\n      type: Object,\n      required: false,\n    },\n    selectedItemStyle: {\n      type: Object,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"times\": \"\",\n      \"dragging\": false,\n      \"selectedTab\": undefined\n    }\n  },\n  created() {\n    this.times = this.moment().get('millisecond')\n    this.init();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    itemStyle(id) {\n      let obj = {\n        padding: '13px 16px',\n        width: `${100/this.menu.length}%`,\n        textAlign: 'center'\n      };\n\n      if (id) {\n        if (id===this.selectedTab) {\n          if(this.selectedItemStyle) {\n            return Object.assign(obj, this.selectedItemStyle);\n          }\n          else {\n            obj.color = this.brandColor.brand.color;\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\n          }\n        }\n      }\n      else {\n        let me = this.menu.filter(item => { return item.link === this.$route.path.slice(1) });\n        if (me && me.length>0) {\n          if(this.selectedItemStyle) {\n            return Object.assign(obj, this.selectedItemStyle);\n          }\n          else {\n            obj.color = this.brandColor.brand.color;\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\n          }\n        }\n      }\n      \n\n      if (this.customItemStyle) {\n        return Object.assign(obj, this.customItemStyle);\n      } else {\n        return obj;\n      }\n    }\n  },\n  computed: {\n    \n  },\n  watch: {\n    '$route.query.gnb'(n) {\n      if(n) this.itemStyle(Number(n));\n    }\n  }\n}\n",{"version":3,"sources":["Gnbs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gnbs.vue","sourceRoot":"src/components/LaunchPack_Common/Header/betweenTxt","sourcesContent":["<template>\n<div>\n  <div class=\"list-wrap full-width\"\n         :style=\"grabStyle\">\n      <div class=\"grab-bing flex-align full-width\" ref=\"grabbing\">\n        <div v-for=\"(item,idx) in menu\"\n             :key=\"'tab-'+item.id\" class=\"unselect list-item\"\n             :style=\"itemStyle(item.id)\"\n             @click.stop.prevent=\"clickTab(item,idx)\"\n             :ref=\"'tabItem'+idx\">\n             {{ item.name }}\n              <div v-if=\"item.id===selectedTab\" class=\"indicator\" :style=\"indicatorStyle\"></div>     \n        </div>\n      </div>\n    </div>\n</div>\n</template>\n<script>\nimport GnbsMixin from \"@/components/Mixins/GnbsMixin\"\n\nexport default {\n  name: 'Gnbs',\n  components: {\n\n  },\n  mixins: [\n    GnbsMixin\n  ],\n  props: {\n    menu: {\n      type: Array,\n      required: false,\n    },\n    depth: {\n      type: Number,\n      required: false,\n    },\n    indicatorStyle: {\n      type: Object,\n      required: false,\n    },\n    customItemStyle: {\n      type: Object,\n      required: false,\n    },\n    selectedItemStyle: {\n      type: Object,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"times\": \"\",\n      \"dragging\": false,\n      \"selectedTab\": undefined\n    }\n  },\n  created() {\n    this.times = this.moment().get('millisecond')\n    this.init();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    itemStyle(id) {\n      let obj = {\n        padding: '13px 16px',\n        width: `${100/this.menu.length}%`,\n        textAlign: 'center'\n      };\n\n      if (id) {\n        if (id===this.selectedTab) {\n          if(this.selectedItemStyle) {\n            return Object.assign(obj, this.selectedItemStyle);\n          }\n          else {\n            obj.color = this.brandColor.brand.color;\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\n          }\n        }\n      }\n      else {\n        let me = this.menu.filter(item => { return item.link === this.$route.path.slice(1) });\n        if (me && me.length>0) {\n          if(this.selectedItemStyle) {\n            return Object.assign(obj, this.selectedItemStyle);\n          }\n          else {\n            obj.color = this.brandColor.brand.color;\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\n          }\n        }\n      }\n      \n\n      if (this.customItemStyle) {\n        return Object.assign(obj, this.customItemStyle);\n      } else {\n        return obj;\n      }\n    }\n  },\n  computed: {\n    \n  },\n  watch: {\n    '$route.query.gnb'(n) {\n      if(n) this.itemStyle(Number(n));\n    }\n  }\n}\n</script>\n<style scoped>\n.list-wrap {\n  overflow: hidden;\n}\n.grab-bing {\n  white-space: nowrap;\n  position: relative;\n}\n.list-item {\n  display: inline-block;\n}\n</style>\n\n"]}]}