{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Common/Location.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Common/Location.vue","mtime":1605259984000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: 'Location',\n  data() {\n    return {\n      location: {\n        latitude: undefined,\n        longitude: undefined,\n      }\n    }\n  },\n  created() {\n    if (navigator.geolocation) { // GPS를 지원하면 navigator.geolocation 으로 현재 좌표 얻어오기\n      navigator.geolocation.getCurrentPosition(position => {\n        this.location.latitude = position.coords.latitude;\n        this.location.longitude = position.coords.longitude;\n        let current_position = {lat: this.location.latitude, lng: this.location.longitude};\n        this.$store.commit('setCurrentPosition', current_position);\n      }, error => {\n        console.log(error);\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } \n    else {\n      console.log('GPS를 지원하지 않습니다');\n    }\n  },\n  destroyed() {\n    this.$store.commit('setCurrentPosition', undefined);\n  },\n}\n",{"version":3,"sources":["Location.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Location.vue","sourceRoot":"src/components/Components/Common","sourcesContent":["<template>\r\n  <div class=\"location\"></div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'Location',\r\n    data() {\r\n      return {\r\n        location: {\r\n          latitude: undefined,\r\n          longitude: undefined,\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      if (navigator.geolocation) { // GPS를 지원하면 navigator.geolocation 으로 현재 좌표 얻어오기\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.location.latitude = position.coords.latitude;\r\n          this.location.longitude = position.coords.longitude;\r\n          let current_position = {lat: this.location.latitude, lng: this.location.longitude};\r\n          this.$store.commit('setCurrentPosition', current_position);\r\n        }, error => {\r\n          console.log(error);\r\n        }, {\r\n          enableHighAccuracy: false,\r\n          maximumAge: 0,\r\n          timeout: Infinity\r\n        });\r\n      } \r\n      else {\r\n        console.log('GPS를 지원하지 않습니다');\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$store.commit('setCurrentPosition', undefined);\r\n    },\r\n  }\r\n</script>\r\n"]}]}