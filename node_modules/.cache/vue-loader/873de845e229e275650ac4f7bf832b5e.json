{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Common/EImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Common/EImage.vue","mtime":1605259983000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport uuidv4 from 'uuid/v4'\r\nimport objectFitImages from 'object-fit-images'\r\n\r\nexport default {\r\n  props: {\r\n    isLazy: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    isBg: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bgOption: {\r\n      type: String\r\n    },\r\n    useThumb: {\r\n      type: Boolean\r\n    },\r\n    img: {\r\n      type: String\r\n    },\r\n    imageRates: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    category: {\r\n      type: Number\r\n    },\r\n    width: {\r\n      type: [Number, String]\r\n    },\r\n    height: {\r\n      type: [Number, String]\r\n    },\r\n    objectFit: {\r\n      type: String,\r\n      default: 'cover'\r\n    },\r\n    useRatio: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      alt: '',\r\n      ratio: '',\r\n      imgSrc: '',\r\n      uid: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.uid = uuidv4();\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      if (this.useRatio) {\r\n        this.setRatio();\r\n      }\r\n      this.setImage();\r\n      this.setAlt();\r\n\r\n      objectFitImages();\r\n    })\r\n  },\r\n  methods: {\r\n    setImage() {\r\n      let img = '';\r\n      if (this.img === this.dummyImage.bg) {\r\n        img = this.img;\r\n      } else if (this.useThumb) {\r\n        let imageSrc = this.img;\r\n        let temp = imageSrc.split('.');\r\n        if (temp[0].split('//')[1] === \"launchpack-storage\") {\r\n          temp[temp.length - 2] = `${temp[temp.length - 2]}_thumb`;\r\n          img = temp.join('.');\r\n        } else {\r\n          img = this.img;\r\n        }\r\n      } else {\r\n        img = this.img;\r\n      }\r\n      // IE, Mac OS 10.15까지의 safari 브라우저를 제외한 나머지 브라우저 .webp로 이미지 전환\r\n      if(navigator.userAgent.indexOf('Trident')===-1 && navigator.userAgent.indexOf('Mac OS X')===-1) {\r\n        img = img.replace('.jpg', '.webp').replace('.jpeg', '.webp').replace('.png', '.webp').replace('.JPG', '.webp').replace('.JPEG', '.webp').replace('.PNG', '.webp');\r\n      }\r\n      this.imgSrc = img;\r\n    },\r\n    setAlt() {\r\n      this.$axios.get(`https://ig7m3u7il7.execute-api.ap-northeast-2.amazonaws.com/v1/save_img_text?path=${this.img}`, {headers: ''}).then(res=>{\r\n        this.alt = res.data;\r\n      });\r\n    },\r\n    setRatio() {\r\n      this.ratio = this.imageRates.ratio;\r\n\r\n      if (this.imageRates.exception && this.imageRates.exception.length !== 0) {\r\n        this.imageRates.exception.forEach(item => {\r\n          if (item.category === this.category) {\r\n            this.ratio = item.ratio;\r\n          }\r\n        })\r\n      }\r\n    },\r\n    \r\n  },\r\n  computed: {\r\n    imgWrapperStyle() {\r\n      let deco = {\r\n        width: '',\r\n        height: '',\r\n        minHeight: '',\r\n        overflow: 'hidden'\r\n      }\r\n\r\n      if (this.$store.getters.device === 'pc') {\r\n        deco.width = `${window.innerWidth}px`;\r\n      } else {\r\n        deco.width = `${this.$store.getters.deviceWidth}px`;\r\n      }\r\n      if (this.width) {\r\n        if (typeof this.width === \"string\") {\r\n          deco.width = this.width;\r\n        } else {\r\n          deco.width = `${this.width}px`;\r\n        }\r\n      }\r\n      if (this.useRatio) {\r\n        switch(this.ratio) {\r\n          case '1:1':\r\n            deco.height = deco.width;\r\n            break;\r\n          case '2.35:1':\r\n            deco.height = `calc(${deco.width} * 1/2.35)`;\r\n            break;\r\n          case '3:1':\r\n            deco.height = `calc(${deco.width} * 1/3)`;\r\n            break;\r\n          case '3:2':\r\n            deco.height = `calc(${deco.width} * 2/3)`;\r\n            break;\r\n          case '3:4':\r\n            deco.height = `calc(${deco.width} * 4/3)`;\r\n            break;\r\n          case '4:1':\r\n            deco.height = `calc(${deco.width} * 1/4)`;\r\n            break;\r\n          case '4:3':\r\n            deco.height = `calc(${deco.width} * 3/4)`;\r\n            break;\r\n          case '5:1':\r\n            deco.height = `calc(${deco.width} * 1/5)`;\r\n            break;\r\n          case '8:1':\r\n            deco.height = `calc(${deco.width} * 1/8)`;\r\n            break;\r\n          case '16:9':\r\n            deco.height = `calc(${deco.width} * 9/16)`;\r\n            break;\r\n          default:\r\n            deco.height = deco.width;\r\n            break;\r\n        }\r\n      } else {\r\n        if (this.height) {\r\n          if (typeof this.height === \"string\") {\r\n            deco.height = this.height;\r\n          } else {\r\n            deco.height = `${this.height}px`;\r\n          }\r\n        } else {\r\n          deco.height = '100px';\r\n        }\r\n      }\r\n      \r\n      deco.minHeight = deco.height;\r\n      return deco;\r\n    },\r\n    imgStyle() {\r\n      let deco = {\r\n        width: '',\r\n        height: '',\r\n        minHeight: '',\r\n        objectFit: this.objectFit,\r\n        fontFamily: `object-fit: ${this.objectFit}`\r\n      }\r\n\r\n      if (this.$store.getters.device === 'pc') {\r\n        deco.width = `${window.innerWidth}px`;\r\n      } else {\r\n        deco.width = `${this.$store.getters.deviceWidth}px`;\r\n      }\r\n      if (this.width) {\r\n        if (typeof this.width === \"string\") {\r\n          deco.width = this.width;\r\n        } else {\r\n          deco.width = `${this.width}px`;\r\n        }\r\n      }\r\n\r\n      if (this.useRatio) {\r\n        switch(this.ratio) {\r\n          case '1:1':\r\n            deco.height = deco.width;\r\n            break;\r\n          case '2.35:1':\r\n            deco.height = `calc(${deco.width} * 1/2.35)`;\r\n            break;\r\n          case '3:1':\r\n            deco.height = `calc(${deco.width} * 1/3)`;\r\n            break;\r\n          case '3:2':\r\n            deco.height = `calc(${deco.width} * 2/3)`;\r\n            break;\r\n          case '3:4':\r\n            deco.height = `calc(${deco.width} * 4/3)`;\r\n            break;\r\n          case '4:1':\r\n            deco.height = `calc(${deco.width} * 1/4)`;\r\n            break;\r\n          case '4:3':\r\n            deco.height = `calc(${deco.width} * 3/4)`;\r\n            break;\r\n          case '5:1':\r\n            deco.height = `calc(${deco.width} * 1/5)`;\r\n            break;\r\n          case '8:1':\r\n            deco.height = `calc(${deco.width} * 1/8)`;\r\n            break;\r\n          case '16:9':\r\n            deco.height = `calc(${deco.width} * 9/16)`;\r\n            break;\r\n          default:\r\n            deco.height = deco.width;\r\n            break;\r\n        }\r\n      } else {\r\n        if (this.height) {\r\n          if (typeof this.height === \"string\") {\r\n            deco.height = this.height;\r\n          } else {\r\n            deco.height = `${this.height}px`;\r\n          }\r\n        } else {\r\n          deco.height = '100px';\r\n        }\r\n      }\r\n      \r\n      deco.minHeight = deco.height;\r\n      return deco;\r\n    },\r\n    bgStyle() {\r\n      let deco = {\r\n        width: '',\r\n        height: '',\r\n        minHeight: '',\r\n        backgroundImage: `url(${this.imgSrc})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat'\r\n      }\r\n\r\n      if (!this.isLazy && this.bgOption) {\r\n        deco.backgroundImage = `${this.bgOption}, url(${this.imgSrc})`\r\n      }\r\n\r\n      if (this.$store.getters.device === 'pc') {\r\n        deco.width = `${window.innerWidth}px`;\r\n      } else {\r\n        deco.width = `${this.$store.getters.deviceWidth}px`;\r\n      }\r\n      if (this.width) {\r\n        if (typeof this.width === \"string\") {\r\n          deco.width = this.width;\r\n        } else {\r\n          deco.width = `${this.width}px`;\r\n        }\r\n      }\r\n      if (this.useRatio) {\r\n        switch(this.ratio) {\r\n          case '1:1':\r\n            deco.height = deco.width;\r\n            break;\r\n          case '2.35:1':\r\n            deco.height = `calc(${deco.width} * 1/2.35)`;\r\n            break;\r\n          case '3:1':\r\n            deco.height = `calc(${deco.width} * 1/3)`;\r\n            break;\r\n          case '3:2':\r\n            deco.height = `calc(${deco.width} * 2/3)`;\r\n            break;\r\n          case '3:4':\r\n            deco.height = `calc(${deco.width} * 4/3)`;\r\n            break;\r\n          case '4:1':\r\n            deco.height = `calc(${deco.width} * 1/4)`;\r\n            break;\r\n          case '4:3':\r\n            deco.height = `calc(${deco.width} * 3/4)`;\r\n            break;\r\n          case '5:1':\r\n            deco.height = `calc(${deco.width} * 1/5)`;\r\n            break;\r\n          case '8:1':\r\n            deco.height = `calc(${deco.width} * 1/8)`;\r\n            break;\r\n          case '16:9':\r\n            deco.height = `calc(${deco.width} * 9/16)`;\r\n            break;\r\n          default:\r\n            deco.height = deco.width;\r\n            break;\r\n        }\r\n      } else {\r\n        if (this.height) {\r\n          if (typeof this.height === \"string\") {\r\n            deco.height = this.height;\r\n          } else {\r\n            deco.height = `${this.height}px`;\r\n          }\r\n        } else {\r\n          deco.height = '100px';\r\n        }\r\n      }\r\n      \r\n      deco.minHeight = deco.height;\r\n      return deco;\r\n    }\r\n  },\r\n  watch: {\r\n    img(n, o) {\r\n      this.img = n;\r\n      this.setImage();\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["EImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"EImage.vue","sourceRoot":"src/components/Components/Common","sourcesContent":["<template>\r\n  <div v-if=\"isBg && isLazy\" v-lazy:background-image=\"imgSrc\" :key=\"uid\" :style=\"bgStyle\">\r\n    <slot name=\"inner\"></slot>\r\n  </div>\r\n  <div v-else-if=\"isBg\" :key=\"uid\" :style=\"bgStyle\">\r\n    <slot name=\"inner\"></slot>\r\n  </div>\r\n  <div v-else-if=\"isLazy\" :style=\"imgWrapperStyle\">\r\n    <img v-if=\"imgSrc !== ''\" v-lazy=\"imgSrc\"\r\n      :key=\"uid\" :style=\"imgStyle\" :alt=\"alt\" :data-object-fit=\"objectFit\" />\r\n  </div>\r\n  <div v-else :style=\"imgWrapperStyle\">\r\n    <img v-if=\"imgSrc !== ''\" :key=\"uid\" :style=\"imgStyle\" :src=\"imgSrc\" :alt=\"alt\" :data-object-fit=\"objectFit\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport uuidv4 from 'uuid/v4'\r\nimport objectFitImages from 'object-fit-images'\r\n\r\nexport default {\r\n  props: {\r\n    isLazy: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    isBg: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bgOption: {\r\n      type: String\r\n    },\r\n    useThumb: {\r\n      type: Boolean\r\n    },\r\n    img: {\r\n      type: String\r\n    },\r\n    imageRates: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    category: {\r\n      type: Number\r\n    },\r\n    width: {\r\n      type: [Number, String]\r\n    },\r\n    height: {\r\n      type: [Number, String]\r\n    },\r\n    objectFit: {\r\n      type: String,\r\n      default: 'cover'\r\n    },\r\n    useRatio: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      alt: '',\r\n      ratio: '',\r\n      imgSrc: '',\r\n      uid: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.uid = uuidv4();\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      if (this.useRatio) {\r\n        this.setRatio();\r\n      }\r\n      this.setImage();\r\n      this.setAlt();\r\n\r\n      objectFitImages();\r\n    })\r\n  },\r\n  methods: {\r\n    setImage() {\r\n      let img = '';\r\n      if (this.img === this.dummyImage.bg) {\r\n        img = this.img;\r\n      } else if (this.useThumb) {\r\n        let imageSrc = this.img;\r\n        let temp = imageSrc.split('.');\r\n        if (temp[0].split('//')[1] === \"launchpack-storage\") {\r\n          temp[temp.length - 2] = `${temp[temp.length - 2]}_thumb`;\r\n          img = temp.join('.');\r\n        } else {\r\n          img = this.img;\r\n        }\r\n      } else {\r\n        img = this.img;\r\n      }\r\n      // IE, Mac OS 10.15까지의 safari 브라우저를 제외한 나머지 브라우저 .webp로 이미지 전환\r\n      if(navigator.userAgent.indexOf('Trident')===-1 && navigator.userAgent.indexOf('Mac OS X')===-1) {\r\n        img = img.replace('.jpg', '.webp').replace('.jpeg', '.webp').replace('.png', '.webp').replace('.JPG', '.webp').replace('.JPEG', '.webp').replace('.PNG', '.webp');\r\n      }\r\n      this.imgSrc = img;\r\n    },\r\n    setAlt() {\r\n      this.$axios.get(`https://ig7m3u7il7.execute-api.ap-northeast-2.amazonaws.com/v1/save_img_text?path=${this.img}`, {headers: ''}).then(res=>{\r\n        this.alt = res.data;\r\n      });\r\n    },\r\n    setRatio() {\r\n      this.ratio = this.imageRates.ratio;\r\n\r\n      if (this.imageRates.exception && this.imageRates.exception.length !== 0) {\r\n        this.imageRates.exception.forEach(item => {\r\n          if (item.category === this.category) {\r\n            this.ratio = item.ratio;\r\n          }\r\n        })\r\n      }\r\n    },\r\n    \r\n  },\r\n  computed: {\r\n    imgWrapperStyle() {\r\n      let deco = {\r\n        width: '',\r\n        height: '',\r\n        minHeight: '',\r\n        overflow: 'hidden'\r\n      }\r\n\r\n      if (this.$store.getters.device === 'pc') {\r\n        deco.width = `${window.innerWidth}px`;\r\n      } else {\r\n        deco.width = `${this.$store.getters.deviceWidth}px`;\r\n      }\r\n      if (this.width) {\r\n        if (typeof this.width === \"string\") {\r\n          deco.width = this.width;\r\n        } else {\r\n          deco.width = `${this.width}px`;\r\n        }\r\n      }\r\n      if (this.useRatio) {\r\n        switch(this.ratio) {\r\n          case '1:1':\r\n            deco.height = deco.width;\r\n            break;\r\n          case '2.35:1':\r\n            deco.height = `calc(${deco.width} * 1/2.35)`;\r\n            break;\r\n          case '3:1':\r\n            deco.height = `calc(${deco.width} * 1/3)`;\r\n            break;\r\n          case '3:2':\r\n            deco.height = `calc(${deco.width} * 2/3)`;\r\n            break;\r\n          case '3:4':\r\n            deco.height = `calc(${deco.width} * 4/3)`;\r\n            break;\r\n          case '4:1':\r\n            deco.height = `calc(${deco.width} * 1/4)`;\r\n            break;\r\n          case '4:3':\r\n            deco.height = `calc(${deco.width} * 3/4)`;\r\n            break;\r\n          case '5:1':\r\n            deco.height = `calc(${deco.width} * 1/5)`;\r\n            break;\r\n          case '8:1':\r\n            deco.height = `calc(${deco.width} * 1/8)`;\r\n            break;\r\n          case '16:9':\r\n            deco.height = `calc(${deco.width} * 9/16)`;\r\n            break;\r\n          default:\r\n            deco.height = deco.width;\r\n            break;\r\n        }\r\n      } else {\r\n        if (this.height) {\r\n          if (typeof this.height === \"string\") {\r\n            deco.height = this.height;\r\n          } else {\r\n            deco.height = `${this.height}px`;\r\n          }\r\n        } else {\r\n          deco.height = '100px';\r\n        }\r\n      }\r\n      \r\n      deco.minHeight = deco.height;\r\n      return deco;\r\n    },\r\n    imgStyle() {\r\n      let deco = {\r\n        width: '',\r\n        height: '',\r\n        minHeight: '',\r\n        objectFit: this.objectFit,\r\n        fontFamily: `object-fit: ${this.objectFit}`\r\n      }\r\n\r\n      if (this.$store.getters.device === 'pc') {\r\n        deco.width = `${window.innerWidth}px`;\r\n      } else {\r\n        deco.width = `${this.$store.getters.deviceWidth}px`;\r\n      }\r\n      if (this.width) {\r\n        if (typeof this.width === \"string\") {\r\n          deco.width = this.width;\r\n        } else {\r\n          deco.width = `${this.width}px`;\r\n        }\r\n      }\r\n\r\n      if (this.useRatio) {\r\n        switch(this.ratio) {\r\n          case '1:1':\r\n            deco.height = deco.width;\r\n            break;\r\n          case '2.35:1':\r\n            deco.height = `calc(${deco.width} * 1/2.35)`;\r\n            break;\r\n          case '3:1':\r\n            deco.height = `calc(${deco.width} * 1/3)`;\r\n            break;\r\n          case '3:2':\r\n            deco.height = `calc(${deco.width} * 2/3)`;\r\n            break;\r\n          case '3:4':\r\n            deco.height = `calc(${deco.width} * 4/3)`;\r\n            break;\r\n          case '4:1':\r\n            deco.height = `calc(${deco.width} * 1/4)`;\r\n            break;\r\n          case '4:3':\r\n            deco.height = `calc(${deco.width} * 3/4)`;\r\n            break;\r\n          case '5:1':\r\n            deco.height = `calc(${deco.width} * 1/5)`;\r\n            break;\r\n          case '8:1':\r\n            deco.height = `calc(${deco.width} * 1/8)`;\r\n            break;\r\n          case '16:9':\r\n            deco.height = `calc(${deco.width} * 9/16)`;\r\n            break;\r\n          default:\r\n            deco.height = deco.width;\r\n            break;\r\n        }\r\n      } else {\r\n        if (this.height) {\r\n          if (typeof this.height === \"string\") {\r\n            deco.height = this.height;\r\n          } else {\r\n            deco.height = `${this.height}px`;\r\n          }\r\n        } else {\r\n          deco.height = '100px';\r\n        }\r\n      }\r\n      \r\n      deco.minHeight = deco.height;\r\n      return deco;\r\n    },\r\n    bgStyle() {\r\n      let deco = {\r\n        width: '',\r\n        height: '',\r\n        minHeight: '',\r\n        backgroundImage: `url(${this.imgSrc})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat'\r\n      }\r\n\r\n      if (!this.isLazy && this.bgOption) {\r\n        deco.backgroundImage = `${this.bgOption}, url(${this.imgSrc})`\r\n      }\r\n\r\n      if (this.$store.getters.device === 'pc') {\r\n        deco.width = `${window.innerWidth}px`;\r\n      } else {\r\n        deco.width = `${this.$store.getters.deviceWidth}px`;\r\n      }\r\n      if (this.width) {\r\n        if (typeof this.width === \"string\") {\r\n          deco.width = this.width;\r\n        } else {\r\n          deco.width = `${this.width}px`;\r\n        }\r\n      }\r\n      if (this.useRatio) {\r\n        switch(this.ratio) {\r\n          case '1:1':\r\n            deco.height = deco.width;\r\n            break;\r\n          case '2.35:1':\r\n            deco.height = `calc(${deco.width} * 1/2.35)`;\r\n            break;\r\n          case '3:1':\r\n            deco.height = `calc(${deco.width} * 1/3)`;\r\n            break;\r\n          case '3:2':\r\n            deco.height = `calc(${deco.width} * 2/3)`;\r\n            break;\r\n          case '3:4':\r\n            deco.height = `calc(${deco.width} * 4/3)`;\r\n            break;\r\n          case '4:1':\r\n            deco.height = `calc(${deco.width} * 1/4)`;\r\n            break;\r\n          case '4:3':\r\n            deco.height = `calc(${deco.width} * 3/4)`;\r\n            break;\r\n          case '5:1':\r\n            deco.height = `calc(${deco.width} * 1/5)`;\r\n            break;\r\n          case '8:1':\r\n            deco.height = `calc(${deco.width} * 1/8)`;\r\n            break;\r\n          case '16:9':\r\n            deco.height = `calc(${deco.width} * 9/16)`;\r\n            break;\r\n          default:\r\n            deco.height = deco.width;\r\n            break;\r\n        }\r\n      } else {\r\n        if (this.height) {\r\n          if (typeof this.height === \"string\") {\r\n            deco.height = this.height;\r\n          } else {\r\n            deco.height = `${this.height}px`;\r\n          }\r\n        } else {\r\n          deco.height = '100px';\r\n        }\r\n      }\r\n      \r\n      deco.minHeight = deco.height;\r\n      return deco;\r\n    }\r\n  },\r\n  watch: {\r\n    img(n, o) {\r\n      this.img = n;\r\n      this.setImage();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}