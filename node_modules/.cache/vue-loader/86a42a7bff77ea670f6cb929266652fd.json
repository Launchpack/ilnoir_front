{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Common/BaseDropdownInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Common/BaseDropdownInput.vue","mtime":1605259983000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    value: {\n      type: [String, Number, Boolean, Object, Array]\n    },\n\n    options: {\n      type: Array,\n      required: true\n    },\n\n    placeholder: {\n      type: String,\n      required: false\n    },\n\n    width: {\n      type: String,\n      required: false\n    },\n\n    disabled: {\n      type: Boolean\n    }\n  },\n\n  data() {\n    return {\n      isOpen: false,\n      value_data: this.value,\n      oldValue: this.value\n    }\n  },\n\n  computed: {\n    containerStyle() {\n      let deco = {\n        width: '100%'\n      };\n\n      if(this.width)\n        deco.width = this.width;\n\n      return deco;\n    },\n    valueLabel() {\n      let found = this.options.find(opt => {\n        return opt.val === this.value;\n      });\n      if (found)\n        return found.label;\n      else\n        return '';\n    },\n\n    valueLabelStyle() {\n      let found = this.options.find(opt => {\n        return opt.val === this.value;\n      });\n      if (found && found.styles)\n        return found.styles;\n      return {};\n    },\n\n    listStyle() {\n      if(this.width)\n        return \"width: \" + this.width;\n    }\n  },\n\n  watch: {\n    value_data(n) {\n      this.$emit('update:val', n);\n    },\n    val(n) {\n      this.value_data = n;\n    }\n  },\n\n  created() {\n  },\n\n  methods: {\n    openList() {\n      if(this.disabled) return;\n\n      if (!this.isOpen) {\n        this.isOpen = true;\n        this.onInputStart(this.value_data);\n      } else {\n        this.isOpen = false;\n      }\n    },\n    clickTargetItem(item) {\n      this.value_data = item.val;\n      // setLog가 val 변경 전에 실행되는 문제가 있어서 추가함.\n      this.$emit('input', this.value_data);\n      this.$emit('selected', item);\n      this.onInputDone(item.val);\n      this.isOpen = false;\n    },\n\n    onInputStart(val) {\n      this.oldValue = val;\n    },\n\n    onInputDone(val) {\n      // this.value_data = val;\n      if (this.oldValue !== this.value_data) {\n        this.$emit('change');\n      }\n    }\n  }\n}\n",{"version":3,"sources":["BaseDropdownInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseDropdownInput.vue","sourceRoot":"src/components/Components/Common","sourcesContent":["<template>\r\n  <div class=\"lp-base-input base-dropdown-input\" :style=\"containerStyle\">\r\n    <div style=\"position:relative; display:inline-block\"\r\n         :class=\"{'full-width': true }\">\r\n      <div class=\"prop-drop-down-select-wrapper\"\r\n           :class=\"{'full-width': true}\"\r\n           @click.stop.prevent=\"openList\">\r\n        <div class=\"prop-drop-down-select-item\"\r\n             :style=\"valueLabelStyle\">{{ (value_data === '') ? (placeholder || '') : valueLabel }}</div>\r\n      </div>\r\n      <div v-if=\"isOpen\"\r\n           class=\"prop-drop-down-list-outsider\"\r\n           @click=\"isOpen=false\">\r\n      </div>\r\n      <ul v-if=\"isOpen\" class=\"prop-drop-down-list\" :style=\"listStyle\">\r\n        <li v-for=\"(opt,idx) in options\" :key=\"'sort-list'+idx\"\r\n            class=\"prop-drop-down-item selectable-list-item\"\r\n            :style=\"opt.styles\"\r\n            @click=\"clickTargetItem(opt)\">{{ opt.label }}</li>\r\n      </ul>\r\n    </div>\r\n    <i class=\"material-icons prop-drop-down-arrow-icon\">{{ isOpen ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: {\r\n      value: {\r\n        type: [String, Number, Boolean, Object, Array]\r\n      },\r\n\r\n      options: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n\r\n      placeholder: {\r\n        type: String,\r\n        required: false\r\n      },\r\n\r\n      width: {\r\n        type: String,\r\n        required: false\r\n      },\r\n\r\n      disabled: {\r\n        type: Boolean\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        isOpen: false,\r\n        value_data: this.value,\r\n        oldValue: this.value\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      containerStyle() {\r\n        let deco = {\r\n          width: '100%'\r\n        };\r\n\r\n        if(this.width)\r\n          deco.width = this.width;\r\n\r\n        return deco;\r\n      },\r\n      valueLabel() {\r\n        let found = this.options.find(opt => {\r\n          return opt.val === this.value;\r\n        });\r\n        if (found)\r\n          return found.label;\r\n        else\r\n          return '';\r\n      },\r\n\r\n      valueLabelStyle() {\r\n        let found = this.options.find(opt => {\r\n          return opt.val === this.value;\r\n        });\r\n        if (found && found.styles)\r\n          return found.styles;\r\n        return {};\r\n      },\r\n\r\n      listStyle() {\r\n        if(this.width)\r\n          return \"width: \" + this.width;\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      value_data(n) {\r\n        this.$emit('update:val', n);\r\n      },\r\n      val(n) {\r\n        this.value_data = n;\r\n      }\r\n    },\r\n\r\n    created() {\r\n    },\r\n\r\n    methods: {\r\n      openList() {\r\n        if(this.disabled) return;\r\n\r\n        if (!this.isOpen) {\r\n          this.isOpen = true;\r\n          this.onInputStart(this.value_data);\r\n        } else {\r\n          this.isOpen = false;\r\n        }\r\n      },\r\n      clickTargetItem(item) {\r\n        this.value_data = item.val;\r\n        // setLog가 val 변경 전에 실행되는 문제가 있어서 추가함.\r\n        this.$emit('input', this.value_data);\r\n        this.$emit('selected', item);\r\n        this.onInputDone(item.val);\r\n        this.isOpen = false;\r\n      },\r\n\r\n      onInputStart(val) {\r\n        this.oldValue = val;\r\n      },\r\n\r\n      onInputDone(val) {\r\n        // this.value_data = val;\r\n        if (this.oldValue !== this.value_data) {\r\n          this.$emit('change');\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .prop-item\r\n    font-size .8rem\r\n    position relative\r\n\r\n  .base-dropdown-input\r\n    border 1px solid #eee\r\n    border-radius 3px\r\n    position relative\r\n\r\n  .prop-drop-down-select-wrapper\r\n    display flex\r\n    align-items center\r\n    background #fff\r\n    justify-content space-between\r\n    font-size .8rem\r\n    height 32px\r\n    cursor pointer\r\n    padding 0 6px 0 10px\r\n  // border 1px solid #EEEEEE\r\n  // padding 0 2px\r\n  // border-radius 3px\r\n\r\n  .prop-drop-down-select-item\r\n    display flex\r\n    align-items center\r\n    cursor pointer\r\n  // width 24px\r\n\r\n  .prop-drop-down-arrow-icon\r\n    font-size 18px\r\n    width 18px\r\n    color #999\r\n    cursor pointer\r\n    margin-left 8px\r\n    flex 0\r\n    position absolute\r\n    right 4px\r\n    top 7px\r\n\r\n  .prop-drop-down-list\r\n    position absolute\r\n    // box-shadow 3px 4px 8px 0px #999\r\n    background-color #fff\r\n    // border-radius 3px\r\n    z-index 12\r\n    // border 1px solid #ddd\r\n    bottom 32px\r\n    left 0\r\n    width 100%\r\n    cursor pointer\r\n    box-shadow 0 1px 4px rgba(204,204,204,0.5)\r\n    max-height 600px\r\n    overflow auto\r\n  // border-top none\r\n\r\n  .prop-drop-down-item\r\n    background-color #fff\r\n    padding 4px\r\n    font-size .8rem\r\n  .prop-drop-down-item:hover\r\n    background-color #ddd\r\n\r\n\r\n</style>\r\n"]}]}