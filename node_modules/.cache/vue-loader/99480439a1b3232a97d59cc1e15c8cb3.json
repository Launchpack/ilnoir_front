{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockSignin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockSignin.vue","mtime":1605260001000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockSignin',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    AuthMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": []\n    }\n  },\n  created() {\n      this.getForm();\n    },\n  \n  methods: {\n    getForm() {\n        let data = [\n          {\n            name: '아이디',\n            field: 'username',\n            label: '',\n            placeholder: '아이디',\n            format: 'CInput_email',\n            validate: {\n              required: true,          // 값 필수 여부\n              valid_required: true,     // validation 필수 여부\n              min_length: 4,            // 최소 문자 수\n              max_length: 30,           // 최대 문자 수\n              alpha_s: true,            // 알파벳 소문자\n              alpha_g: true,            // 알파벳 대문자\n              num: true,                // 숫자\n              special: true             // 특수문자\n            },\n            value: '',\n          },\n          {\n            name: '비밀번호',\n            field: 'password',\n            label: '',\n            placeholder: '비밀번호',\n            format: 'CInput_password',\n            validate: {\n              required: true,           // 값 필수 여부\n              valid_required: true,     // validation 필수 여부\n            },\n            value: '',\n          }\n        ];\n        this.formData = this.setForm(data);\n      },\n    login() {\n        let result = this.getParamData(this.formData);\n\n        if(result.enable) {\n          this.$axios.post(`auth/user/login`, result.params)\n          .then(res=>{\n            if(res.status===200) {\n              this.toast('로그인 되었습니다.');\n              this.setUserData(res.data);\n              this.setAuthHeader();\n              let path = this.$store.getters.previousPath;\n              if(!path) {\n                path = this.$store.getters.brand.startpage;\n              }\n              this.$router.replace(path);\n\n            }\n          })\n          .catch(err=> {\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      }\n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BlockSignin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"BlockSignin.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div>\n\n  <!--로그인 폼 요소-->\n  <component :is=\"form.elType\" v-for=\"(form,idx) in formData\" :key=\"'form-'+idx\"\n             v-bind=\"form\" :value.sync=\"form.value\" @onEnter=\"login\"\n             :formType=\"formTypeCustom\"\n             :containerCustomStyle=\"{marginTop: '8px'}\"\n             :inputCustomStyle=\"inputCustom\"></component>\n\n  <!--로그인 버튼-->\n  <div :style=\"buttonCustom\" style=\"margin-top:16px\" @click=\"login\">로그인</div>\n\n  <!--회원가입/비밀번호찾기-->\n  <div class=\"flex-center size-14\" style=\"margin-top:32px\" :style=\"brandColor.primary\">\n    <div class=\"weight-500 unselect\" @click=\"routerPush('signup')\" style=\"padding:4px 16px\">회원가입</div>\n    <div class=\"weight-500 unselect\" style=\"padding:4px 16px\" @click=\"routerModal('PasswordEmail')\">비밀번호 찾기</div>\n  </div>\n  \n  <!-- 소셜 로그인 폼 -->\n  <c-sns-signin style=\"margin-top: 48px;\"></c-sns-signin>\n    \n\n</div>\n</template>\n<script>\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockSignin',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    AuthMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": []\n    }\n  },\n  created() {\n      this.getForm();\n    },\n  \n  methods: {\n    getForm() {\n        let data = [\n          {\n            name: '아이디',\n            field: 'username',\n            label: '',\n            placeholder: '아이디',\n            format: 'CInput_email',\n            validate: {\n              required: true,          // 값 필수 여부\n              valid_required: true,     // validation 필수 여부\n              min_length: 4,            // 최소 문자 수\n              max_length: 30,           // 최대 문자 수\n              alpha_s: true,            // 알파벳 소문자\n              alpha_g: true,            // 알파벳 대문자\n              num: true,                // 숫자\n              special: true             // 특수문자\n            },\n            value: '',\n          },\n          {\n            name: '비밀번호',\n            field: 'password',\n            label: '',\n            placeholder: '비밀번호',\n            format: 'CInput_password',\n            validate: {\n              required: true,           // 값 필수 여부\n              valid_required: true,     // validation 필수 여부\n            },\n            value: '',\n          }\n        ];\n        this.formData = this.setForm(data);\n      },\n    login() {\n        let result = this.getParamData(this.formData);\n\n        if(result.enable) {\n          this.$axios.post(`auth/user/login`, result.params)\n          .then(res=>{\n            if(res.status===200) {\n              this.toast('로그인 되었습니다.');\n              this.setUserData(res.data);\n              this.setAuthHeader();\n              let path = this.$store.getters.previousPath;\n              if(!path) {\n                path = this.$store.getters.brand.startpage;\n              }\n              this.$router.replace(path);\n\n            }\n          })\n          .catch(err=> {\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      }\n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"]}]}