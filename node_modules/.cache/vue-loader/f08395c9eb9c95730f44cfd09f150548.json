{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Pages/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Pages/Search.vue","mtime":1605260017000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PageHeaderMobile from \"@/components/Components/Common/PageHeaderMobile\"\nimport CardProduct from \"@/components/Components/Card/CardProduct\"\nimport PageMixin from \"@/components/Components/Mixin/PageMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport ListMixin from \"@/components/Mixins/ListMixin\"\n\nexport default {\n  name: 'Search',\n  components: {\n    PageHeaderMobile,\n    CardProduct\n  },\n  mixins: [\n    PageMixin,\n    HeaderMixin,\n    ListMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"list\": undefined,\n      \"sorted\": {\n        \"value\": \"\"\n      },\n      \"address\": undefined,\n      \"dropdown\": {\n        \"isOpen\": false,\n        \"options\": [],\n        \"selected\": {\n          \"label\": \"\",\n          \"value\": \"\"\n        },\n        \"mouseOverIndex\": -1\n      },\n      \"setAddress\": undefined,\n      \"searchValue\": \"\",\n      \"sortOptions\": undefined,\n      \"selectedCategory\": \"\",\n      \"headerCenterStyle\": {}\n    }\n  },\n  created() {\n    this.setCategoryName();\n    this.init();\n  },\n  updated() {\n    // 현재 카테고리\n    this.setCategoryName();\n  },\n  \n  methods: {\n    init() {\n        this.pageLoadType = 'infinite';\n        \n        this.headerCenterStyle = {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        };      \n\n        let filterId = 1;\n        if (this.$store.getters.commonFilter) {\n          filterId = this.$store.getters.commonFilter.productFilter;\n        }\n        this.$axios.get(`public/service/set/filter/${filterId}`)\n        .then(res =>{\n          \n          this.sortOptions = res.data.sort;\n\n          // active 필터링            \n          this.sortOptions = this.sortOptions.filter(item => item.is_active);\n          \n          // '거리순' 초기값 설정\n          let distance = find(this.sortOptions, 'value', 'distance');\n          if (distance) {\n            let rmIdx = this.sortOptions.indexOf(distance);\n            this.sortOptions.splice(rmIdx,1);\n            this.sortOptions.unshift(distance);\n            this.sorted = 'distance'\n          }\n          \n          // 정렬옵션 initialize\n          if(this.sortOptions && this.sortOptions.length>0) {\n            this.dropdown.options = this.sortOptions;\n            this.dropdown.selected =this.dropdown.options[0];\n          }         \n\n          this.getData();\n        });\n\n\n        if(this.$route.query.search_tag) {\n          this.searchValue = this.$route.query.search_tag;\n        }\n\n      },\n    getData() {\n        let location = '';\n        if (this.$store.getters.currentPosition===undefined) location = '';\n        else {\n          location = `${this.$store.getters.currentPosition.lng},${this.$store.getters.currentPosition.lat}`;\n        }\n\n        let sorting = ''\n        if (typeof(this.sorted)==='string' && this.sorted !== '') {\n          sorting = {\n            value: this.sorted.replace('-visit', '-partner__visit').replace('-pop_score', '-partner__pop_score')\n          }\n        }\n        \n        // 필터 정렬 사용X\n        // else {\n        //   sorting = this.$store.getters.sorted;\n        // }\n\n        this.url = this.urlAppendFilter(this.$store.getters.filtered, sorting,\n          `user/${this.user.user_id}/mapping/product?fields=id,name,img,like_count,shared_count,visit,simple_desc,rate,reviews_count,partner,products.category` +\n          '&search_keyword=' + encodeURI(this.searchValue));\n        \n        this.url += '&page_num=1&page_length=12';\n        this.url += `&location=${location}`;\n        \n        if(Number(this.$route.query.gnb)) {\n          this.url += `&category=${this.$route.query.gnb}`;\n        }\n        else {\n          this.url += '&category=';\n        }\n\n        this.currentPage = 1;\n\n        this.$axios.get(this.url).then(res => {\n          this.totalPages = res.data.total_page;\n          this.totalCount = res.data.count;\n          this.currentPage = 2;\n          this.list = res.data.data;\n        });\n      },\n    setCategoryName() {\n      let menu = this.$store.getters.brand.menu_set.filter(item => { return item.name === 'GNB' });\n      if(menu && menu.length>0 && this.$route.query.gnb) {\n        let sel = menu[0].menu.filter(item => { return item.id === Number(this.$route.query.gnb) })[0];\n        if (sel) {\n          this.selectedCategory = sel.name;\n        }\n        else this.selectedCategory = '';\n      }\n    },\n    onSelectSorted(val) {\n        this.sorted = val;\n        this.getData();\n      },\n    updatePosition() {\n        this.getData();\n      },\n    onVMap(value) {\n        if (value) {\n          this.headerCenterStyle = {\n            position: 'absolute',\n            transform: 'none',\n            left: 0\n          };\n        }\n        else {\n          this.headerCenterStyle = {\n            position: 'static',\n            transform: 'none',\n            left: 0\n          };\n        }\n      },\n    // 정렬 옵션 드롭다운\n    toggleList() {\n      this.dropdown.isOpen = !this.dropdown.isOpen;\n    },\n    closeDropdown() {\n      this.dropdown.isOpen = false;\n    },\n    clickItem(item) {\n      this.dropdown.selected = item;\n      this.dropdown.isOpen = false;\n      // this.$emit('selectSorted', item.value);\n      this.onSelectSorted(item.value);\n    },\n    itemStyle(idx) {\n      if (this.dropdown.mouseOverIndex==idx) {\n        return {\n          color: this.brandColor.primary.color\n        }\n      }\n      else {\n        return {\n          color: this.brandColor.main.color\n        }\n      }\n    },\n    cardStyle(idx) {\n      let obj = {}\n      \n      let gutters = this.$store.getters.brand.layout_gutters;\n      obj.paddingLeft = `${gutters/2}px`;\n      obj.paddingRight = `${gutters/2}px`;\n      obj.paddingBottom = `${gutters}px`;\n      \n      if(idx%2===0) obj.paddingLeft = 0;\n      else if(idx%2===1) obj.paddingRight = 0;\n      \n      return obj;\n    }\n  },\n  computed: {\n    pageBg() {\n      return this.brandBgColor.main;\n    },\n    currentAddress() {\n      // 현재 주소\n      let add = this.address;\n      if (add && add.sido && add.sigungu) {\n        return `${add.sido} ${add.sigungu}`;\n      }\n      else return '';\n    },\n    containerStyle() {\n        return {\n          minHeight: 'calc(100vh - 50px)'\n        }\n      },\n    filtered() {\n        return this.$store.getters.filtered.length > 0;\n      },\n    inputStyle() {\n        return {\n          border: 'none',\n          width: '100%',\n          height: '48px',\n          backgroundColor: 'white',\n          padding: '12px 40px 12px 20px',\n          display: 'flex',\n          justifyContent: 'space-between',\n          borderRadius: '12px',\n          fontSize: '14px'\n        }\n      },\n    iconSearchStyle() {\n        return {\n          position: 'absolute',\n          top: '12px',\n          right: '16px'\n        }\n      },\n    btnStyles() {\n        return {\n          container: {\n            // backgroundColor: 'white',\n            // color: this.brandColor.primary.color,\n            color: '#fff',\n            fontWeight: 400\n          }\n        }\n      },\n    unsetCenter() {\n        return {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        }\n      },\n    selectedTabStyle() {\n        return {\n          padding: '12px 16px 11px',\n          textAlign: 'center',\n          fontSize: '14px',\n          borderTop: this.brandBorder.main.border,\n          borderBottom: `2px solid ${this.brandColor.primary.color}`,\n          backgroundColor: '#fff',\n          color: this.brandColor.primary.color\n        }\n      },\n    unselectedTabStyle() {\n        return {\n          padding: '12px 16px',\n          textAlign: 'center',\n          fontSize: '14px',\n          color: this.brandColor.main.color,\n          backgroundColor: '#fff',\n          borderTop: this.brandBorder.main.border,\n        }\n      }\n  },\n  watch: {\n    '$route.query.gnb'(n) {\n      this.setCategoryName();\n      this.getData();\n    }\n  }\n}\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components/Pages","sourcesContent":["<template>\n<div :style=\"[containerStyle, pageBg]\">\n    \n    <page-header-mobile @currentAddress=\"val=>address=val\"></page-header-mobile>\n    \n    <div>\n\n          <!-- 검색된 상품 목록 -->\n          <list-vertical :style=\"pagePadding\">\n\n            <!-- 검색창 -->\n            <div slot=\"above-sort\" class=\"position-relative full-width\" style=\"margin: 24px 0;\">\n              <input :style=\"inputStyle\" type=\"text\" placeholder=\"검색어를 입력하세요\"\n                     :value=\"searchValue\" @input=\"e => searchValue = e.target.value\" @keyup.enter=\"getData\">\n              <i class=\"material-icons unselect\" :style=\"iconSearchStyle\" @click=\"getData\">search</i>\n            </div>\n            \n            <div slot=\"middle-content\" class=\"flex-between\" style=\"align-items: flex-end; margin-bottom:16px;\">\n              \n              <div>\n                <div v-if=\"selectedCategory\" class=\"size-20 weight-500\" :style=\"brandColor.main\">{{ selectedCategory }}</div>\n                <div class=\"size-14\" :style=\"brandColor.sub\">{{ currentAddress }}의 상품들</div>\n              </div>\n              \n              <!-- 정렬 드롭다운 -->\n              <div class=\"size-12 weight-500\" :style=\"brandColor.main\" style=\"min-width:84px;\"\n                v-click-outside=\"closeDropdown\">\n                <div class=\"dropdown flex-center unselect\" :style=\"brandBgColor.white\" style=\"z-index:1\"\n                  @click.stop.prevent=\"toggleList\">\n                  \n                  <!--선택된 값-->\n                  <i class=\"material-icons\" style=\"font-size: 20px; margin-right:2px;\"\n                    :style=\"{color: dropdown.isOpen ? brandColor.primary.color : brandColor.main.color}\"\n                    >sort</i>\n                  <div v-if=\"dropdown.selected\"\n                    :style=\"{color: dropdown.isOpen ? brandColor.primary.color : brandColor.main.color}\"\n                    >{{ dropdown.selected.label }}</div>\n                    \n                  <!--리스트-->\n                  <ul v-if=\"dropdown.isOpen\" class=\"dropdown-ul position-absolute\" :style=\"brandBgColor.white\">\n                    <li class=\"dropdown-item\" style=\"padding: 8px 12px;\"\n                        v-for=\"(item, idx) in dropdown.options\" :key=\"idx\"\n                        :style=\"itemStyle(idx)\"\n                        @click.stop.prevent=\"clickItem(item)\"\n                        @mouseover.stop.prevent=\"dropdown.mouseOverIndex=idx\"\n                        @mouseleave.stop.prevent=\"dropdown.mouseOverIndex=-1\">\n                      {{ item.label }}\n                    </li>\n                  </ul>\n                  \n                </div>\n              </div>\n            </div>\n\n            <div slot=\"card\" v-if=\"list\" style=\"min-height: 252px;\">\n            <transition-group name=\"fade\" tag=\"div\" class=\"grid-box\">\n                <card-product \n                  v-for=\"(item,idx) in list\"\n                  class=\"col-6\"\n                  :style=\"cardStyle(idx)\"\n                  :key=\"`card-prod-${item.id}-${idx}`\"\n                  :card=\"item\"></card-product>\n            </transition-group>\n            </div>\n            \n          </list-vertical>\n\n          <div v-if=\"list && list.length===0\"\n              class=\"empty-view\"\n              :style=\"brandColor.sub\">검색 결과가 없습니다.</div>\n\n\n    </div>\n    \n  </div>\n</template>\n<script>\nimport PageHeaderMobile from \"@/components/Components/Common/PageHeaderMobile\"\nimport CardProduct from \"@/components/Components/Card/CardProduct\"\nimport PageMixin from \"@/components/Components/Mixin/PageMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport ListMixin from \"@/components/Mixins/ListMixin\"\n\nexport default {\n  name: 'Search',\n  components: {\n    PageHeaderMobile,\n    CardProduct\n  },\n  mixins: [\n    PageMixin,\n    HeaderMixin,\n    ListMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"list\": undefined,\n      \"sorted\": {\n        \"value\": \"\"\n      },\n      \"address\": undefined,\n      \"dropdown\": {\n        \"isOpen\": false,\n        \"options\": [],\n        \"selected\": {\n          \"label\": \"\",\n          \"value\": \"\"\n        },\n        \"mouseOverIndex\": -1\n      },\n      \"setAddress\": undefined,\n      \"searchValue\": \"\",\n      \"sortOptions\": undefined,\n      \"selectedCategory\": \"\",\n      \"headerCenterStyle\": {}\n    }\n  },\n  created() {\n    this.setCategoryName();\n    this.init();\n  },\n  updated() {\n    // 현재 카테고리\n    this.setCategoryName();\n  },\n  \n  methods: {\n    init() {\n        this.pageLoadType = 'infinite';\n        \n        this.headerCenterStyle = {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        };      \n\n        let filterId = 1;\n        if (this.$store.getters.commonFilter) {\n          filterId = this.$store.getters.commonFilter.productFilter;\n        }\n        this.$axios.get(`public/service/set/filter/${filterId}`)\n        .then(res =>{\n          \n          this.sortOptions = res.data.sort;\n\n          // active 필터링            \n          this.sortOptions = this.sortOptions.filter(item => item.is_active);\n          \n          // '거리순' 초기값 설정\n          let distance = find(this.sortOptions, 'value', 'distance');\n          if (distance) {\n            let rmIdx = this.sortOptions.indexOf(distance);\n            this.sortOptions.splice(rmIdx,1);\n            this.sortOptions.unshift(distance);\n            this.sorted = 'distance'\n          }\n          \n          // 정렬옵션 initialize\n          if(this.sortOptions && this.sortOptions.length>0) {\n            this.dropdown.options = this.sortOptions;\n            this.dropdown.selected =this.dropdown.options[0];\n          }         \n\n          this.getData();\n        });\n\n\n        if(this.$route.query.search_tag) {\n          this.searchValue = this.$route.query.search_tag;\n        }\n\n      },\n    getData() {\n        let location = '';\n        if (this.$store.getters.currentPosition===undefined) location = '';\n        else {\n          location = `${this.$store.getters.currentPosition.lng},${this.$store.getters.currentPosition.lat}`;\n        }\n\n        let sorting = ''\n        if (typeof(this.sorted)==='string' && this.sorted !== '') {\n          sorting = {\n            value: this.sorted.replace('-visit', '-partner__visit').replace('-pop_score', '-partner__pop_score')\n          }\n        }\n        \n        // 필터 정렬 사용X\n        // else {\n        //   sorting = this.$store.getters.sorted;\n        // }\n\n        this.url = this.urlAppendFilter(this.$store.getters.filtered, sorting,\n          `user/${this.user.user_id}/mapping/product?fields=id,name,img,like_count,shared_count,visit,simple_desc,rate,reviews_count,partner,products.category` +\n          '&search_keyword=' + encodeURI(this.searchValue));\n        \n        this.url += '&page_num=1&page_length=12';\n        this.url += `&location=${location}`;\n        \n        if(Number(this.$route.query.gnb)) {\n          this.url += `&category=${this.$route.query.gnb}`;\n        }\n        else {\n          this.url += '&category=';\n        }\n\n        this.currentPage = 1;\n\n        this.$axios.get(this.url).then(res => {\n          this.totalPages = res.data.total_page;\n          this.totalCount = res.data.count;\n          this.currentPage = 2;\n          this.list = res.data.data;\n        });\n      },\n    setCategoryName() {\n      let menu = this.$store.getters.brand.menu_set.filter(item => { return item.name === 'GNB' });\n      if(menu && menu.length>0 && this.$route.query.gnb) {\n        let sel = menu[0].menu.filter(item => { return item.id === Number(this.$route.query.gnb) })[0];\n        if (sel) {\n          this.selectedCategory = sel.name;\n        }\n        else this.selectedCategory = '';\n      }\n    },\n    onSelectSorted(val) {\n        this.sorted = val;\n        this.getData();\n      },\n    updatePosition() {\n        this.getData();\n      },\n    onVMap(value) {\n        if (value) {\n          this.headerCenterStyle = {\n            position: 'absolute',\n            transform: 'none',\n            left: 0\n          };\n        }\n        else {\n          this.headerCenterStyle = {\n            position: 'static',\n            transform: 'none',\n            left: 0\n          };\n        }\n      },\n    // 정렬 옵션 드롭다운\n    toggleList() {\n      this.dropdown.isOpen = !this.dropdown.isOpen;\n    },\n    closeDropdown() {\n      this.dropdown.isOpen = false;\n    },\n    clickItem(item) {\n      this.dropdown.selected = item;\n      this.dropdown.isOpen = false;\n      // this.$emit('selectSorted', item.value);\n      this.onSelectSorted(item.value);\n    },\n    itemStyle(idx) {\n      if (this.dropdown.mouseOverIndex==idx) {\n        return {\n          color: this.brandColor.primary.color\n        }\n      }\n      else {\n        return {\n          color: this.brandColor.main.color\n        }\n      }\n    },\n    cardStyle(idx) {\n      let obj = {}\n      \n      let gutters = this.$store.getters.brand.layout_gutters;\n      obj.paddingLeft = `${gutters/2}px`;\n      obj.paddingRight = `${gutters/2}px`;\n      obj.paddingBottom = `${gutters}px`;\n      \n      if(idx%2===0) obj.paddingLeft = 0;\n      else if(idx%2===1) obj.paddingRight = 0;\n      \n      return obj;\n    }\n  },\n  computed: {\n    pageBg() {\n      return this.brandBgColor.main;\n    },\n    currentAddress() {\n      // 현재 주소\n      let add = this.address;\n      if (add && add.sido && add.sigungu) {\n        return `${add.sido} ${add.sigungu}`;\n      }\n      else return '';\n    },\n    containerStyle() {\n        return {\n          minHeight: 'calc(100vh - 50px)'\n        }\n      },\n    filtered() {\n        return this.$store.getters.filtered.length > 0;\n      },\n    inputStyle() {\n        return {\n          border: 'none',\n          width: '100%',\n          height: '48px',\n          backgroundColor: 'white',\n          padding: '12px 40px 12px 20px',\n          display: 'flex',\n          justifyContent: 'space-between',\n          borderRadius: '12px',\n          fontSize: '14px'\n        }\n      },\n    iconSearchStyle() {\n        return {\n          position: 'absolute',\n          top: '12px',\n          right: '16px'\n        }\n      },\n    btnStyles() {\n        return {\n          container: {\n            // backgroundColor: 'white',\n            // color: this.brandColor.primary.color,\n            color: '#fff',\n            fontWeight: 400\n          }\n        }\n      },\n    unsetCenter() {\n        return {\n          position: 'static',\n          transform: 'none',\n          left: 0\n        }\n      },\n    selectedTabStyle() {\n        return {\n          padding: '12px 16px 11px',\n          textAlign: 'center',\n          fontSize: '14px',\n          borderTop: this.brandBorder.main.border,\n          borderBottom: `2px solid ${this.brandColor.primary.color}`,\n          backgroundColor: '#fff',\n          color: this.brandColor.primary.color\n        }\n      },\n    unselectedTabStyle() {\n        return {\n          padding: '12px 16px',\n          textAlign: 'center',\n          fontSize: '14px',\n          color: this.brandColor.main.color,\n          backgroundColor: '#fff',\n          borderTop: this.brandBorder.main.border,\n        }\n      }\n  },\n  watch: {\n    '$route.query.gnb'(n) {\n      this.setCategoryName();\n      this.getData();\n    }\n  }\n}\n</script>\n<style scoped>\n.dropdown {\n    border-radius: 4px;\n    justify-content: space-between;\n    padding: 6px 10px;\n  }\n  \n  .dropdown-ul {\n    background-color: white;\n    top: 40px;\n    width: 96px;\n    box-shadow: 0 4px 24px 0 rgba(0,0,0,0.24);\n    border-radius: 4px;\n    right: 0;\n    padding: 10px 0;\n  }\n</style>\n\n"]}]}