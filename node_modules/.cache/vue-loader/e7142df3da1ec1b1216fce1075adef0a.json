{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Button/BtnPc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Button/BtnPc.vue","mtime":1605260005000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\n\nexport default {\n  name: 'BtnPc',\n  components: {\n\n  },\n  mixins: [\n\n  ],\n  props: {\n    width: {\n      type: String,\n      default: \"223px\",\n      required: false,\n    },\n    height: {\n      type: String,\n      default: \"48px\",\n      required: false,\n    },\n    styles: {\n      type: String,\n      default: \"more\",\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \n    }\n  },\n  created() {\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    btnStyle() {\n      let deco = {\n        width: `${this.width}`,\n        height: `${this.height}`,\n        textAlign: 'center',\n        lineHeight: `${this.height}`,\n        borderRadius: '8px',\n        fontSize: '16px',\n        fontWeight: 'bold'\n      };\n      if(this.styles==='more') {\n        deco.border = `1px solid ${this.getColor('보조 테두리선 색상')}`\n        deco.backgroundColor = 'white'\n        deco.color = `${this.getColor('보조 내용 색상')}`\n      }\n      if(this.styles==='reverse') {\n        deco.backgroundColor = `#c3996b`\n        deco.color = 'white'\n      }\n      if(this.styles==='brand') {\n        deco.backgroundColor = `${this.getColor('브랜드 강조 색상')}`\n        deco.color = 'white'\n      }\n      if(this.styles==='primary') {\n        deco.backgroundColor = `${this.getColor('Primary Color')}`\n        deco.color = 'white'\n      }\n      return deco;\n    },\n    clickBtn() {\n      this.$emit('onClick');\n    }\n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BtnPc.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"BtnPc.vue","sourceRoot":"src/components/Components/Button","sourcesContent":["<template>\n<div :style=\"btnStyle()\" class=\"unselect\"\n  @click=\"clickBtn\"><slot></slot></div>\n</template>\n<script>\n\nexport default {\n  name: 'BtnPc',\n  components: {\n\n  },\n  mixins: [\n\n  ],\n  props: {\n    width: {\n      type: String,\n      default: \"223px\",\n      required: false,\n    },\n    height: {\n      type: String,\n      default: \"48px\",\n      required: false,\n    },\n    styles: {\n      type: String,\n      default: \"more\",\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \n    }\n  },\n  created() {\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    btnStyle() {\n      let deco = {\n        width: `${this.width}`,\n        height: `${this.height}`,\n        textAlign: 'center',\n        lineHeight: `${this.height}`,\n        borderRadius: '8px',\n        fontSize: '16px',\n        fontWeight: 'bold'\n      };\n      if(this.styles==='more') {\n        deco.border = `1px solid ${this.getColor('보조 테두리선 색상')}`\n        deco.backgroundColor = 'white'\n        deco.color = `${this.getColor('보조 내용 색상')}`\n      }\n      if(this.styles==='reverse') {\n        deco.backgroundColor = `#c3996b`\n        deco.color = 'white'\n      }\n      if(this.styles==='brand') {\n        deco.backgroundColor = `${this.getColor('브랜드 강조 색상')}`\n        deco.color = 'white'\n      }\n      if(this.styles==='primary') {\n        deco.backgroundColor = `${this.getColor('Primary Color')}`\n        deco.color = 'white'\n      }\n      return deco;\n    },\n    clickBtn() {\n      this.$emit('onClick');\n    }\n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"]}]}