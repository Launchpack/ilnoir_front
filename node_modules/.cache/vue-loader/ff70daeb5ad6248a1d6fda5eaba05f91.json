{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockReviewReg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockReviewReg.vue","mtime":1605260027000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CardProductReview from \"@/components/Components/Card/CardProductReview\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockReviewReg',\n  components: {\n    CardProductReview\n  },\n  mixins: [\n    BlockMixin,\n    FormMixin,\n    HeaderMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"평점\",\n          \"field\": \"rate\",\n          \"label\": \"평점\",\n          \"value\": 5,\n          \"format\": \"CRating\",\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          }\n        },\n        {\n          \"name\": \"제목\",\n          \"field\": \"title\",\n          \"label\": \"제목\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 30,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"제목을 입력하세요\"\n        },\n        {\n          \"name\": \"내용\",\n          \"field\": \"content\",\n          \"label\": \"내용\",\n          \"value\": \"\",\n          \"format\": \"CInput_textarea\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 500,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"내용을 입력하세요\"\n        },\n        {\n          \"name\": \"비밀글\",\n          \"field\": \"is_secret\",\n          \"label\": \"비밀글로 작성합니다.\",\n          \"value\": false,\n          \"format\": \"CInput_checkbox\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"\"\n        },\n        {\n          \"name\": \"첨부파일 추가\",\n          \"field\": \"imgs\",\n          \"label\": \"\",\n          \"format\": \"CImgUploaderArray\",\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"+첨부파일 추가\"\n        }\n      ],\n      \"list_product\": [],\n      \"booking_order_id\": undefined,\n      \"reservation_order_id\": undefined,\n      \"list_product_my_review\": []\n    }\n  },\n  created() {\n      this.review_id = this.$route.query.review_id;\n      this.product_id = this.$route.query.product_id;\n      this.getReviewDetail();\n      this.getProductDetail();\n      this.initForm();\n    },\n  \n  methods: {\n    initForm() {\n      this.formData = this.setForm(this.formData);\n      \n      let title = find(this.formData, 'field', 'title');\n      title.inputCustom = this.inputCustom;\n      \n      let content = find(this.formData, 'field', 'content');\n      content.inputCustom = this.inputCustomTextarea;\n    },\n    async getProductDetail() {\n      this.list_product =[];\n        let url = `user/${this.user.user_id}/mapping/product/${this.product_id}?fields=id,order_conversion_type,img,name,partner.name,price,like_count,shared_count,reviews_count,simple_desc,rate`;\n        await this.$axios.get(url).then(res => {\n          this.list_product.push(res.data);\n        })\n        if(!this.$route.query.author_id && this.user.user_id !== Number(this.$route.query.author_id)) this.getMyreview();\n      },\n    async getMyreview() {\n      this.list_product_my_review = [];\n      this.booking_order_id = undefined;\n\n      let id = this.list_product[0].id;\n      let type = this.list_product[0].order_conversion_type;\n      let type_str = type===10 ? 'reservation' : type===11 ? 'booking' : '';\n      let list = [];\n      await this.$axios.get(`user/${this.$store.getters.user.user_id}/${type_str}/order/review/${id}`)\n      .then(res => {\n        list = res.data.data;\n      })\n      this.list_product_my_review = list.filter(item => { return item.order_status_kor==='이용완료'});\n      if(this.list_product_my_review.length>0) {\n        if(type===10) this.reservation_order_id = this.list_product_my_review[0].id;\n        if(type===11) this.booking_order_id = this.list_product_my_review[0].id;\n      }\n      else {\n        this.toast('구매후 1회 후기 작성 가능합니다.')\n        this.$router.back();\n      }\n\n    },\n    save() {\n        let result = this.getParamData(this.formData);\n        \n        \n        // 주문상품의 후기일 경우\n        if (this.$route.query.order_product!==undefined) result.params.order_product_id = this.$route.query.order_product;\n        \n        if(result.enable) {\n\n          if(this.review_id===undefined) {\n            console.log('200')\n            this.$axios.post(`user/${this.user.user_id}/product/${this.product_id}/review`, result.params)\n              .then(res => {\n                \n                if(res.status===200) {\n                  \n                  this.toast('후기글이 작성되었습니다.');\n                  if (this.$route.query&&this.$route.query.partner_id!==undefined&&this.$route.query.partner_id!=='null') {\n                    this.$router.replace(`/product_detail?id=${this.$route.query.partner_id}&tab=1`);\n                  }\n                  else this.$router.replace(`/product_detail?id=${this.product_id}&tab=1`);\n                }\n              }).catch(err=> {\n              if(!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n          else {\n            this.$axios.patch(`user/${this.user.user_id}/product/${this.product_id}/review/${this.review_id}`, result.params)\n              .then(res => {\n                if(res.status===200) {\n                  this.toast('후기글이 수정되었습니다.');\n                  if (this.$route.query&&this.$route.query.partner_id!==undefined&&this.$route.query.partner_id!=='null') {\n                    this.$router.replace(`/product_detail?id=${this.$route.query.partner_id}&tab=1`);\n                  }\n                  // if (this.$route.query&&this.$route.query.product_id) {\n                  //   this.$router.replace(`/product_detail?id=${this.$route.query.product_id}`);\n                  // }\n                  else this.$router.replace(`/product_detail?id=${this.product_id}&tab=1`);\n                }\n              }).catch(err=> {\n              if(!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n        }\n      },\n    getReviewDetail() {\n        if(this.review_id!==undefined) {\n          this.$axios.get(`user/${this.user.user_id}/product/${this.product_id}/review/${this.review_id}`).then(res=>{\n            let data = res.data;\n            this.formData.forEach(item=>{\n              item.value = data[item.field];\n            })\n          })\n        }\n      }\n  },\n  computed: {\n    buttonCustomCancel() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea() {\n      let styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    }\n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BlockReviewReg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"BlockReviewReg.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div class=\"full-width flex-justify\" :style=\"[brandBgColor.main, pagePadding]\">\n  \n\n    <!-- 후기 작성 -->\n    <div class=\"full-width\">\n      <div style=\"margin-top:32px\">\n        <div class=\"size-20 margin-bottom-16 weight-500\">리뷰 작성</div>\n        <card-product-review\n            style=\"margin-bottom:36px\"\n            slot=\"card\"\n            v-for=\"item in list_product\"\n            :key=\"`card-${item.id}`\"\n            :card=\"item\"></card-product-review>\n            \n        <!--<card-product-review-->\n        <!--    style=\"margin-bottom:36px\"-->\n        <!--    slot=\"card\"-->\n        <!--    v-for=\"item in list_product\"-->\n        <!--    :key=\"`card-2-${item.id}`\"-->\n        <!--    :card=\"item\"></card-product-review>-->\n      </div>\n      <!-- 후기 폼 -->\n      <component :is=\"form.elType\" \n        v-for=\"(form,idx) in formData\"\n         :key=\"'review-form-'+idx\"\n         v-bind=\"form\"\n         :value.sync=\"form.value\"\n         :formType=\"formTypeCustomLabel\"\n         :containerCustomStyle=\"form.containerCustom\"\n         :labelCustomStyle=\"labelCustom\"\n         :inputCustomStyle=\"form.inputCustom\"\n         :buttonCustomStyle=\"buttonCustom\"></component>\n         \n\n    <div :style=\"buttonCustom\" style=\"margin: 48px 0 0;\" @click=\"save\">리뷰 작성</div>         \n    <div :style=\"buttonCustomCancel\" style=\"margin: 12px 0 20px;\" @click=\"clickBack\">취소</div>         \n\n      <!--<div class=\"flex-end\" style=\"margin:48px 0 12px\">-->\n      <!--  <btn :color=\"brandColor.white\"-->\n      <!--       :backgroundColor=\"brandBgColor.brand\"-->\n      <!--       @clicked=\"save\">리뷰 작성</btn>-->\n      <!--</div>-->\n      <!--<div>-->\n      <!--  <btn :backgroundColor=\"brandColor.sub\" :color=\"brandColor.white\"-->\n      <!--    @clicked=\"clickBack\">취소</btn>-->\n      <!--</div>-->\n    </div>\n  </div>\n</template>\n<script>\nimport CardProductReview from \"@/components/Components/Card/CardProductReview\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockReviewReg',\n  components: {\n    CardProductReview\n  },\n  mixins: [\n    BlockMixin,\n    FormMixin,\n    HeaderMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"평점\",\n          \"field\": \"rate\",\n          \"label\": \"평점\",\n          \"value\": 5,\n          \"format\": \"CRating\",\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          }\n        },\n        {\n          \"name\": \"제목\",\n          \"field\": \"title\",\n          \"label\": \"제목\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 30,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"제목을 입력하세요\"\n        },\n        {\n          \"name\": \"내용\",\n          \"field\": \"content\",\n          \"label\": \"내용\",\n          \"value\": \"\",\n          \"format\": \"CInput_textarea\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 500,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"내용을 입력하세요\"\n        },\n        {\n          \"name\": \"비밀글\",\n          \"field\": \"is_secret\",\n          \"label\": \"비밀글로 작성합니다.\",\n          \"value\": false,\n          \"format\": \"CInput_checkbox\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"\"\n        },\n        {\n          \"name\": \"첨부파일 추가\",\n          \"field\": \"imgs\",\n          \"label\": \"\",\n          \"format\": \"CImgUploaderArray\",\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"+첨부파일 추가\"\n        }\n      ],\n      \"list_product\": [],\n      \"booking_order_id\": undefined,\n      \"reservation_order_id\": undefined,\n      \"list_product_my_review\": []\n    }\n  },\n  created() {\n      this.review_id = this.$route.query.review_id;\n      this.product_id = this.$route.query.product_id;\n      this.getReviewDetail();\n      this.getProductDetail();\n      this.initForm();\n    },\n  \n  methods: {\n    initForm() {\n      this.formData = this.setForm(this.formData);\n      \n      let title = find(this.formData, 'field', 'title');\n      title.inputCustom = this.inputCustom;\n      \n      let content = find(this.formData, 'field', 'content');\n      content.inputCustom = this.inputCustomTextarea;\n    },\n    async getProductDetail() {\n      this.list_product =[];\n        let url = `user/${this.user.user_id}/mapping/product/${this.product_id}?fields=id,order_conversion_type,img,name,partner.name,price,like_count,shared_count,reviews_count,simple_desc,rate`;\n        await this.$axios.get(url).then(res => {\n          this.list_product.push(res.data);\n        })\n        if(!this.$route.query.author_id && this.user.user_id !== Number(this.$route.query.author_id)) this.getMyreview();\n      },\n    async getMyreview() {\n      this.list_product_my_review = [];\n      this.booking_order_id = undefined;\n\n      let id = this.list_product[0].id;\n      let type = this.list_product[0].order_conversion_type;\n      let type_str = type===10 ? 'reservation' : type===11 ? 'booking' : '';\n      let list = [];\n      await this.$axios.get(`user/${this.$store.getters.user.user_id}/${type_str}/order/review/${id}`)\n      .then(res => {\n        list = res.data.data;\n      })\n      this.list_product_my_review = list.filter(item => { return item.order_status_kor==='이용완료'});\n      if(this.list_product_my_review.length>0) {\n        if(type===10) this.reservation_order_id = this.list_product_my_review[0].id;\n        if(type===11) this.booking_order_id = this.list_product_my_review[0].id;\n      }\n      else {\n        this.toast('구매후 1회 후기 작성 가능합니다.')\n        this.$router.back();\n      }\n\n    },\n    save() {\n        let result = this.getParamData(this.formData);\n        \n        \n        // 주문상품의 후기일 경우\n        if (this.$route.query.order_product!==undefined) result.params.order_product_id = this.$route.query.order_product;\n        \n        if(result.enable) {\n\n          if(this.review_id===undefined) {\n            console.log('200')\n            this.$axios.post(`user/${this.user.user_id}/product/${this.product_id}/review`, result.params)\n              .then(res => {\n                \n                if(res.status===200) {\n                  \n                  this.toast('후기글이 작성되었습니다.');\n                  if (this.$route.query&&this.$route.query.partner_id!==undefined&&this.$route.query.partner_id!=='null') {\n                    this.$router.replace(`/product_detail?id=${this.$route.query.partner_id}&tab=1`);\n                  }\n                  else this.$router.replace(`/product_detail?id=${this.product_id}&tab=1`);\n                }\n              }).catch(err=> {\n              if(!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n          else {\n            this.$axios.patch(`user/${this.user.user_id}/product/${this.product_id}/review/${this.review_id}`, result.params)\n              .then(res => {\n                if(res.status===200) {\n                  this.toast('후기글이 수정되었습니다.');\n                  if (this.$route.query&&this.$route.query.partner_id!==undefined&&this.$route.query.partner_id!=='null') {\n                    this.$router.replace(`/product_detail?id=${this.$route.query.partner_id}&tab=1`);\n                  }\n                  // if (this.$route.query&&this.$route.query.product_id) {\n                  //   this.$router.replace(`/product_detail?id=${this.$route.query.product_id}`);\n                  // }\n                  else this.$router.replace(`/product_detail?id=${this.product_id}&tab=1`);\n                }\n              }).catch(err=> {\n              if(!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n        }\n      },\n    getReviewDetail() {\n        if(this.review_id!==undefined) {\n          this.$axios.get(`user/${this.user.user_id}/product/${this.product_id}/review/${this.review_id}`).then(res=>{\n            let data = res.data;\n            this.formData.forEach(item=>{\n              item.value = data[item.field];\n            })\n          })\n        }\n      }\n  },\n  computed: {\n    buttonCustomCancel() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea() {\n      let styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"]}]}