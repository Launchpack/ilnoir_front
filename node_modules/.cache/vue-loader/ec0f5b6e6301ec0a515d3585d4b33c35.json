{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputNumberRange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputNumberRange.vue","mtime":1605259987000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FormMixin from '@/components/Mixins/FormMixin';\r\n\r\nexport default {\r\n  name: 'c-input-numberRange',\r\n  props: {},\r\n  components: {},\r\n  mixins: [\r\n    FormMixin\r\n  ],\r\n  data() {\r\n    return {\r\n      temp: '',\r\n      temp1: '',\r\n      visible: true,\r\n      visible1: true,\r\n      inputLowPrice: '',\r\n      inputHighPrice: '',\r\n    }\r\n  },\r\n  mounted() {\r\n    this.inputLowPrice = this.value[0];\r\n    this.inputHighPrice = this.value[1];\r\n  },\r\n  methods: {\r\n    onBlurNumber(e) {\r\n      this.visible = false;\r\n      this.inputLowPrice = this.temp;\r\n      this.temp = this.thousandSeprator(this.temp);\r\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice])\r\n    },\r\n    onBlurNumber1(e) {\r\n      this.visible1 = false;\r\n      this.inputHighPrice = this.temp1;\r\n      this.temp1 = this.thousandSeprator(this.temp1);\r\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice])\r\n    },\r\n    onFocusText() {\r\n      this.visible = true;\r\n      this.temp = this.inputLowPrice;\r\n    },\r\n    onFocusText1() {\r\n      this.visible1 = true;\r\n      this.temp1 = this.inputHighPrice;\r\n    },\r\n    thousandSeprator(amount) {\r\n      if (amount !== '' && amount !== undefined && amount !== 0 && amount !== '0' && amount !== null) {\r\n        return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+'원';\r\n      } else {\r\n        return amount;\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["CInputNumberRange.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CInputNumberRange.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\" class=\"full-width\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <!-- input -->\r\n    <div class=\"flex-between\">\r\n      <input v-if=\"visible === true\" @blur=\"onBlurNumber\" type=\"number\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최저가\" v-model.number=\"temp\">\r\n      <input v-if=\"visible === false\" @focus=\"onFocusText\" type=\"text\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최저가\" v-model=\"temp\">\r\n      <div style=\"padding:8px; flex-shrink:0\">~</div>\r\n      <input v-if=\"visible1 === true\" @blur=\"onBlurNumber1\" type=\"number\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최고가\" v-model.number=\"temp1\">\r\n      <input v-if=\"visible1 === false\" @focus=\"onFocusText1\" type=\"text\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최고가\" v-model=\"temp1\">\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FormMixin from '@/components/Mixins/FormMixin';\r\n\r\nexport default {\r\n  name: 'c-input-numberRange',\r\n  props: {},\r\n  components: {},\r\n  mixins: [\r\n    FormMixin\r\n  ],\r\n  data() {\r\n    return {\r\n      temp: '',\r\n      temp1: '',\r\n      visible: true,\r\n      visible1: true,\r\n      inputLowPrice: '',\r\n      inputHighPrice: '',\r\n    }\r\n  },\r\n  mounted() {\r\n    this.inputLowPrice = this.value[0];\r\n    this.inputHighPrice = this.value[1];\r\n  },\r\n  methods: {\r\n    onBlurNumber(e) {\r\n      this.visible = false;\r\n      this.inputLowPrice = this.temp;\r\n      this.temp = this.thousandSeprator(this.temp);\r\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice])\r\n    },\r\n    onBlurNumber1(e) {\r\n      this.visible1 = false;\r\n      this.inputHighPrice = this.temp1;\r\n      this.temp1 = this.thousandSeprator(this.temp1);\r\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice])\r\n    },\r\n    onFocusText() {\r\n      this.visible = true;\r\n      this.temp = this.inputLowPrice;\r\n    },\r\n    onFocusText1() {\r\n      this.visible1 = true;\r\n      this.temp1 = this.inputHighPrice;\r\n    },\r\n    thousandSeprator(amount) {\r\n      if (amount !== '' && amount !== undefined && amount !== 0 && amount !== '0' && amount !== null) {\r\n        return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+'원';\r\n      } else {\r\n        return amount;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n</style>"]}]}