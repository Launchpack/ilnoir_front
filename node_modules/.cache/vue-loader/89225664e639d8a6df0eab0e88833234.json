{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputCheckboxArray.vue?vue&type=style&index=0&id=ecb1de06&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputCheckboxArray.vue","mtime":1605259986000},{"path":"/Users/mard/dev/ilnoir/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.check-box\n.check-box-text\n  cursor pointer\n\n.check-box-text\n  margin 0 4px !important\n\n.check-box\n  display flex\n  align-items center\n  justify-content center\n  background-color white\n",{"version":3,"sources":["CInputCheckboxArray.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CInputCheckboxArray.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\" class=\"position-relative\r\n              flex-align\r\n              wrap\r\n              full-width\">\r\n    <!-- 박스(좌측) -->\r\n    <div v-if=\"boxAlign==='left'\"\r\n         class=\"check-box unselect\"\r\n         :style=\"[boxStyle,lineStyle]\"\r\n         style=\"margin-right:4px\"\r\n         @click.stop.prevent=\"toggleCheck\">\r\n      <i v-if=\"checked\"\r\n         class=\"material-icons\"\r\n         :style=\"checkStyle\">check</i>\r\n    </div>\r\n\r\n    <!-- 레이블 -->\r\n    <div class=\"check-box-text\"\r\n         :style=\"labelStyle\">\r\n      <span v-for=\"(item, idx) in items\" :key=\"'item-'+idx\" :style=\"spanStyle(item)\">\r\n        <span v-if=\"item.link\" @click=\"toggleLink(item.linkType, item.link)\">{{ item.text }}</span>\r\n        <span v-else-if=\"item.rootemit\" @click=\"rootemit(item.rootemit)\">{{ item.text }}</span>\r\n        <span v-else>{{ item.text }}</span>\r\n      </span>\r\n    </div>\r\n\r\n    <!-- 박스(우측) -->\r\n    <div v-if=\"boxAlign==='right'\"\r\n         class=\"check-box unselect\"\r\n         :style=\"boxStyle\"\r\n         style=\"margin-left:4px\"\r\n         @click.stop.prevent=\"toggleCheck\">\r\n      <i v-if=\"checked\"\r\n         class=\"material-icons\"\r\n         :style=\"checkStyle\">check</i>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n\r\n  export default {\r\n    name: 'c-input-checkboxArray',\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    props: {\r\n      value: {\r\n        type: Boolean,\r\n        required: false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      boxAlign: {\r\n        type: String,\r\n        required: false,\r\n        default: 'left'\r\n      },\r\n      items: {\r\n        type: Array,\r\n        required: true\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        checked: false,\r\n      };\r\n    },\r\n\r\n\r\n    methods: {\r\n      toggleCheck() {\r\n        this.checked = !this.checked;\r\n        this.$emit('update:value', this.checked)\r\n      },\r\n      spanStyle(item) {\r\n        if(item.styles) return item.styles.container;\r\n      },\r\n      toggleLink(linkType, link) {\r\n        if(linkType === 'page' || linkType === undefined) {\r\n          this.routerPush(link);\r\n        } else {\r\n          this.$root.$emit('page_'+linkType, link);\r\n        }\r\n        \r\n      },\r\n      rootemit(val) {\r\n        this.$root.$emit(val);\r\n      }\r\n    },\r\n    computed: {\r\n      lineStyle() {\r\n        return {\r\n          border: '1px solid rgb(221, 221, 221)'\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .check-box\r\n  .check-box-text\r\n    cursor pointer\r\n\r\n  .check-box-text\r\n    margin 0 4px !important\r\n\r\n  .check-box\r\n    display flex\r\n    align-items center\r\n    justify-content center\r\n    background-color white\r\n</style>\r\n"]}]}