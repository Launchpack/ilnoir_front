{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockProductDetailTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockProductDetailTab.vue","mtime":1605260014000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CardReviewTotalReg from \"@/components/Components/Card/CardReviewTotalReg\"\nimport CardReview from \"@/components/Components/Card/CardReview\"\nimport CardInquiryTotalReg from \"@/components/Components/Card/CardInquiryTotalReg\"\nimport CardInquiry from \"@/components/Components/Card/CardInquiry\"\nimport UpdownScroll from \"@/components/Components/Button/UpdownScroll\"\n\nexport default {\n  name: 'BlockProductDetailTab',\n  components: {\n    CardReviewTotalReg,\n    CardReview,\n    CardInquiryTotalReg,\n    CardInquiry,\n    UpdownScroll\n  },\n  mixins: [\n\n  ],\n  props: {\n    fixedState: {\n      type: Boolean,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"menu\": [\n        {\n          \"id\": 0,\n          \"name\": \"소개\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"리뷰\",\n          \"count\": 0\n        },\n        {\n          \"id\": 2,\n          \"name\": \"문의\",\n          \"count\": 0\n        }\n      ],\n      \"detail\": undefined,\n      \"imgStyle\": {\n        \"width\": \"100%\",\n        \"height\": \"160px\",\n        \"objectFit\": \"cover\"\n      },\n      \"relatedList\": [],\n      \"review_list_self\": [],\n      \"inquiry_list_self\": [],\n      \"review_list_other\": [],\n      \"inquiry_list_other\": []\n    }\n  },\n  created() {\n    this.getData();\n    this.getProductReview();\n    this.getProductInquiry();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    clickUp() {\n      window.scrollTo({\n        left: 0,\n        top: 0,\n        behavior: 'smooth'\n      })\n    },\n    clickDown() {\n      document.documentElement.scrollTop = document.body.scrollHeight;\n    },\n    getData() {\n      this.$axios.get(`/user/${this.user.user_id}/mapping/product/${this.$route.query.id}?fields=id,img,name,simple_desc,tags,form,order_conversion_type,category1,category2,category3,rate,stock,input,like_count,reviews_count,visit,price,partner,address,dong,distance,params,imgs,info,operating_time,phone,params,location,related_products`)\n      .then(res => {\n          res.data.info = res.data.info.replace(/<img /gi, '<img style=\"margin:0 -16px;max-width:100vw\" ');\n          this.detail = res.data;\n          this.getRelate();\n        });\n      },\n    getRelate() {\n        if(this.detail.related_products&&this.detail.related_products.length>0) {\n          let list = this.detail.related_products.slice(0,2);\n          list.forEach(item => {\n            this.$axios.get(`/user/${this.user.user_id}/mapping/product/${item}?fields=id,img,name,price`)\n            .then(res => {\n              this.relatedList.push(res.data);\n            })\n          })\n        }\n      },\n    clickCard(item) {\n        this.$emit('changeToggle', this.toggle);\n        let query = cloneItem(this.$route.query);\n        query.id = item.id;\n        this.$router.replace({\n          path: this.$route.path,\n          query: query\n        });\n      },\n    getProductReview() {\n      this.review_list_self = [];\n      this.review_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true\n            this.review_list_self.push(item);\n          }\n          else {\n            this.review_list_other.push(item)\n          }\n        })\n        this.menu[1].count = res.data.count;\n      })\n    },\n    getProductInquiry() {\n      this.inquiry_list_self = [];\n      this.inquiry_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true;\n            this.inquiry_list_self.push(item);\n          }\n          else {\n            this.inquiry_list_other.push(item);\n          }\n        })\n        this.menu[2].count = res.data.count;\n      })\n    },\n    delReview() {\n      this.getProductReview();\n    },\n    delInquiry() {\n      this.getProductInquiry();\n    }\n  },\n  computed: {\n    scrollStyle() {\n      return {\n        bottom: '148px',\n        right: '24px'\n      }\n    },\n    marginStyle() {\n      return {\n        padding: '16px 0 100px',\n      }\n    },\n    normalStyle() {\n      return {\n        padding: '16px 0 100px'\n      }\n    },\n    selectedTabStyle() {\n      return {\n        color: `${this.getColor('Primary Color')}`,\n        width: '114px',\n        height: '40px',\n        lineHeight: '40px',\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: 'white',\n      }\n    },\n    unselectedTabStyle() {\n      return {\n        color: `${this.getColor('기본 내용 색상')}`,\n        width: '114px',\n        height: '40px',\n        lineHeight: '40px',\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: `rgba(0, 0, 0, 0.05)`,\n      }\n    },\n    iconWrapStyle() {\n      return {\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'white',\n        borderRadius: '4px',\n        boxShadow: '0 4px 24px 0 rgba(0, 0, 0, 0.24)'\n      }\n    }\n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BlockProductDetailTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"BlockProductDetailTab.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div v-if=\"detail\">\n  \n    <div class=\"size-12 bold text-center\"\n      :style=\"brandColor.white\"\n      style=\"padding: 16px 0\">상세 설명</div>\n    \n    <!--정보-->\n    <div class=\"margin-bottom-30\">\n      <e-editor :html=\"detail.info\" v-if=\"detail\" style=\"margin:0 16px;\"\n        :style=\"brandBgColor.white\"></e-editor>\n    </div>\n    \n    <div :style=\"brandColor.white\" v-if=\"relatedList.length>0\"\n        class=\"text-center\" style=\"padding:12px\">\n        <div class=\"size-12 bold\">함께 보면 좋은 상품</div>\n        <div class=\"flex\">\n          <div v-for=\"item in relatedList\" :key=\"'key-'+item.id\"\n            class=\"col-6 unselect\" style=\"padding:0 4px;margin-top:12px\"\n            @click=\"clickCard(item)\">\n            <img :src=\"item.img\" :style=\"imgStyle\">\n            <div class=\"full-width\" style=\"padding:4px 0\">\n              <div class=\"bold size-12 margin-bottom-2\">{{ item.name }}</div>\n              <div class=\"size-10 bold\">{{ item.price.sale_price | currency }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n</div>\n</template>\n<script>\nimport CardReviewTotalReg from \"@/components/Components/Card/CardReviewTotalReg\"\nimport CardReview from \"@/components/Components/Card/CardReview\"\nimport CardInquiryTotalReg from \"@/components/Components/Card/CardInquiryTotalReg\"\nimport CardInquiry from \"@/components/Components/Card/CardInquiry\"\nimport UpdownScroll from \"@/components/Components/Button/UpdownScroll\"\n\nexport default {\n  name: 'BlockProductDetailTab',\n  components: {\n    CardReviewTotalReg,\n    CardReview,\n    CardInquiryTotalReg,\n    CardInquiry,\n    UpdownScroll\n  },\n  mixins: [\n\n  ],\n  props: {\n    fixedState: {\n      type: Boolean,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"menu\": [\n        {\n          \"id\": 0,\n          \"name\": \"소개\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"리뷰\",\n          \"count\": 0\n        },\n        {\n          \"id\": 2,\n          \"name\": \"문의\",\n          \"count\": 0\n        }\n      ],\n      \"detail\": undefined,\n      \"imgStyle\": {\n        \"width\": \"100%\",\n        \"height\": \"160px\",\n        \"objectFit\": \"cover\"\n      },\n      \"relatedList\": [],\n      \"review_list_self\": [],\n      \"inquiry_list_self\": [],\n      \"review_list_other\": [],\n      \"inquiry_list_other\": []\n    }\n  },\n  created() {\n    this.getData();\n    this.getProductReview();\n    this.getProductInquiry();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    clickUp() {\n      window.scrollTo({\n        left: 0,\n        top: 0,\n        behavior: 'smooth'\n      })\n    },\n    clickDown() {\n      document.documentElement.scrollTop = document.body.scrollHeight;\n    },\n    getData() {\n      this.$axios.get(`/user/${this.user.user_id}/mapping/product/${this.$route.query.id}?fields=id,img,name,simple_desc,tags,form,order_conversion_type,category1,category2,category3,rate,stock,input,like_count,reviews_count,visit,price,partner,address,dong,distance,params,imgs,info,operating_time,phone,params,location,related_products`)\n      .then(res => {\n          res.data.info = res.data.info.replace(/<img /gi, '<img style=\"margin:0 -16px;max-width:100vw\" ');\n          this.detail = res.data;\n          this.getRelate();\n        });\n      },\n    getRelate() {\n        if(this.detail.related_products&&this.detail.related_products.length>0) {\n          let list = this.detail.related_products.slice(0,2);\n          list.forEach(item => {\n            this.$axios.get(`/user/${this.user.user_id}/mapping/product/${item}?fields=id,img,name,price`)\n            .then(res => {\n              this.relatedList.push(res.data);\n            })\n          })\n        }\n      },\n    clickCard(item) {\n        this.$emit('changeToggle', this.toggle);\n        let query = cloneItem(this.$route.query);\n        query.id = item.id;\n        this.$router.replace({\n          path: this.$route.path,\n          query: query\n        });\n      },\n    getProductReview() {\n      this.review_list_self = [];\n      this.review_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true\n            this.review_list_self.push(item);\n          }\n          else {\n            this.review_list_other.push(item)\n          }\n        })\n        this.menu[1].count = res.data.count;\n      })\n    },\n    getProductInquiry() {\n      this.inquiry_list_self = [];\n      this.inquiry_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true;\n            this.inquiry_list_self.push(item);\n          }\n          else {\n            this.inquiry_list_other.push(item);\n          }\n        })\n        this.menu[2].count = res.data.count;\n      })\n    },\n    delReview() {\n      this.getProductReview();\n    },\n    delInquiry() {\n      this.getProductInquiry();\n    }\n  },\n  computed: {\n    scrollStyle() {\n      return {\n        bottom: '148px',\n        right: '24px'\n      }\n    },\n    marginStyle() {\n      return {\n        padding: '16px 0 100px',\n      }\n    },\n    normalStyle() {\n      return {\n        padding: '16px 0 100px'\n      }\n    },\n    selectedTabStyle() {\n      return {\n        color: `${this.getColor('Primary Color')}`,\n        width: '114px',\n        height: '40px',\n        lineHeight: '40px',\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: 'white',\n      }\n    },\n    unselectedTabStyle() {\n      return {\n        color: `${this.getColor('기본 내용 색상')}`,\n        width: '114px',\n        height: '40px',\n        lineHeight: '40px',\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: `rgba(0, 0, 0, 0.05)`,\n      }\n    },\n    iconWrapStyle() {\n      return {\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'white',\n        borderRadius: '4px',\n        boxShadow: '0 4px 24px 0 rgba(0, 0, 0, 0.24)'\n      }\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n<style scoped>\nhtml {\n  scroll-behavior: smooth;\n}\n</style>\n\n"]}]}