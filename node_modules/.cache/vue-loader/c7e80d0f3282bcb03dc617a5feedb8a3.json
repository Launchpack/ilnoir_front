{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Button/BtnFindlocation.vue?vue&type=style&index=0&id=74025c26&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Button/BtnFindlocation.vue","mtime":1605259981000},{"path":"/Users/mard/dev/ilnoir/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box\n  border 1px solid #ddd\n  border-radius 4px\n  padding 16px 0\n.box i\n  margin-bottom 6px\n",{"version":3,"sources":["BtnFindlocation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;AACA;AACA;AACA","file":"BtnFindlocation.vue","sourceRoot":"src/components/Components/Button","sourcesContent":["<template>\r\n  <div v-if=\"title && title !== ''\">\r\n    <div @click=\"clickTitle\" class=\"flex-center unselect\" :style=\"buttonStyle\">\r\n      <div>{{ title }}</div>\r\n      <i class=\"material-icons\" style=\"margin-left:4px\">{{ $refs.locModal && $refs.locModal.is_open ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\r\n    </div>\r\n    <sweet-modal ref=\"locModal\" overlay-theme=\"dark\">\r\n      <div style=\"padding:20px\">\r\n        <div class=\"p-card-title text-center\" style=\"margin-bottom:20px\">위치 지정</div>\r\n        <div class=\"grid-box\" >\r\n          <div class=\"col-6\" style=\"padding-right:6px\" @click=\"searchByLocation\">\r\n            <div class=\"box text-center\">\r\n              <i class=\"material-icons\" :style=\"brandColor.brand\">my_location</i>\r\n              <div class=\"p-card-subtitleSmall\" :style=\"brandColor.main\">내 위치 지정</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\" style=\"padding-left:6px\" @click=\"clickMap\">\r\n            <div class=\"box text-center\">\r\n              <i class=\"material-icons\" :style=\"brandColor.brand\">pin_drop</i>\r\n              <div class=\"p-card-subtitleSmall\" :style=\"brandColor.main\">지도로 위치지정</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </sweet-modal>\r\n\r\n    <!-- 지도에서 위치 찾기 -->\r\n    <div :style=\"fullStyle\" v-if=\"vMap\">\r\n      <search-map @close=\"vMap=false\" @clickBtnCurrent=\"clickBtnCurrent\"></search-map>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { SweetModal } from 'sweet-modal-vue';\r\n  import SearchMap from \"../Common/SearchMap\";\r\n  export default {\r\n    name: \"BtnFindlocation\",\r\n\r\n    props: {\r\n      styles: {\r\n        type: Object,\r\n        required: false,\r\n        default: function() {\r\n          return {\r\n            container: {\r\n              backgroundColor: '',\r\n              color: '',\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    components: {\r\n      SearchMap,\r\n      SweetModal\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        title: '',\r\n        address: {\r\n          latitude: 35.0,\r\n          longitude: 128.0\r\n        },\r\n        vMap: false\r\n      }\r\n    },\r\n\r\n    created() {\r\n      this.updateAddress(this.$store.getters.currentPosition);\r\n    },\r\n\r\n    watch: {\r\n      vMap(n) {\r\n        this.$emit('vMap', n);\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      fullStyle() {\r\n        let deco = {\r\n          position: 'fixed',\r\n          width: '100%',\r\n          height: '100vh',\r\n          maxWidth: this.$store.getters.deviceWidth+'px',\r\n          zIndex: '10',\r\n          backgroundColor: '#ffffff',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0\r\n        }\r\n        return deco;\r\n      },\r\n      buttonStyle() {\r\n        let color = 'white';\r\n        if(this.styles.container.color) color = this.styles.container.color;\r\n        let deco = {\r\n          color: color,\r\n          padding: '4px 0'\r\n        }\r\n\r\n        if(this.styles.container.backgroundColor) {\r\n          deco.backgroundColor = this.styles.container.backgroundColor;\r\n        }\r\n\r\n        return deco;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      clickTitle() {\r\n        this.$refs.locModal.open();\r\n      },\r\n      searchByLocation() {\r\n        this.$refs.locModal.close();\r\n        this.updateAddress();\r\n      },\r\n      clickMap() {\r\n        this.$refs.locModal.close();\r\n        this.vMap = true;\r\n      },\r\n      clickBtnCurrent(center) {\r\n        this.updateAddress({lat: center._lat, lng: center._lng});\r\n        setTimeout(()=>{\r\n          this.vMap = false;\r\n        },500);\r\n      },\r\n      updateAddress(params) {\r\n        /* 좌표 세팅 로직 시작 */\r\n        if (params === undefined) {\r\n          // navigator 로 현재 좌표 가져오기\r\n          if (navigator.geolocation) { // GPS를 지원하면 navigator.geolocation 으로 현재 좌표 얻어오기\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n              this.address.latitude = position.coords.latitude;\r\n              this.address.longitude = position.coords.longitude;\r\n              let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n              this.$store.commit('setCurrentPosition', location);\r\n              // 다시 호출해서 좌표 업데이트하는 방식 - recursive\r\n              this.updateAddress(location);\r\n            }, error => {\r\n              //let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n              //this.updateProductList();\r\n              // 다시 호출해서 좌표 업데이트하는 방식 - recursive\r\n              //this.updateAddress(location);\r\n            }, {\r\n              enableHighAccuracy: false,\r\n              maximumAge:Infinity,\r\n              timeout: 10000\r\n            });\r\n\r\n          }\r\n          else {\r\n            console.log('GPS를 지원하지 않습니다');\r\n          }\r\n        }\r\n        else {\r\n          this.address.latitude = params.lat;\r\n          this.address.longitude = params.lng;\r\n          let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n          this.$store.commit('setCurrentPosition', location);\r\n        }\r\n        /* 좌표 세팅 로직 끝 */\r\n\r\n        // 가져온 좌표로 주소 받아오기\r\n        setTimeout(() => {\r\n          this.$axios.get(`public/service/geocode?latitude=${this.address.latitude}&longitude=${this.address.longitude}`)\r\n            .then(res => {\r\n              if (res.status === 200) {\r\n                if (res.data.address) {\r\n                  this.address = res.data.address;\r\n                }\r\n\r\n                // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\r\n                // console.log(res.data.address);\r\n                // if (res.data.address === false) this.setFullAddress(false);\r\n                // else this.setFullAddress(true);\r\n\r\n                // 위치 업데이트 emit\r\n                this.$emit('updatePosition');\r\n\r\n                this.setFullAddress();\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n        }, 200)\r\n      },\r\n\r\n      setFullAddress() {\r\n        if(this.address.sido) {\r\n          this.title = '%s %s %s'.format(\r\n            this.address.sido.replace('특별시', '').replace('광역시', '').replace('특별자치도', '').replace('특별자치시', ''),\r\n            this.address.sigungu, this.address.dong);\r\n        }\r\n\r\n        // 주소를 얻어오는 동안 서비스명으로 처리. 받아오는 sido, sigungu, dong 이 없을 경우 '  '(공백두칸) 상태\r\n        if (this.title.trim() === '')\r\n          this.title = this.$store.getters.service.title;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n  .box\r\n    border 1px solid #ddd\r\n    border-radius 4px\r\n    padding 16px 0\r\n  .box i\r\n    margin-bottom 6px\r\n</style>"]}]}