{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockInquiryReg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockInquiryReg.vue","mtime":1605260029000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CardProductReview from \"@/components/Components/Card/CardProductReview\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockInquiryReg',\n  components: {\n    CardProductReview\n  },\n  mixins: [\n    BlockMixin,\n    FormMixin,\n    HeaderMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"제목\",\n          \"field\": \"title\",\n          \"label\": \"제목\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 30,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"제목을 입력하세요\"\n        },\n        {\n          \"name\": \"내용\",\n          \"field\": \"question_content\",\n          \"label\": \"내용\",\n          \"value\": \"\",\n          \"format\": \"CInput_textarea\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 500,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"내용을 입력하세요\"\n        },\n        {\n          \"name\": \"비밀글 \",\n          \"field\": \"is_secret\",\n          \"label\": \"비밀글로 작성하기\",\n          \"value\": false,\n          \"format\": \"CInput_checkbox\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"\"\n        }\n      ],\n      \"inquiry_id\": undefined,\n      \"product_id\": undefined\n    }\n  },\n  created() {\n      this.inquiry_id = this.$route.query.inquiry_id;\n      this.product_id = this.$route.query.product_id;\n      this.getInquiryDetail();\n      this.initForm();\n    },\n  \n  methods: {\n    initForm() {\n      this.formData = this.setForm(this.formData);\n      \n      let title = find(this.formData, 'field', 'title');\n      title.inputCustom = this.inputCustom;\n      \n      let content = find(this.formData, 'field', 'question_content');\n      content.inputCustom = this.inputCustomTextarea;\n    },\n    save() {\n        let result = this.getParamData(this.formData);\n        if(result.enable) {\n          if(this.inquiry_id===undefined) {\n            this.$axios.post(`user/${this.user.user_id}/product/${this.product_id}/inquiry`, result.params)\n              .then(res => {\n                if (res.status === 200) {\n                  this.toast('문의글이 작성되었습니다.');\n                  this.$router.replace(`/product_detail?id=${this.product_id}&tab=2`);\n                }\n              }).catch(err => {\n              if (!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n          else {\n            this.$axios.patch(`user/${this.user.user_id}/product/${this.product_id}/inquiry/${this.inquiry_id}`, result.params)\n              .then(res => {\n                if (res.status === 200) {\n                  this.toast('문의글이 수정되었습니다.');\n                  this.$router.replace(`/product_detail?id=${this.product_id}&tab=2`);\n                }\n              }).catch(err => {\n              if (!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n        }\n      },\n    getInquiryDetail() {\n        if(this.inquiry_id!==undefined) {\n          let url = `user/${this.user.user_id}/product/${this.product_id}/inquiry/${this.inquiry_id}?secret=true`;\n          this.$axios.get(url).then(res=>{\n            let data = res.data;\n            this.formData.forEach(item=>{\n              item.value = data[item.field];\n            })\n          })\n        }\n      }\n  },\n  computed: {\n    containerStyle() {\n        let deco = this.brandBgColor.white;\n        return deco;\n      },\n    buttonCustomCancel() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea() {\n      let styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    }\n  },\n  watch: {\n    \n  }\n}\n",{"version":3,"sources":["BlockInquiryReg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"BlockInquiryReg.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div class=\"full-width flex-justify\" :style=\"[brandBgColor.main, pagePadding]\" \n  style=\"padding:32px 0 100px\">\n    <!-- 후기 작성 -->\n    <div class=\"full-width\">\n      <div>\n        <div class=\"size-20 margin-bottom-16 weight-500\">문의 작성</div>\n      </div>\n      <!-- 후기 폼 -->\n      <component :is=\"form.elType\" v-for=\"(form,idx) in formData\"\n                 :key=\"'review-form-'+idx\"\n                 v-bind=\"form\"\n                 :value.sync=\"form.value\"\n         :formType=\"formTypeCustomLabel\"\n         :containerCustomStyle=\"form.containerCustom\"\n         :labelCustomStyle=\"labelCustom\"\n         :inputCustomStyle=\"form.inputCustom\"\n         :buttonCustomStyle=\"buttonCustom\"></component>\n         \n\n    <div :style=\"buttonCustom\" style=\"margin: 48px 0 0;\" @click=\"save\">문의 작성</div>         \n    <div :style=\"buttonCustomCancel\" style=\"margin: 12px 0 20px;\" @click=\"clickBack\">취소</div>         \n         \n\n      <!--<div class=\"flex-end\" style=\"margin:80px 0 12px\">-->\n      <!--  <btn :color=\"brandColor.white\"-->\n      <!--       :backgroundColor=\"brandBgColor.brand\"-->\n      <!--       @clicked=\"save\">문의 작성</btn>-->\n      <!--</div>-->\n      <!--<div>-->\n      <!--  <btn :backgroundColor=\"btnColor\" :color=\"brandColor.white\"-->\n      <!--    @clicked=\"clickBack\">취소</btn>-->\n      <!--</div>-->\n    </div>\n  </div>\n</template>\n<script>\nimport CardProductReview from \"@/components/Components/Card/CardProductReview\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockInquiryReg',\n  components: {\n    CardProductReview\n  },\n  mixins: [\n    BlockMixin,\n    FormMixin,\n    HeaderMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"제목\",\n          \"field\": \"title\",\n          \"label\": \"제목\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 30,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"제목을 입력하세요\"\n        },\n        {\n          \"name\": \"내용\",\n          \"field\": \"question_content\",\n          \"label\": \"내용\",\n          \"value\": \"\",\n          \"format\": \"CInput_textarea\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 500,\n            \"min_length\": 1,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"내용을 입력하세요\"\n        },\n        {\n          \"name\": \"비밀글 \",\n          \"field\": \"is_secret\",\n          \"label\": \"비밀글로 작성하기\",\n          \"value\": false,\n          \"format\": \"CInput_checkbox\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"\"\n        }\n      ],\n      \"inquiry_id\": undefined,\n      \"product_id\": undefined\n    }\n  },\n  created() {\n      this.inquiry_id = this.$route.query.inquiry_id;\n      this.product_id = this.$route.query.product_id;\n      this.getInquiryDetail();\n      this.initForm();\n    },\n  \n  methods: {\n    initForm() {\n      this.formData = this.setForm(this.formData);\n      \n      let title = find(this.formData, 'field', 'title');\n      title.inputCustom = this.inputCustom;\n      \n      let content = find(this.formData, 'field', 'question_content');\n      content.inputCustom = this.inputCustomTextarea;\n    },\n    save() {\n        let result = this.getParamData(this.formData);\n        if(result.enable) {\n          if(this.inquiry_id===undefined) {\n            this.$axios.post(`user/${this.user.user_id}/product/${this.product_id}/inquiry`, result.params)\n              .then(res => {\n                if (res.status === 200) {\n                  this.toast('문의글이 작성되었습니다.');\n                  this.$router.replace(`/product_detail?id=${this.product_id}&tab=2`);\n                }\n              }).catch(err => {\n              if (!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n          else {\n            this.$axios.patch(`user/${this.user.user_id}/product/${this.product_id}/inquiry/${this.inquiry_id}`, result.params)\n              .then(res => {\n                if (res.status === 200) {\n                  this.toast('문의글이 수정되었습니다.');\n                  this.$router.replace(`/product_detail?id=${this.product_id}&tab=2`);\n                }\n              }).catch(err => {\n              if (!err.response.data.message)\n                this.toast(err.response.data.detail);\n              else\n                this.toast(err.response.data.message);\n            })\n          }\n        }\n      },\n    getInquiryDetail() {\n        if(this.inquiry_id!==undefined) {\n          let url = `user/${this.user.user_id}/product/${this.product_id}/inquiry/${this.inquiry_id}?secret=true`;\n          this.$axios.get(url).then(res=>{\n            let data = res.data;\n            this.formData.forEach(item=>{\n              item.value = data[item.field];\n            })\n          })\n        }\n      }\n  },\n  computed: {\n    containerStyle() {\n        let deco = this.brandBgColor.white;\n        return deco;\n      },\n    buttonCustomCancel() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea() {\n      let styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"]}]}