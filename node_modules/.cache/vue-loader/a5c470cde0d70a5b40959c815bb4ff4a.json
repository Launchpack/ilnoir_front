{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Button/BtnOrdering.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Button/BtnOrdering.vue","mtime":1605259981000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"BtnOrdering\",\n  props: {\n    product: {\n      type: Object,\n      required: true\n    },\n    width: {\n      type: String,\n      default: \"100%\",\n      required: false,\n    },\n    height: {\n      type: String,\n      default: \"48px\",\n      required: false,\n    },\n    styles: {\n      type: String,\n      default: \"more\",\n      required: false,\n    },\n    name: {\n      type: String\n    }\n  },\n  computed: {\n    componentName() {\n      let name = 'btn-';\n      switch(this.product.order_conversion_type) {\n        case 1: name += 'call'; break;\n        case 2: name += 'outlink'; break;\n        case 3: name += 'delivery'; break;\n        case 4: name += 'meet'; break;\n        case 5: name += 'counsel'; break;\n        case 8: name += 'commerce'; break;\n        case 10: name += 'reservation'; break;\n        case 11: name += 'booking'; break;\n        case 12: name += 'delivery'; break;\n      }\n\n      return name;\n    },\n    btnStyle() {\n      let deco = {\n        width: `${this.width}`,\n        height: `${this.height}`,\n        textAlign: 'center',\n        lineHeight: `${this.height}`,\n        borderRadius: '8px',\n        fontSize: '14px',\n      };\n      deco.backgroundColor = `${this.getColor('Primary Color')}`\n      deco.color = 'white'\n      return deco;\n    },\n  }\n}\n",{"version":3,"sources":["BtnOrdering.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BtnOrdering.vue","sourceRoot":"src/components/Components/Button","sourcesContent":["<template>\r\n  <component :is=\"componentName\"\r\n             :product=\"product\"\r\n             :customStyle=\"btnStyle\"\r\n             :width=\"width\"></component>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"BtnOrdering\",\r\n    props: {\r\n      product: {\r\n        type: Object,\r\n        required: true\r\n      },\r\n      width: {\r\n        type: String,\r\n        default: \"100%\",\r\n        required: false,\r\n      },\r\n      height: {\r\n        type: String,\r\n        default: \"48px\",\r\n        required: false,\r\n      },\r\n      styles: {\r\n        type: String,\r\n        default: \"more\",\r\n        required: false,\r\n      },\r\n      name: {\r\n        type: String\r\n      }\r\n    },\r\n    computed: {\r\n      componentName() {\r\n        let name = 'btn-';\r\n        switch(this.product.order_conversion_type) {\r\n          case 1: name += 'call'; break;\r\n          case 2: name += 'outlink'; break;\r\n          case 3: name += 'delivery'; break;\r\n          case 4: name += 'meet'; break;\r\n          case 5: name += 'counsel'; break;\r\n          case 8: name += 'commerce'; break;\r\n          case 10: name += 'reservation'; break;\r\n          case 11: name += 'booking'; break;\r\n          case 12: name += 'delivery'; break;\r\n        }\r\n\r\n        return name;\r\n      },\r\n      btnStyle() {\r\n        let deco = {\r\n          width: `${this.width}`,\r\n          height: `${this.height}`,\r\n          textAlign: 'center',\r\n          lineHeight: `${this.height}`,\r\n          borderRadius: '8px',\r\n          fontSize: '14px',\r\n        };\r\n        deco.backgroundColor = `${this.getColor('Primary Color')}`\r\n        deco.color = 'white'\r\n        return deco;\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n\r\n</style>"]}]}