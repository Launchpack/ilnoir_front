{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputRegionForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputRegionForm.vue","mtime":1605259988000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FormMixin from \"@/components/Mixins/FormMixin\";\n\nexport default {\n  name: \"c-input-regionForm\",\n\n  mixins: [\n    FormMixin\n  ],\n\n  created() {\n    // 시/도 데이터 가져오기\n    this.$axios.get(`public/address/basic/sido`)\n      .then(res => {\n        if ( res.status === 200 ) {\n          res.data.splice(0,0, {\n            id: '',\n            label: '전체',\n            name: '전체',\n            value: ''\n          });\n          this.sido.options = res.data;\n\n          if(this.value && this.value.sido.id !== '') {\n            this.inputValue = this.value;\n            this.onSido(this.inputValue.sido.id, false);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  },\n\n  props: {\n    type: {\n      type: String,\n      default: 'service'  // 'basic'\n    }\n  },\n\n  data() {\n    return {\n      inputValue:{\n        sido: undefined,\n        sigungu: undefined\n      },\n      sido: {\n        formType: this.formType,\n        // label: '시/도',\n        options: [],\n        value: ''\n      },\n      sigungu: {\n        formType: this.formType,\n        // label: '시/군/구',\n        options: [],\n        value: ''\n      }\n    }\n  },\n\n  computed: {\n    sidoValue() {\n      return this.inputValue.sido ? this.inputValue.sido.value : '';\n    },\n    sigunguValue() {\n      return this.inputValue.sigungu ? this.inputValue.sigungu.value : '';\n    },\n    computedLabelStyle() {\n      let deco = {};\n      if (this.labelStyle!==undefined) {\n        deco = this.labelStyle\n      }\n      deco.margin = '4px 0 8px 4px';\n      return deco;\n    }\n  },\n\n  watch: {\n    value(n) {\n      this.inputValue = n;\n    }\n  },\n\n  methods: {\n    onSido(id, initSigungu) {\n      this.inputValue.sido = find(this.sido.options, 'id', id);\n      if(initSigungu) {\n        if(this.sigungu.options.length>0)\n          this.inputValue.sigungu = undefined;\n        this.$emit('update:value', this.inputValue);\n        this.$emit('update:selectedValue', `${this.inputValue.sido.name}`);\n      }\n\n      this.$axios.get(`public/address/basic/sido/${id}/sigungu`)\n        .then(res => {\n          if ( res.status === 200 ) {\n            res.data.splice(0,0, {\n              id: '',\n              label: '전체',\n              name: '전체',\n              value: ''\n            });\n            this.sigungu.options = res.data;\n            if(!initSigungu) {\n              this.onSigungu(this.inputValue.sigungu.id);\n            }\n          }\n        })\n        .catch(() => {\n          this.sigungu.options = [{\n            id: '',\n            label: '전체',\n            name: '전체',\n            value: ''\n          }];\n        })\n    },\n    onSigungu(id) {\n      this.inputValue.sigungu = find(this.sigungu.options, 'id', id);\n      this.$emit('update:value', this.inputValue);\n      this.$emit('update:selectedValue', `${this.inputValue.sido.name} ${this.inputValue.sigungu.name}`);\n    }\n  }\n}\n",{"version":3,"sources":["CInputRegionForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"CInputRegionForm.vue","sourceRoot":"src/components/Components/Form","sourcesContent":["<template>\r\n  <div>\r\n    <div :style=\"containerStyle\">\r\n\r\n      <!-- 레이블 -->\r\n      <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n      <div class=\"grid-box\">\r\n        <!-- 시/도 -->\r\n        <div class=\"col-6\" style=\"padding-right:4px\">\r\n          <div :style=\"computedLabelStyle\">시/도</div>\r\n          <c-input-dropdown\r\n              v-if=\"sido.options.length>0\"\r\n              v-bind=\"sido\" :gutter=\"0\"\r\n              :value=\"sidoValue\"\r\n              @update:value=\"res => onSido(res, true)\"\r\n              style=\"margin:0\"></c-input-dropdown>\r\n        </div>\r\n        <!-- 시/군/구 -->\r\n        <div class=\"col-6\" style=\"padding-left:4px\">\r\n          <div :style=\"computedLabelStyle\">시/군/구</div>\r\n          <c-input-dropdown\r\n              v-if=\"sigungu.options.length>0\"\r\n              v-bind=\"sigungu\" :gutter=\"0\"\r\n              :value=\"sigunguValue\"\r\n              @update:value=\"res => onSigungu(res)\"\r\n              style=\"margin:0\"></c-input-dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from \"@/components/Mixins/FormMixin\";\r\n\r\n  export default {\r\n    name: \"c-input-regionForm\",\r\n\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    created() {\r\n      // 시/도 데이터 가져오기\r\n      this.$axios.get(`public/address/basic/sido`)\r\n        .then(res => {\r\n          if ( res.status === 200 ) {\r\n            res.data.splice(0,0, {\r\n              id: '',\r\n              label: '전체',\r\n              name: '전체',\r\n              value: ''\r\n            });\r\n            this.sido.options = res.data;\r\n\r\n            if(this.value && this.value.sido.id !== '') {\r\n              this.inputValue = this.value;\r\n              this.onSido(this.inputValue.sido.id, false);\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    },\r\n\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        default: 'service'  // 'basic'\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        inputValue:{\r\n          sido: undefined,\r\n          sigungu: undefined\r\n        },\r\n        sido: {\r\n          formType: this.formType,\r\n          // label: '시/도',\r\n          options: [],\r\n          value: ''\r\n        },\r\n        sigungu: {\r\n          formType: this.formType,\r\n          // label: '시/군/구',\r\n          options: [],\r\n          value: ''\r\n        }\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      sidoValue() {\r\n        return this.inputValue.sido ? this.inputValue.sido.value : '';\r\n      },\r\n      sigunguValue() {\r\n        return this.inputValue.sigungu ? this.inputValue.sigungu.value : '';\r\n      },\r\n      computedLabelStyle() {\r\n        let deco = {};\r\n        if (this.labelStyle!==undefined) {\r\n          deco = this.labelStyle\r\n        }\r\n        deco.margin = '4px 0 8px 4px';\r\n        return deco;\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      value(n) {\r\n        this.inputValue = n;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      onSido(id, initSigungu) {\r\n        this.inputValue.sido = find(this.sido.options, 'id', id);\r\n        if(initSigungu) {\r\n          if(this.sigungu.options.length>0)\r\n            this.inputValue.sigungu = undefined;\r\n          this.$emit('update:value', this.inputValue);\r\n          this.$emit('update:selectedValue', `${this.inputValue.sido.name}`);\r\n        }\r\n\r\n        this.$axios.get(`public/address/basic/sido/${id}/sigungu`)\r\n          .then(res => {\r\n            if ( res.status === 200 ) {\r\n              res.data.splice(0,0, {\r\n                id: '',\r\n                label: '전체',\r\n                name: '전체',\r\n                value: ''\r\n              });\r\n              this.sigungu.options = res.data;\r\n              if(!initSigungu) {\r\n                this.onSigungu(this.inputValue.sigungu.id);\r\n              }\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.sigungu.options = [{\r\n              id: '',\r\n              label: '전체',\r\n              name: '전체',\r\n              value: ''\r\n            }];\r\n          })\r\n      },\r\n      onSigungu(id) {\r\n        this.inputValue.sigungu = find(this.sigungu.options, 'id', id);\r\n        this.$emit('update:value', this.inputValue);\r\n        this.$emit('update:selectedValue', `${this.inputValue.sido.name} ${this.inputValue.sigungu.name}`);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}