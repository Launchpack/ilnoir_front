{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Common/FilterSort.vue?vue&type=template&id=6b0544d1&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Common/FilterSort.vue","mtime":1605259983000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div>\n  <!-- 아코디언 -->\n  <div v-for=\"(item,idx) in filterData\" :key=\"'filter-'+idx\">\n    <div class=\"grid-box unselect\" @click=\"item.visible = !item.visible\" style=\"padding:12px 16px\" :style=\"brandBgColor.sub\">\n      <div class=\"col-11 flex-between\">\n        <div :style=\"brandColor.help\">{{ item.label }}</div>\n        <div :style=\"brandColor.brand\" style=\"font-size:13px\">{{ item.selectedValue }}</div>\n      </div>\n      <div class=\"col-1 flex-end\">\n        <i class=\"material-icons\" :style=\"brandColor.sub\">{{ item.visible ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\n      </div>\n    </div>\n    <!-- 컨텐트 영역 -->\n    <div v-if=\"item.visible\" style=\"padding:20px\">\n      <component :is=\"item.elType\" v-bind=\"item\" :gutter=\"0\"\n                 :selectedValue.sync=\"item.selectedValue\"\n                 :formType=\"formTypeData\"\n                 :value.sync=\"item.value\"\n                 @update:value=\"res => updateValue(item, res)\"\n                 :radioButtonFull=\"{col: 4, gutter: 4}\"\n      ></component>\n    </div>\n  </div>\n\n  <!-- 정렬 -->\n  <div v-if=\"sortData && useSort\">\n    <div class=\"grid-box unselect\" @click=\"sortData.visible = !sortData.visible\" style=\"padding:16px\" :style=\"brandBgColor.sub\">\n      <div class=\"col-11 flex-between\">\n        <div :style=\"brandColor.help\">{{ sortData.label }}</div>\n        <div :style=\"brandColor.brand\" style=\"font-size:13px\">{{ sortData.selectedValue }}</div>\n      </div>\n      <div class=\"col-1 flex-end\">\n        <i class=\"material-icons\" :style=\"brandColor.sub\">{{ sortData.visible ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\n      </div>\n    </div>\n    <!-- 컨텐트 영역 -->\n    <div v-if=\"sortData.visible\" style=\"padding:20px\">\n      <component :is=\"sortData.elType\" v-bind=\"sortData\" :gutter=\"0\"\n                 :selectedValue.sync=\"sortData.selectedValue\"\n                 :value.sync=\"sortData.value\" @update:value=\"res => updateValue(sortData, res)\"></component>\n    </div>\n  </div>\n</div>\n",null]}