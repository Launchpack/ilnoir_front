{"remainingRequest":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockProductDetailTabPc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockProductDetailTabPc.vue","mtime":1605260016000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CardReviewTotalRegPc from \"@/components/Components/Card/CardReviewTotalRegPc\"\nimport CardReviewPc from \"@/components/Components/Card/CardReviewPc\"\nimport CardInquiryTotalRegPc from \"@/components/Components/Card/CardInquiryTotalRegPc\"\nimport CardInquiryPc from \"@/components/Components/Card/CardInquiryPc\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'BlockProductDetailTabPc',\n  components: {\n    CardReviewTotalRegPc,\n    CardReviewPc,\n    CardInquiryTotalRegPc,\n    CardInquiryPc\n  },\n  mixins: [\n    BlockMixin\n  ],\n  props: {\n    fixedState: {\n      type: Boolean,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"menu\": [\n        {\n          \"id\": 0,\n          \"name\": \"소개\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"리뷰\",\n          \"count\": 0\n        },\n        {\n          \"id\": 2,\n          \"name\": \"문의\",\n          \"count\": 0\n        }\n      ],\n      \"detail\": undefined,\n      \"imgStyle\": {\n        \"width\": \"100%\",\n        \"height\": \"240px\",\n        \"objectFit\": \"cover\"\n      },\n      \"relatedList\": [],\n      \"review_list_self\": [],\n      \"inquiry_list_self\": [],\n      \"review_list_other\": [],\n      \"inquiry_list_other\": []\n    }\n  },\n  created() {\n    this.getData();\n    this.getProductReview();\n    this.getProductInquiry();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    getData() {\n      this.$axios.get(`/user/${this.user.user_id}/mapping/product/${this.$route.query.id}?fields=id,img,name,simple_desc,tags,form,\n      order_conversion_type,category1,category2,category3,rate,stock,input,like_count,reviews_count,visit,price,partner,\n      address,dong,distance,params,imgs,info,operating_time,phone,params,related_products`)\n      .then(res => {\n          this.detail = res.data;\n          this.getRelate();\n        });\n      },\n    getRelate() {\n      this.relatedList = [];\n        if(this.detail.related_products&&this.detail.related_products.length>0) {\n          let list = this.detail.related_products.slice(0,4);\n          list.forEach(item => {\n            this.$axios.get(`/user/${this.user.user_id}/mapping/product/${item}?fields=id,img,name,price`)\n            .then(res => {\n              this.relatedList.push(res.data);\n            })\n          })\n        }\n      },\n    clickCard(item) {\n        this.$emit('changeToggle', this.toggle);\n        let query = cloneItem(this.$route.query);\n        query.id = item.id;\n        this.$router.replace({\n          path: this.$route.path,\n          query: query\n        });\n      },\n    getProductReview() {\n      this.review_list_self = [];\n      this.review_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n        \n      this.review_list_self = [];\n      this.review_list_other = [];\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true;\n            this.review_list_self.push(item);\n          }\n          else {\n            this.review_list_other.push(item);\n          }\n        })\n        this.menu[1].count = res.data.count;\n      })\n    },\n    getProductInquiry() {\n      this.inquiry_list_self = [];\n      this.inquiry_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n        \n      this.inquiry_list_self = [];\n      this.inquiry_list_other = [];\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true;\n            this.inquiry_list_self.push(item);\n          }\n          else {\n            this.inquiry_list_other.push(item);\n          }\n        })\n        this.menu[2].count = res.data.count;\n      })\n    }\n  },\n  computed: {\n    wrapStyle() {\n      return {\n        padding: '32px 0',\n        borderBottom: `2px solid ${this.getColor('보조 테두리선 색상')}`\n      }\n    },\n    selectedTabStyle() {\n      return {\n        color: `${this.getColor('Primary Color')}`,\n        padding: '14px 16px',\n        fontSize: '14px',\n        backgroundColor: 'white',\n        marginRight: '8px',\n        borderRadius: '8px'\n      }\n    },\n    unselectedTabStyle() {\n      return {\n        color: `${this.getColor('기본 내용 색상')}`,\n        padding: '14px 16px',\n        fontSize: '14px',\n        marginRight: '8px',\n      }\n    }\n  },\n  watch: {\n    $route(n, o) {\n      if(n.path === o.path) {\n        this.getData();\n      }\n    }\n  }\n}\n",{"version":3,"sources":["BlockProductDetailTabPc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlockProductDetailTabPc.vue","sourceRoot":"src/components/Components/Block","sourcesContent":["<template>\n<div class=\"flex-justify\">\n    <div v-if=\"detail\" :style=\"pcMaxWidth\">\n      <div class=\"size-16 text-center weight-500\" style=\"padding:12px 0\"\n        :style=\"brandColor.white\">상세 설명</div>\n      <div style=\"margin-top:16px;padding: 16px 16px 40px;margin-bottom:120px\"\n        :style=\"[brandBgColor.white, radius]\">\n        <e-editor :html=\"detail.info\" v-if=\"detail\"></e-editor>\n      </div>\n      \n      <div :style=\"brandColor.white\" v-if=\"relatedList.length>0\"\n        class=\"text-center\">\n        <div class=\"size-16 bold\" :style=\"wrapStyle\">함께 보면 좋은 상품</div>\n        <div class=\"flex\">\n          <div v-for=\"item in relatedList\" :key=\"'key-'+item.id\"\n            class=\"col-3 unselect\" style=\"padding:0 4px;margin-top:20px\"\n            @click=\"clickCard(item)\">\n            <img :src=\"item.img\" :style=\"imgStyle\">\n            <div class=\"full-width\" style=\"padding:12px 0\">\n              <div class=\"weight-500 size-14 margin-bottom-4\">{{ item.name }}</div>\n              <div class=\"size-16 bold\">{{ item.price.sale_price | currency }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n</template>\n<script>\nimport CardReviewTotalRegPc from \"@/components/Components/Card/CardReviewTotalRegPc\"\nimport CardReviewPc from \"@/components/Components/Card/CardReviewPc\"\nimport CardInquiryTotalRegPc from \"@/components/Components/Card/CardInquiryTotalRegPc\"\nimport CardInquiryPc from \"@/components/Components/Card/CardInquiryPc\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'BlockProductDetailTabPc',\n  components: {\n    CardReviewTotalRegPc,\n    CardReviewPc,\n    CardInquiryTotalRegPc,\n    CardInquiryPc\n  },\n  mixins: [\n    BlockMixin\n  ],\n  props: {\n    fixedState: {\n      type: Boolean,\n      required: false,\n    },\n\n  },\n  data() {\n    return {\n      \"menu\": [\n        {\n          \"id\": 0,\n          \"name\": \"소개\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"리뷰\",\n          \"count\": 0\n        },\n        {\n          \"id\": 2,\n          \"name\": \"문의\",\n          \"count\": 0\n        }\n      ],\n      \"detail\": undefined,\n      \"imgStyle\": {\n        \"width\": \"100%\",\n        \"height\": \"240px\",\n        \"objectFit\": \"cover\"\n      },\n      \"relatedList\": [],\n      \"review_list_self\": [],\n      \"inquiry_list_self\": [],\n      \"review_list_other\": [],\n      \"inquiry_list_other\": []\n    }\n  },\n  created() {\n    this.getData();\n    this.getProductReview();\n    this.getProductInquiry();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    getData() {\n      this.$axios.get(`/user/${this.user.user_id}/mapping/product/${this.$route.query.id}?fields=id,img,name,simple_desc,tags,form,\n      order_conversion_type,category1,category2,category3,rate,stock,input,like_count,reviews_count,visit,price,partner,\n      address,dong,distance,params,imgs,info,operating_time,phone,params,related_products`)\n      .then(res => {\n          this.detail = res.data;\n          this.getRelate();\n        });\n      },\n    getRelate() {\n      this.relatedList = [];\n        if(this.detail.related_products&&this.detail.related_products.length>0) {\n          let list = this.detail.related_products.slice(0,4);\n          list.forEach(item => {\n            this.$axios.get(`/user/${this.user.user_id}/mapping/product/${item}?fields=id,img,name,price`)\n            .then(res => {\n              this.relatedList.push(res.data);\n            })\n          })\n        }\n      },\n    clickCard(item) {\n        this.$emit('changeToggle', this.toggle);\n        let query = cloneItem(this.$route.query);\n        query.id = item.id;\n        this.$router.replace({\n          path: this.$route.path,\n          query: query\n        });\n      },\n    getProductReview() {\n      this.review_list_self = [];\n      this.review_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/review?secret=true&page_num=1&page_length=8`;\n        \n      this.review_list_self = [];\n      this.review_list_other = [];\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true;\n            this.review_list_self.push(item);\n          }\n          else {\n            this.review_list_other.push(item);\n          }\n        })\n        this.menu[1].count = res.data.count;\n      })\n    },\n    getProductInquiry() {\n      this.inquiry_list_self = [];\n      this.inquiry_list_other = [];\n      let product_id = this.$route.query.id;\n      this.url = `public/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n      if(this.isLogin)\n        this.url = `user/${this.user.user_id}/product/${product_id}/inquiry?secret=true&page_num=1&page_length=8`;\n        \n      this.inquiry_list_self = [];\n      this.inquiry_list_other = [];\n      this.$axios.get(this.url).then(res => {\n        res.data.data.forEach(item => {\n          if(Number(item.author_id) === this.user.user_id) {\n            item.self = true;\n            this.inquiry_list_self.push(item);\n          }\n          else {\n            this.inquiry_list_other.push(item);\n          }\n        })\n        this.menu[2].count = res.data.count;\n      })\n    }\n  },\n  computed: {\n    wrapStyle() {\n      return {\n        padding: '32px 0',\n        borderBottom: `2px solid ${this.getColor('보조 테두리선 색상')}`\n      }\n    },\n    selectedTabStyle() {\n      return {\n        color: `${this.getColor('Primary Color')}`,\n        padding: '14px 16px',\n        fontSize: '14px',\n        backgroundColor: 'white',\n        marginRight: '8px',\n        borderRadius: '8px'\n      }\n    },\n    unselectedTabStyle() {\n      return {\n        color: `${this.getColor('기본 내용 색상')}`,\n        padding: '14px 16px',\n        fontSize: '14px',\n        marginRight: '8px',\n      }\n    }\n  },\n  watch: {\n    $route(n, o) {\n      if(n.path === o.path) {\n        this.getData();\n      }\n    }\n  }\n}\n</script>\n\n\n"]}]}