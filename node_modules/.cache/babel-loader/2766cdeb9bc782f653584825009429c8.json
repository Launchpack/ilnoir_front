{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputEmailSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputEmailSelect.vue","mtime":1605259987000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CInputText from \"./CInputText\";\nimport FormMixin from '@/components/Mixins/FormMixin';\nimport ClickOutside from 'vue-click-outside';\nexport default {\n  components: {\n    CInputText: CInputText\n  },\n  name: \"c-input-email-select\",\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  mixins: [FormMixin],\n  props: {\n    value: {\n      type: [String, Number],\n      required: false\n    },\n    label: {\n      type: String,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false\n    },\n    visibleTitle: {\n      type: Boolean,\n      required: false\n    },\n    validate: {\n      type: Object,\n      required: false\n    },\n    name: {\n      type: String,\n      required: true\n    }\n  },\n  created: function created() {\n    if (this.value) {\n      this.setValue();\n    }\n\n    this.computeInputStyle();\n\n    if (this.validate) {\n      this.valid = this.validate;\n    }\n  },\n  watch: {\n    value: function value(n) {\n      this.setValue(); // this.inputValue = n;\n    } // inputValue(n) {\n    //   // this.$emit('update:value', n);\n    //   this.checkEmailValue();\n    // }\n\n  },\n  data: function data() {\n    return {\n      type: 'email',\n      // 아이디 인풋\n      inputValue: '',\n      errorMsg: '',\n      // 이메일 드롭다운\n      selectedEmail: '',\n      showEmailSelf: false,\n      emailSelf: '',\n      isOpen: false,\n      emailList: [{\n        value: '직접 입력'\n      }, {\n        value: 'gmail.com'\n      }, {\n        value: 'naver.com'\n      }, {\n        value: 'daum.net'\n      }, {\n        value: 'hanmail.net'\n      }, {\n        value: 'nate.com'\n      }, {\n        value: 'hotmail.com'\n      }, {\n        value: 'msn.com'\n      }],\n      computedInputStyle: {}\n    };\n  },\n  computed: {\n    maxLength: function maxLength() {\n      if (this.validate) return this.validate.max_length ? this.validate.max_length : 50;\n    },\n    dropdown: function dropdown() {\n      if (this.showEmailSelf) return this.noneStyle;else return this.dropdownStyle;\n    },\n    noneStyle: function noneStyle() {\n      return {\n        padding: 0,\n        border: 'none'\n      };\n    }\n  },\n  methods: {\n    setValue: function setValue() {\n      var valueArr = this.value.split('@');\n\n      if (valueArr.length === 2) {\n        // 아이디\n        this.inputValue = valueArr[0]; // 이메일\n\n        var targetArr = this.emailList.filter(function (item) {\n          return item.value === valueArr[1];\n        });\n\n        if (targetArr.length === 0) {\n          this.emailSelf = valueArr[1];\n          this.showEmailSelf = true;\n        } else {\n          this.selectedEmail = valueArr[1];\n          this.showEmailSelf = false;\n        }\n      }\n    },\n    // checkEmail\n    checkEmailValue: function checkEmailValue() {\n      var email = '';\n\n      if (this.showEmailSelf) {\n        email = this.emailSelf;\n      } else email = this.selectedEmail;\n\n      var result = \"\".concat(this.inputValue, \"@\").concat(email);\n      if (!this.validate.valid_required) return;\n      var props = {\n        value: result,\n        type: this.type,\n        validate: this.validate\n      };\n      this.errorMsg = this.isValid(props, this.name);\n      this.validate.error_msg = this.errorMsg;\n      this.computeInputStyle(); // 이메일 검사 완료\n\n      if (!this.errorMsg) {\n        this.isOpen = false;\n        this.$emit('update:value', result);\n      }\n    },\n    onKeyup: function onKeyup(value) {\n      this.inputValue = value;\n      this.computeInputStyle(); // this.checkEmailValue();\n      // this.$emit('update:value', this.inputValue);\n    },\n    computeInputStyle: function computeInputStyle() {\n      var deco = this.inputStyle;\n      var color = this.getColor('기본 테두리선 색상');\n\n      if (this.errorMsg !== '') {\n        color = this.brandBgColor.alert.backgroundColor;\n      }\n\n      switch (this.formType && this.formType.input) {\n        case 'round':\n          deco.borderRadius = this.radius.borderRadius;\n          deco.border = \"1px solid \".concat(color);\n          break;\n\n        case 'underline':\n          deco.borderBottom = \"1px solid \".concat(color);\n          break;\n      }\n\n      this.computedInputStyle = deco;\n    },\n    errorStyle: function errorStyle() {\n      var deco = {\n        color: this.brandBgColor.alert\n      };\n      return deco;\n    },\n    clickItem: function clickItem(item) {\n      if (item.value === '직접 입력') {\n        this.emailSelf = '';\n        this.showEmailSelf = true;\n      } else {\n        this.showEmailSelf = false;\n        this.selectedEmail = item.value;\n      }\n\n      this.isOpen = false;\n      this.checkEmailValue();\n    },\n    clickOutside: function clickOutside() {\n      this.isOpen = false;\n    }\n  }\n};",{"version":3,"sources":["CInputEmailSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"c-input-email-select-container\" :style=\"containerStyle\">\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <!-- <c-input-text v-bind=\"$props\"\r\n                  :value.sync=\"inputValue\"\r\n                  :formType=\"formType\"\r\n                  :inputCustomStyle=\"inputCustomStyle\"></c-input-text> -->\r\n\r\n    <div class=\"flex\">\r\n\r\n      <!-- 아이디 인풋 -->\r\n      <div style=\"width:47%\">\r\n\r\n        <!-- 인풋 -->\r\n        <div class=\"flex-align\r\n                    full-width\r\n                    position-relative\">\r\n\r\n          <!-- input -->\r\n          <div \r\n            class=\"flex-align full-width\"\r\n            :class=\"{'input-disabled': disabled===true}\">\r\n\r\n            <input\r\n              class=\"input full-width\"\r\n              :style=\"computedInputStyle\" \r\n              ref=\"input\"\r\n              type=\"text\"\r\n              :value=\"inputValue\"\r\n              :maxlength=\"maxLength\"\r\n              :placeholder=\"placeholder\"\r\n              @keyup=\"checkEmailValue\"\r\n              @input=\"e => onKeyup(e.target.value)\"\r\n              :readonly=\"disabled===true\">\r\n          </div>\r\n\r\n          <!-- 삭제 아이콘 -->\r\n          <!-- <i v-if=\"deleteIcon\r\n                  && value\"\r\n            class=\"material-icons unselect\"\r\n            :style=\"deleteIconStyle\"\r\n            @click=\"clear\">clear</i> -->\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div class=\"flex-center\" style=\"width:6%; color:#999; margin:0 4px;\">@</div>\r\n\r\n      <!-- 이메일 직접입력 -->\r\n      <!-- <div v-if=\"showEmailSelf\"  style=\"width:47%\">\r\n        <input\r\n          type=\"text\" class=\"full-width\"\r\n          placeholder=\"직접 입력\"\r\n          v-model=\"emailSelf\"\r\n          @blur=\"checkEmailValue\"\r\n          :style=\"computedInputStyle\">\r\n      </div> -->\r\n      <!-- 이메일 드롭다운 -->\r\n      <div style=\"width:47%\" \r\n          class=\"dropdown position-relative unselect full-width\" ref=\"dropdown\"\r\n          :style=\"dropdown\"\r\n          @click.stop.prevent=\"isOpen=!isOpen\">\r\n        \r\n        <span v-if=\"selectedEmail && !showEmailSelf\" style=\"margin-right: 5px;\"\r\n        >{{ selectedEmail }}</span>\r\n        \r\n        <input v-if=\"showEmailSelf\"\r\n          type=\"text\" class=\"full-width\"\r\n          placeholder=\"직접 입력\"\r\n          v-model=\"emailSelf\"\r\n          @keyup=\"checkEmailValue\"\r\n          @blur=\"checkEmailValue\"\r\n          :style=\"computedInputStyle\">\r\n\r\n        <i :style=\"brandColor.sub\" class=\"material-icons drop-icon\" \r\n          @click.stop.prevent=\"isOpen=!isOpen\">\r\n          {{ isOpen ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</i>            \r\n        <!-- List -->\r\n        <ul v-if=\"isOpen && formType.dropdown !== 'modal'\" \r\n        class=\"dropdown-list position-absolute\"\r\n        v-click-outside=\"clickOutside\">\r\n          <li class=\"item unselect\"\r\n              v-for=\"(item, idx) in emailList\"\r\n              :key=\"idx\"\r\n              :style=\"[brandColor.main, brandBgColor.main]\"\r\n              @click.stop.prevent=\"clickItem(item)\"\r\n              @mouseover=\"mouseOverIndex=idx\"\r\n              @mouseleave=\"mouseOverIndex=undefined;\">\r\n            {{ item.value }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- 에러메세지 -->\r\n    <div v-if=\"errorMsg!=='' && !formType.vErrorNotShown\"\r\n        :style=\"errorStyle\"\r\n        class=\"lp-error-msg\">{{ errorMsg }}\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import CInputText from \"./CInputText\";\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n  import ClickOutside from 'vue-click-outside'\r\n  export default {\r\n    components: {CInputText},\r\n    name: \"c-input-email-select\",\r\n    directives: {\r\n      ClickOutside\r\n    },\r\n    mixins:[\r\n      FormMixin\r\n    ],\r\n    props: {\r\n      value: {\r\n        type: [String, Number],\r\n        required:false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      placeholder: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        required: false\r\n      },\r\n      visibleTitle: {\r\n        type: Boolean,\r\n        required: false\r\n      },\r\n      validate: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      name: {\r\n        type: String,\r\n        required: true\r\n      }\r\n    },\r\n    created() {\r\n      if(this.value) {\r\n        this.setValue();\r\n      }\r\n\r\n      this.computeInputStyle();\r\n\r\n      if(this.validate) {\r\n        this.valid = this.validate;\r\n      }\r\n    },    \r\n    watch: {\r\n      value(n) {\r\n        this.setValue();\r\n        // this.inputValue = n;\r\n      },\r\n      // inputValue(n) {\r\n      //   // this.$emit('update:value', n);\r\n      //   this.checkEmailValue();\r\n      // }\r\n    },\r\n    data() {\r\n      return {\r\n        type: 'email',\r\n\r\n        // 아이디 인풋\r\n        inputValue: '',\r\n        errorMsg: '',\r\n\r\n        // 이메일 드롭다운\r\n        selectedEmail: '',\r\n        showEmailSelf: false,\r\n        emailSelf: '',\r\n        isOpen: false,\r\n        emailList: [\r\n          {\r\n            value: '직접 입력'\r\n          },\r\n          {\r\n            value: 'gmail.com'\r\n          },\r\n          {\r\n            value: 'naver.com'\r\n          },\r\n          {\r\n            value: 'daum.net'\r\n          },\r\n          {\r\n            value: 'hanmail.net'\r\n          },\r\n          {\r\n            value: 'nate.com'\r\n          },\r\n          {\r\n            value: 'hotmail.com'\r\n          },\r\n          {\r\n            value: 'msn.com'\r\n          },\r\n        ],\r\n\r\n        computedInputStyle: {}\r\n      }\r\n    },\r\n    computed: {\r\n      maxLength() {\r\n        if (this.validate) \r\n          return this.validate.max_length ? this.validate.max_length : 50;\r\n      },\r\n      dropdown() {\r\n        if (this.showEmailSelf) return this.noneStyle;\r\n        else return this.dropdownStyle;\r\n      },\r\n      noneStyle() {\r\n        return {\r\n          padding: 0,\r\n          border: 'none'\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      setValue() {\r\n        let valueArr = this.value.split('@');\r\n        if (valueArr.length===2) {\r\n          // 아이디\r\n          this.inputValue = valueArr[0];\r\n          // 이메일\r\n          let targetArr = this.emailList.filter(item => {return item.value===valueArr[1]});\r\n          if (targetArr.length===0) {\r\n            this.emailSelf = valueArr[1];\r\n            this.showEmailSelf = true;\r\n          }\r\n          else {\r\n            this.selectedEmail = valueArr[1];\r\n            this.showEmailSelf = false;\r\n          }\r\n        }\r\n      },\r\n\r\n      // checkEmail\r\n      checkEmailValue() {\r\n        let email = '';\r\n        if (this.showEmailSelf) {\r\n          email = this.emailSelf;\r\n        }\r\n        else email = this.selectedEmail;\r\n\r\n        let result = `${this.inputValue}@${email}`;\r\n\r\n        if (!this.validate.valid_required) return;\r\n\r\n        let props = {\r\n          value: result,\r\n          type: this.type,\r\n          validate: this.validate\r\n        }\r\n\r\n        this.errorMsg = this.isValid(props, this.name);\r\n        this.validate.error_msg = this.errorMsg;\r\n        this.computeInputStyle();\r\n\r\n        // 이메일 검사 완료\r\n        if (!this.errorMsg) {\r\n          this.isOpen = false;\r\n          this.$emit('update:value', result);\r\n        }\r\n      },      \r\n      onKeyup(value) {\r\n        this.inputValue = value;\r\n        this.computeInputStyle();\r\n\r\n        // this.checkEmailValue();\r\n        // this.$emit('update:value', this.inputValue);\r\n      },   \r\n\r\n      computeInputStyle() {\r\n        let deco = this.inputStyle;\r\n        let color = this.getColor('기본 테두리선 색상');\r\n        if(this.errorMsg !== '') {\r\n         color = this.brandBgColor.alert.backgroundColor;\r\n        }\r\n\r\n        switch (this.formType && this.formType.input) {\r\n          case 'round':\r\n            deco.borderRadius = this.radius.borderRadius;\r\n            deco.border = `1px solid ${color}`;\r\n            break;\r\n          case 'underline':\r\n            deco.borderBottom = `1px solid ${color}`;\r\n            break;\r\n        }\r\n\r\n        this.computedInputStyle = deco;\r\n      },\r\n\r\n      errorStyle() {\r\n        let deco = {\r\n          color: this.brandBgColor.alert\r\n        };\r\n        return deco;\r\n      },\r\n\r\n      clickItem(item) {\r\n        if (item.value==='직접 입력') {\r\n          this.emailSelf = '';\r\n          this.showEmailSelf = true;\r\n        }\r\n        else {\r\n          this.showEmailSelf = false;\r\n          this.selectedEmail = item.value;\r\n        }\r\n        this.isOpen = false;\r\n        this.checkEmailValue();\r\n      },\r\n\r\n      clickOutside() {\r\n        this.isOpen = false;\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  \r\n  .c-input-email-select-container\r\n    width 100%\r\n\r\n  .label\r\n    display block\r\n\r\n  input\r\n    border 0\r\n    flex 1\r\n    background-color transparent !important\r\n    -webkit-appearance 'none'\r\n    -webkit-border-radius 0\r\n\r\n  textarea:focus\r\n  input:focus\r\n    outline none\r\n\r\n  .lp-error-msg\r\n    color #e80000\r\n    font-size 0.7rem\r\n    margin-top 4px\r\n    width: 100%\r\n\r\n  .input-disabled\r\n    border 1px solid #eee\r\n    background-color #eee\r\n    color #777\r\n\r\n  .dropdown-list\r\n    z-index 1\r\n    border 1px solid #f2f3f2\r\n    top 42px\r\n    left 0\r\n    width 100%\r\n    & li\r\n      padding 4px 16px\r\n\r\n  .drop-icon\r\n    position absolute\r\n    top 9px\r\n    right 6px\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}