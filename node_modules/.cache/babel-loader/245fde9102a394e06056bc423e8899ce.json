{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/eslint-loader/index.js??ref--13-0!/Users/mard/dev/grit12/src/components/Mixins/ListMixin.js","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Mixins/ListMixin.js","mtime":1605259991000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nexport default {\n  components: {},\n  mixins: [],\n  props: {},\n  data: function data() {\n    return {\n      \"url\": \"\",\n      \"loading\": false,\n      \"scrollEnd\": false,\n      \"isLastPage\": false,\n      \"totalCount\": 0,\n      \"totalPages\": 1,\n      \"currentPage\": 1,\n      \"pageLoadType\": \"none\",\n      postParam: undefined\n    };\n  },\n  mounted: function mounted() {\n    if (this.pageLoadType === 'infinite') {\n      // 무한 스크롤\n      // window.document.body.onscroll = function() {\n      //   this.onScroll();\n      // }.bind(this);\n      this.$nextTick(function () {\n        var _this = this;\n\n        window.addEventListener('scroll', function () {\n          _this.onScroll();\n        });\n      });\n    }\n  },\n  methods: {\n    onScroll: function onScroll() {\n      var scrollTop = document.getElementsByTagName('html')[0].scrollTop + window.innerHeight;\n      var scrollHeight = document.getElementById('app').scrollHeight;\n\n      if (scrollTop > scrollHeight - 300) {\n        this.scrollEnd = true;\n      } else {\n        this.scrollEnd = false;\n      }\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      if (this.loading || this.currentPage === 1) return;\n\n      if (this.currentPage > this.totalPages) {\n        this.isLastPage = true;\n        return;\n      }\n\n      this.loading = true; // post\n\n      if (this.postParam !== undefined) {\n        this.postParam.page_num = this.currentPage;\n        this.$axios.post(this.url, this.postParam).then(function (res) {\n          _this2.currentPage++;\n          _this2.list = _this2.list.concat(res.data.data);\n          _this2.loading = false;\n\n          _this2.$store.commit('setLoadingSpinner', false);\n        }).catch(function () {\n          _this2.loading = false;\n\n          _this2.$store.commit('setLoadingSpinner', false);\n        });\n      } // get\n      else {\n          this.$axios.get(this.url.replace('page_num=1', \"page_num=\".concat(this.currentPage))).then(function (res) {\n            _this2.currentPage++;\n            _this2.list = _this2.list.concat(res.data.data);\n            _this2.loading = false;\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        }\n    }\n  },\n  computed: {},\n  watch: {\n    scrollEnd: function scrollEnd(n) {\n      if (n) {\n        this.getList();\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/mard/dev/grit12/src/components/Mixins/ListMixin.js"],"names":["components","mixins","props","data","postParam","undefined","mounted","pageLoadType","$nextTick","window","addEventListener","onScroll","methods","scrollTop","document","getElementsByTagName","innerHeight","scrollHeight","getElementById","scrollEnd","getList","loading","currentPage","totalPages","isLastPage","page_num","$axios","post","url","then","res","list","concat","$store","commit","catch","get","replace","computed","watch","n"],"mappings":"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","sourcesContent":["\r\nexport default {\r\n    components: {\r\n\r\n    },\r\n    mixins: [\r\n\r\n    ],\r\n    props: {\r\n\r\n    },\r\n    data() {\r\n      return {\r\n\t\t    \"url\": \"\",\r\n\t\t    \"loading\": false,\r\n\t\t    \"scrollEnd\": false,\r\n\t\t    \"isLastPage\": false,\r\n\t\t    \"totalCount\": 0,\r\n\t\t    \"totalPages\": 1,\r\n\t\t    \"currentPage\": 1,\r\n        \"pageLoadType\": \"none\",\r\n        postParam: undefined\r\n\r\n\t\t}\r\n    },\r\n    mounted() {\r\n\t  if (this.pageLoadType === 'infinite') {\r\n\t    // 무한 스크롤\r\n\t    // window.document.body.onscroll = function() {\r\n\t    //   this.onScroll();\r\n      // }.bind(this);\r\n      \r\n      this.$nextTick(function () {\r\n        window.addEventListener('scroll', () => {\r\n          this.onScroll();\r\n        });\r\n      })\r\n\t  }\r\n\t},\r\n    methods: {\r\n        onScroll() {\r\n\t\t  let scrollTop = document.getElementsByTagName('html')[0].scrollTop\r\n\t\t    + window.innerHeight;\r\n\t\t\r\n\t\t  let scrollHeight = document.getElementById('app').scrollHeight;\r\n\t\t\r\n\t\t  if (scrollTop > (scrollHeight - 300)) {\r\n\t\t    this.scrollEnd = true;\r\n\t\t  }\r\n\t\t  else {\r\n\t\t    this.scrollEnd = false;\r\n\t\t  }\r\n\t\t},\r\n\t\tgetList() {\r\n\t\t  if(this.loading || this.currentPage === 1) return;\r\n\t\t\r\n\t\t  if (this.currentPage > this.totalPages) {\r\n\t\t    this.isLastPage = true;\r\n\t\t    return;\r\n\t\t  }\r\n\t\t\r\n      this.loading = true;\r\n      \r\n      \r\n      // post\r\n      if (this.postParam!==undefined) {\r\n        this.postParam.page_num = this.currentPage;\r\n        this.$axios.post(this.url, this.postParam).then(res => {\r\n          this.currentPage++;\r\n          this.list = this.list.concat(res.data.data);\r\n          this.loading = false;\r\n          this.$store.commit('setLoadingSpinner', false);\r\n        }).catch(()=> {\r\n          this.loading = false;\r\n          this.$store.commit('setLoadingSpinner', false);\r\n        });\r\n      }\r\n      // get\r\n      else {\r\n        this.$axios.get(this.url.replace('page_num=1', `page_num=${this.currentPage}`)).then(res => {\r\n          this.currentPage++;\r\n          this.list = this.list.concat(res.data.data);\r\n          this.loading = false;\r\n        }).catch(()=> {\r\n          this.loading = false;\r\n        });\r\n      \r\n        }\r\n\t  \t}\r\n    },\r\n    computed: {\r\n        \r\n    },\r\n    watch: {\r\n      scrollEnd(n) {\r\n  \t\t  if(n) {\r\n  \t\t    this.getList();\r\n  \t\t  }\r\n  \t\t}\r\n    }\r\n}\r\n"]}]}