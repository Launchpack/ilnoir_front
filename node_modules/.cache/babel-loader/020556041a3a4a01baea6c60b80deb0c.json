{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputTextarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputTextarea.vue","mtime":1605259989000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from '@/components/Mixins/FormMixin';\nexport default {\n  name: 'c-input-textarea',\n  mixins: [FormMixin],\n  props: {\n    type: {\n      type: String,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false\n    },\n    deleteIcon: {\n      type: Boolean,\n      required: false\n    },\n    validate: {\n      type: Object,\n      required: false\n    },\n    rows: {\n      type: Number,\n      required: false,\n      default: 7\n    }\n  },\n  mounted: function mounted() {\n    if (this.validate) {\n      this.valid = this.validate;\n    }\n  },\n  data: function data() {\n    return {\n      inputValue: '',\n      errorMsg: '',\n      keyup: false,\n      valid: {\n        valid_required: false,\n        error_msg: '',\n        max_length: 100,\n        min_length: 0,\n        alpha_s: true,\n        alpha_g: true,\n        special: true,\n        num: true\n      }\n    };\n  },\n  computed: {\n    iconStyle: function iconStyle() {\n      var styles = this.cloneItem(this.styles.input.icon);\n      var deco = this.decoToStyle(styles);\n      deco.position = 'absolute';\n      if (this.styles[this.type].icon.direction === 'left') deco.right = 'unset';else if (this.styles[this.type].icon.direction === 'right') deco.left = 'unset';\n      return deco;\n    },\n    deleteIconStyle: function deleteIconStyle() {\n      var deco = {};\n      /*let styles = this.cloneItem(this.styles.input.deleteIcon);\n      let deco = this.decoToStyle(styles);\n      deco.position = 'absolute';*/\n\n      return deco;\n    },\n    errorStyle: function errorStyle() {\n      var deco = {\n        color: this.brandBgColor.alert\n      };\n      return deco;\n    }\n  },\n  methods: {\n    onKeyup: function onKeyup(e) {\n      this.inputValue = e.target.value;\n      this.$emit('update:value', this.inputValue);\n    },\n    chkValid: function chkValid() {\n      // validation이 필수가 아닌 경우\n      if (!this.valid.valid_required) return;\n      var props = {\n        value: this.value,\n        type: this.type,\n        validate: this.valid\n      };\n      this.errorMsg = this.isValid(props, this.name);\n      this.validate.error_msg = this.errorMsg; // this.valid.error_msg = this.errorMsg;\n    },\n    clear: function clear() {\n      this.inputValue = '';\n      this.$emit('update:value', this.inputValue);\n    }\n  }\n};",{"version":3,"sources":["CInputTextarea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <!-- 인풋 -->\r\n    <div class=\"flex-align\r\n                full-width\r\n                position-relative\">\r\n\r\n      <!-- 아이콘 -->\r\n      <!--<i v-if=\"styles.textarea.icon.enable\"\r\n        class=\"material-icons\"\r\n        :style=\"iconStyle\">\r\n        {{ properties.icon }}\r\n      </i>-->\r\n\r\n      <!-- input -->\r\n      <textarea\r\n          ref=\"input\"\r\n          class=\"input\"\r\n          :style=\"inputStyle\"\r\n          :rows=\"rows\"\r\n          :value=\"value\"\r\n          @keyup.enter=\"$emit('onEnter')\"\r\n          @keyup=\"onKeyup\" @blur=\"chkValid\"\r\n          :placeholder=\"placeholder\"\r\n          :readonly=\"disabled===true\"></textarea>\r\n\r\n\r\n      <!-- 삭제 아이콘 -->\r\n      <i v-if=\"deleteIcon\r\n              && value\"\r\n         class=\"material-icons\"\r\n         :style=\"deleteIconStyle\"\r\n         @click=\"clear\">\r\n        clear\r\n      </i>\r\n\r\n    </div>\r\n\r\n    <!-- 에러메세지 -->\r\n    <div v-if=\"errorMsg!==''\"\r\n         :style=\"errorStyle\"\r\n         class=\"lp-error-msg\">{{ errorMsg }}</div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n\r\n  export default {\r\n    name: 'c-input-textarea',\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        required: false\r\n      },\r\n      deleteIcon: {\r\n        type: Boolean,\r\n        required: false\r\n      },\r\n      validate: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      rows: {\r\n        type: Number,\r\n        required: false,\r\n        default: 7\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      if(this.validate) {\r\n        this.valid = this.validate;\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        inputValue: '',\r\n        errorMsg: '',\r\n        keyup: false,\r\n        valid: {\r\n          valid_required: false,\r\n          error_msg: '',\r\n          max_length:100,\r\n          min_length:0,\r\n          alpha_s: true,\r\n          alpha_g: true,\r\n          special: true,\r\n          num: true\r\n        }\r\n      };\r\n    },\r\n\r\n    computed: {\r\n      iconStyle() {\r\n        let styles = this.cloneItem(this.styles.input.icon);\r\n        let deco = this.decoToStyle(styles);\r\n        deco.position = 'absolute';\r\n        if (this.styles[this.type].icon.direction==='left') deco.right = 'unset';\r\n        else if (this.styles[this.type].icon.direction==='right') deco.left = 'unset';\r\n        return deco;\r\n      },\r\n\r\n      deleteIconStyle() {\r\n        let deco = {};\r\n        /*let styles = this.cloneItem(this.styles.input.deleteIcon);\r\n        let deco = this.decoToStyle(styles);\r\n        deco.position = 'absolute';*/\r\n        return deco;\r\n      },\r\n      errorStyle() {\r\n        let deco = {\r\n          color: this.brandBgColor.alert\r\n        };\r\n        return deco;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      onKeyup(e) {\r\n        this.inputValue = e.target.value;\r\n        this.$emit('update:value', this.inputValue);\r\n      },\r\n      chkValid() {\r\n        // validation이 필수가 아닌 경우\r\n        if (!this.valid.valid_required) return;\r\n\r\n        let props = {\r\n          value: this.value,\r\n          type: this.type,\r\n          validate: this.valid\r\n        }\r\n\r\n        this.errorMsg = this.isValid(props, this.name);\r\n        this.validate.error_msg = this.errorMsg;\r\n        // this.valid.error_msg = this.errorMsg;\r\n      },\r\n      clear () {\r\n        this.inputValue = '';\r\n        this.$emit('update:value', this.inputValue);\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n  .c-input-textarea-container\r\n    width 100%\r\n\r\n  .label\r\n    display block\r\n\r\n  input\r\n    border 0\r\n    flex 1\r\n\r\n  textarea:focus\r\n  input:focus\r\n    outline none\r\n\r\n  .lp-error-msg\r\n    color #e80000\r\n    font-size 0.7rem\r\n    margin-top 4px\r\n\r\n  textarea\r\n    width 100%\r\n    height 100%\r\n    overflow-y auto\r\n    border 0\r\n    resize none\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}