{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputFileUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputFileUploader.vue","mtime":1605259987000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport FormMixin from '@/components/Mixins/FormMixin';\nexport default {\n  name: 'c-input-fileUploader',\n  mixins: [FormMixin],\n  props: {\n    label: {\n      type: String,\n      required: false\n    }\n  },\n  created: function created() {\n    this.uid = moment().format('SSSS');\n    /*if(this.description!==undefined)\n      this.description = this.description;\n    if(this.acceptExt !== undefined)\n      this.acceptExt = this.acceptExt;\n    if(this.maxLength !== undefined)\n      this.maxLength = this.maxLength;*/\n\n    if (this.value) this.files = this.value;\n  },\n  data: function data() {\n    return {\n      uid: '',\n      maxLength: 5,\n      acceptExt: 'image/gif, image/jpeg, image/png, .docx, .pptx, .xlsx, .hwp, .pdf',\n      description: '첨부파일은 최대 5개, 10MB 까지 등록 가능합니다.\\n' + '파일형식은 이미지(jpg, gif, png), 오피스 문서(hwp, pdf, pptx, docx, xlsx)만 가능합니다.',\n      file: undefined,\n      uploadReady: true,\n      // 초기화 용\n      files: []\n    };\n  },\n  watch: {\n    files: function files(n) {\n      if (n) this.$emit('update:value', this.files);\n    },\n    value: function value(n) {\n      this.files = n;\n    }\n  },\n  computed: {},\n  methods: {\n    onDelete: function onDelete(idx) {\n      this.files.remove(idx);\n    },\n    upper: function upper(ext) {\n      return ext.toUpperCase();\n    },\n    extColor: function extColor(ext) {\n      var deco = {\n        backgroundColor: ''\n      };\n\n      switch (ext.toLowerCase()) {\n        case 'hwp':\n          deco.backgroundColor = '#2ebcee';\n          break;\n\n        case 'pdf':\n          deco.backgroundColor = '#ef4037';\n          break;\n\n        case 'docx':\n          deco.backgroundColor = '#295498';\n          break;\n\n        case 'pptx':\n          deco.backgroundColor = '#d14425';\n          break;\n\n        case 'xlsx':\n          deco.backgroundColor = '#207245';\n          break;\n      }\n\n      return deco;\n    },\n    isImage: function isImage(ext) {\n      var isImg = false;\n      var imgExt = ['jpg', 'jpeg', 'png', 'bmp', 'gif', 'tiff', 'tif'];\n      ext = ext.toLowerCase();\n      if (imgExt.indexOf(ext) > -1) isImg = true;\n      return isImg;\n    },\n    thumbStyle: function thumbStyle(img) {\n      var deco = {\n        backgroundImage: \"url(\".concat(img, \")\"),\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      };\n      return deco;\n    },\n    onFileChange: function onFileChange(e) {\n      var _this = this;\n\n      this.file = e.target.files[0];\n      if (this.file === undefined) return;\n      this.uploadReady = false;\n      this.$nextTick(function () {\n        _this.uploadReady = true;\n      }); //10MB 또는 파일 maxLength개 까지만 업로드 가능\n\n      var totalSize = 0;\n\n      for (var i = 0; i < this.files.length; i++) {\n        totalSize += this.files[i].size;\n      }\n\n      if (totalSize + this.file.size > 1024 * 1024 * 10 || this.files.length + 1 > this.maxLength) {\n        this.toast(\"\\uCD5C\\uB300 10MB, \".concat(this.maxLength, \"\\uAC1C \\uD30C\\uC77C\\uAE4C\\uC9C0\\uB9CC \\uC5C5\\uB85C\\uB4DC \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"));\n        return;\n      }\n\n      if (find(this.files, 'name', this.file.name) !== undefined) {\n        this.toast('이미 업로드 된 파일입니다.');\n        return;\n      }\n\n      var reader = new FileReader();\n      reader.readAsDataURL(this.file);\n\n      reader.onload = function (f) {\n        var file = _this.file.name.split('.');\n\n        var ext = file[file.length - 1];\n\n        _this.files.push({\n          name: _this.file.name,\n          file: f.srcElement.result,\n          size: _this.file.size,\n          extension: ext\n        });\n      };\n    }\n  }\n};",{"version":3,"sources":["CInputFileUploader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n\r\n    <!-- 추가된 첨부파일 -->\r\n    <div\r\n      v-for=\"(file, idx) in files\"\r\n      :key=\"`file-${idx}`\"\r\n      class=\"file-list\">\r\n      <!-- 썸네일 -->\r\n      <div>\r\n        <!-- 이미지 -->\r\n        <a\r\n          target=\"_blank\"\r\n          :href=\"file.file\">\r\n          <div\r\n            v-if=\"isImage(file.extension)\"\r\n            class=\"thumb\"\r\n            :style=\"thumbStyle(file.file)\"></div>\r\n          <!-- 이미지 아닐 땐 파일 확장자명 표시 -->\r\n          <div v-else\r\n               :style=\"extColor(file.extension)\"\r\n               class=\"thumb ext\">{{ upper(file.extension) }}</div>\r\n        </a>\r\n      </div>\r\n      <div class=\"file-name\">{{ file.name }}</div>\r\n      <div class=\"trash\" @click=\"onDelete(idx)\">\r\n        <i class=\"material-icons\">delete</i>\r\n      </div>\r\n    </div>\r\n    <!-- 첨부파일 추가하기 -->\r\n    <div v-if=\"maxLength > files.length\">\r\n      <input class=\"file-input\"\r\n             v-if=\"uploadReady\"\r\n             :accept=\"acceptExt\"\r\n             @click.stop\r\n             :id=\"uid\"\r\n             @change=\"onFileChange\"\r\n             type=\"file\">\r\n\r\n      <label :for=\"uid\"\r\n             @click.stop\r\n             class=\"file-list\">\r\n        <div class=\"file-attachment-text\">+ 첨부파일 추가</div>\r\n        <div class=\"file-attachment\" :style=\"brandBgColor.brand\">\r\n          <i class=\"material-icons\" :style=\"brandColor.white\">attachment</i>\r\n        </div>\r\n      </label>\r\n    </div>\r\n    <div class=\"file-desc\">{{ description }}</div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import moment from 'moment'\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n\r\n  export default {\r\n    name: 'c-input-fileUploader',\r\n\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    props: {\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      }\r\n    },\r\n\r\n    created() {\r\n      this.uid = moment().format('SSSS');\r\n      /*if(this.description!==undefined)\r\n        this.description = this.description;\r\n      if(this.acceptExt !== undefined)\r\n        this.acceptExt = this.acceptExt;\r\n      if(this.maxLength !== undefined)\r\n        this.maxLength = this.maxLength;*/\r\n      if(this.value)\r\n        this.files = this.value;\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        uid: '',\r\n        maxLength: 5,\r\n        acceptExt: 'image/gif, image/jpeg, image/png, .docx, .pptx, .xlsx, .hwp, .pdf',\r\n        description: '첨부파일은 최대 5개, 10MB 까지 등록 가능합니다.\\n' +\r\n        '파일형식은 이미지(jpg, gif, png), 오피스 문서(hwp, pdf, pptx, docx, xlsx)만 가능합니다.',\r\n        file: undefined,\r\n        uploadReady: true,        // 초기화 용\r\n        files: []\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      files(n) {\r\n        if(n) this.$emit('update:value', this.files);\r\n      },\r\n      value(n) {\r\n        this.files = n;\r\n      }\r\n    },\r\n\r\n    computed: {\r\n    },\r\n\r\n    methods: {\r\n      onDelete(idx) {\r\n        this.files.remove(idx);\r\n      },\r\n\r\n      upper(ext) {\r\n        return ext.toUpperCase();\r\n      },\r\n\r\n      extColor(ext) {\r\n        let deco = { backgroundColor : '' };\r\n        switch(ext.toLowerCase()) {\r\n          case 'hwp':\r\n            deco.backgroundColor = '#2ebcee';\r\n            break;\r\n          case 'pdf':\r\n            deco.backgroundColor = '#ef4037';\r\n            break;\r\n          case 'docx':\r\n            deco.backgroundColor = '#295498';\r\n            break;\r\n          case 'pptx':\r\n            deco.backgroundColor = '#d14425';\r\n            break;\r\n          case 'xlsx':\r\n            deco.backgroundColor = '#207245';\r\n            break;\r\n        }\r\n\r\n        return deco;\r\n      },\r\n\r\n      isImage(ext) {\r\n        let isImg = false;\r\n        let imgExt = ['jpg', 'jpeg', 'png', 'bmp', 'gif', 'tiff', 'tif'];\r\n        ext = ext.toLowerCase();\r\n        if(imgExt.indexOf(ext)>-1)\r\n          isImg = true;\r\n\r\n        return isImg;\r\n      },\r\n      thumbStyle(img) {\r\n        let deco = {\r\n          backgroundImage: `url(${img})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center'\r\n        };\r\n\r\n        return deco;\r\n      },\r\n      onFileChange(e) {\r\n        this.file = e.target.files[0];\r\n        if(this.file === undefined) return;\r\n\r\n        this.uploadReady = false;\r\n        this.$nextTick(() => { this.uploadReady = true; });\r\n\r\n        //10MB 또는 파일 maxLength개 까지만 업로드 가능\r\n        let totalSize = 0;\r\n        for(let i=0; i< this.files.length; i++)\r\n          totalSize += this.files[i].size;\r\n\r\n        if((totalSize + this.file.size ) > 1024*1024*10 || this.files.length + 1 > this.maxLength) {\r\n          this.toast(`최대 10MB, ${this.maxLength}개 파일까지만 업로드 가능합니다.`);\r\n          return;\r\n        }\r\n\r\n        if(find(this.files, 'name', this.file.name) !== undefined) {\r\n          this.toast('이미 업로드 된 파일입니다.');\r\n          return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(this.file);\r\n        reader.onload = (f) => {\r\n          let file = this.file.name.split('.');\r\n          let ext = file[file.length-1];\r\n          this.files.push({\r\n            name : this.file.name,\r\n            file : f.srcElement.result,\r\n            size: this.file.size,\r\n            extension: ext\r\n          });\r\n        };\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .file-list\r\n    border 1px solid #eeeeee\r\n    background-color #ffffff\r\n    display flex\r\n    justify-content space-between\r\n    width 100%\r\n    height 46px\r\n    margin-top 8px\r\n\r\n  .thumb\r\n  .file-attachment\r\n    width 44px\r\n    height 44px\r\n\r\n  .ext\r\n    text-align center\r\n    color white\r\n    background-color #064160\r\n    line-height 44px\r\n    font-size 0.7rem\r\n    font-weight 100\r\n\r\n  .file-attachment-text\r\n    padding-left 12px\r\n    line-height 46px\r\n    font-size 0.9rem\r\n    color rgba(162, 174, 186, 1)\r\n\r\n  .file-attachment\r\n    text-align center\r\n\r\n  .file-attachment i\r\n    line-height 46px\r\n    font-size 1.6rem\r\n\r\n  .file-desc\r\n    font-size 0.7rem\r\n    color rgba(162, 174, 186, 1)\r\n    white-space pre-line\r\n    padding 8px 0\r\n\r\n  .file-name\r\n    padding 0 20px\r\n    color #303841\r\n    font-size 0.8rem\r\n    text-overflow ellipsis\r\n    overflow hidden\r\n    white-space pre\r\n    line-height 44px\r\n    text-align left\r\n    flex 1\r\n\r\n  .file-input\r\n    width 0\r\n    height 0\r\n    position fixed\r\n    top -100px\r\n    left -100px\r\n\r\n  .trash\r\n    width 44px\r\n    height 44px\r\n    text-align center\r\n\r\n  .trash i\r\n    line-height 44px\r\n    color rgba(162, 174, 186, 1)\r\n    font-size 1.4rem\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}