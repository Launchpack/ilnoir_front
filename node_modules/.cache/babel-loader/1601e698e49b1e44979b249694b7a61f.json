{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/eslint-loader/index.js??ref--13-0!/Users/mard/dev/grit12/src/components/Mixins/CardMixin.js","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Mixins/CardMixin.js","mtime":1605259991000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  components: {},\n  mixins: [],\n  props: {\n    card: {\n      type: Object,\n      required: false\n    },\n    last: {\n      type: Boolean,\n      default: false\n    },\n    first: {\n      type: Boolean,\n      default: false\n    },\n    gutter: {\n      type: Number,\n      required: false\n    }\n  },\n  methods: {\n    lineClamp: function lineClamp(line, lineHeight) {\n      return {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        lineHeight: lineHeight + 'px',\n        maxHeight: \"\".concat(lineHeight * line, \"px\")\n      };\n    }\n  },\n  computed: {\n    layout_gutter: function layout_gutter() {\n      if (this.gutter) return this.gutter;else return this.$store.getters.brand.layout_gutters;\n    },\n    cardStyle: function cardStyle() {\n      var style = {};\n\n      if (this.first) {\n        style.paddingRight = this.layout_gutter * 2 / 3 + 'px';\n      } else if (this.last) {\n        style.paddingLeft = this.layout_gutter * 2 / 3 + 'px';\n      } else {\n        var padding = this.layout_gutter / 3 + 'px';\n        style.paddingLeft = padding;\n        style.paddingRight = padding;\n      }\n\n      return style;\n    },\n    dividerStyle: function dividerStyle() {\n      var deco = {\n        padding: this.layout_gutter + 'px' //paddingBottom: this.layout_gutter + 'px',\n\n      };\n\n      if (!this.last) {\n        deco.borderBottom = '1px solid ' + this.getColor('기본 테두리선 색상');\n      }\n\n      return deco;\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["/Users/mard/dev/grit12/src/components/Mixins/CardMixin.js"],"names":["components","mixins","props","card","type","Object","required","last","Boolean","default","first","gutter","Number","methods","lineClamp","line","lineHeight","overflow","textOverflow","maxHeight","computed","layout_gutter","$store","getters","brand","layout_gutters","cardStyle","style","paddingRight","paddingLeft","padding","dividerStyle","deco","borderBottom","getColor","watch"],"mappings":";AACA,eAAe;AACXA,EAAAA,UAAU,EAAE,EADD;AAIXC,EAAAA,MAAM,EAAE,EAJG;AAOXC,EAAAA,KAAK,EAAE;AACTC,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,QAAQ,EAAE;AAFL,KADG;AAKTC,IAAAA,IAAI,EAAE;AACLH,MAAAA,IAAI,EAAEI,OADD;AAELC,MAAAA,OAAO,EAAE;AAFJ,KALG;AASTC,IAAAA,KAAK,EAAE;AACNN,MAAAA,IAAI,EAAEI,OADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KATE;AAaTE,IAAAA,MAAM,EAAE;AACPP,MAAAA,IAAI,EAAEQ,MADC;AAEPN,MAAAA,QAAQ,EAAE;AAFH;AAbC,GAPI;AA4BXO,EAAAA,OAAO,EAAE;AACLC,IAAAA,SADK,qBACKC,IADL,EACWC,UADX,EACyB;AAClC,aAAO;AACLC,QAAAA,QAAQ,EAAE,QADL;AAELC,QAAAA,YAAY,EAAE,UAFT;AAGLF,QAAAA,UAAU,EAAEA,UAAU,GAAC,IAHlB;AAILG,QAAAA,SAAS,YAAKH,UAAU,GAACD,IAAhB;AAJJ,OAAP;AAMD;AARU,GA5BE;AAsCXK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aADM,2BACU;AACpB,UAAG,KAAKV,MAAR,EACE,OAAO,KAAKA,MAAZ,CADF,KAGE,OAAO,KAAKW,MAAL,CAAYC,OAAZ,CAAoBC,KAApB,CAA0BC,cAAjC;AACH,KANW;AAOZC,IAAAA,SAPY,uBAOA;AACV,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAG,KAAKjB,KAAR,EAAe;AACbiB,QAAAA,KAAK,CAACC,YAAN,GAAsB,KAAKP,aAAL,GAAqB,CAArB,GAAuB,CAAxB,GAA6B,IAAlD;AACD,OAFD,MAGK,IAAG,KAAKd,IAAR,EAAc;AACjBoB,QAAAA,KAAK,CAACE,WAAN,GAAqB,KAAKR,aAAL,GAAqB,CAArB,GAAuB,CAAxB,GAA6B,IAAjD;AACD,OAFI,MAGA;AACH,YAAIS,OAAO,GAAI,KAAKT,aAAL,GAAqB,CAAtB,GAA2B,IAAzC;AACAM,QAAAA,KAAK,CAACE,WAAN,GAAoBC,OAApB;AACAH,QAAAA,KAAK,CAACC,YAAN,GAAqBE,OAArB;AACD;;AAED,aAAOH,KAAP;AACD,KAvBW;AAwBZI,IAAAA,YAxBY,0BAwBG;AACb,UAAIC,IAAI,GAAG;AACTF,QAAAA,OAAO,EAAE,KAAKT,aAAL,GAAqB,IADrB,CAET;;AAFS,OAAX;;AAKA,UAAG,CAAC,KAAKd,IAAT,EAAe;AACbyB,QAAAA,IAAI,CAACC,YAAL,GAAoB,eAAe,KAAKC,QAAL,CAAc,YAAd,CAAnC;AACD;;AACD,aAAOF,IAAP;AACD;AAlCW,GAtCC;AA0EXG,EAAAA,KAAK,EAAE;AA1EI,CAAf","sourcesContent":["\r\nexport default {\r\n    components: {\r\n\r\n    },\r\n    mixins: [\r\n\r\n    ],\r\n    props: {\r\n\t\tcard: {\r\n\t\t\ttype: Object,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\tlast: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tfirst: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t\tgutter: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\r\n    },\r\n    \r\n    \r\n    methods: {\r\n        lineClamp(line, lineHeight, ) {\r\n\t\t  return {\r\n\t\t    overflow: 'hidden',\r\n\t\t    textOverflow: 'ellipsis',\r\n\t\t    lineHeight: lineHeight+'px',\r\n\t\t    maxHeight: `${lineHeight*line}px`\r\n\t\t  }\r\n\t\t}\r\n    },\r\n    computed: {\r\n        layout_gutter() {\r\n\t\t  if(this.gutter)\r\n\t\t    return this.gutter;\r\n\t\t  else\r\n\t\t    return this.$store.getters.brand.layout_gutters;\r\n\t\t},\r\n\t\tcardStyle() {\r\n\t\t  let style = {};\r\n\t\t\r\n\t\t  if(this.first) {\r\n\t\t    style.paddingRight = (this.layout_gutter * 2/3) + 'px';\r\n\t\t  }\r\n\t\t  else if(this.last) {\r\n\t\t    style.paddingLeft = (this.layout_gutter * 2/3) + 'px';\r\n\t\t  }\r\n\t\t  else {\r\n\t\t    let padding = (this.layout_gutter / 3) + 'px';\r\n\t\t    style.paddingLeft = padding;\r\n\t\t    style.paddingRight = padding;\r\n\t\t  }\r\n\t\t\r\n\t\t  return style;\r\n\t\t},\r\n\t\tdividerStyle() {\r\n\t\t  let deco = {\r\n\t\t    padding: this.layout_gutter + 'px',\r\n\t\t    //paddingBottom: this.layout_gutter + 'px',\r\n\t\t  }\r\n\t\t\r\n\t\t  if(!this.last) {\r\n\t\t    deco.borderBottom = '1px solid ' + this.getColor('기본 테두리선 색상');\r\n\t\t  }\r\n\t\t  return deco;\r\n\t\t}\r\n    },\r\n    watch: {\r\n        \r\n    }\r\n}\r\n"]}]}