{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Common/TimePicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Common/TimePicker.vue","mtime":1605259985000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"TimePicker\",\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    width: {\n      type: String,\n      default: \"\"\n    },\n    placeholder: {\n      type: String,\n      default: \"시간 선택\"\n    },\n    value: {\n      type: String\n    },\n    // 시간 단위\n    unit: {\n      type: Number,\n      default: 5\n    },\n    // 시간 범위 - 시작\n    start: {\n      type: Object,\n      default: function _default() {\n        return {\n          hour: 0,\n          min: 0\n        };\n      }\n    },\n    // 시간 범위 - 종료\n    end: {\n      type: Object,\n      default: function _default() {\n        return {\n          hour: 23,\n          min: 59\n        };\n      }\n    },\n    // 선택 불가능 시간 범위 기능 사용하기\n    usingRange: {\n      type: Boolean,\n      default: false\n    },\n    // 선택 불가능 시간 범위\n    disableRange: {\n      type: Object,\n      default: function _default() {\n        return {\n          start: {\n            hour: 13,\n            min: 0\n          },\n          end: {\n            hour: 14,\n            min: 0\n          }\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      vSelect: false,\n      hours: [],\n      minutes: [],\n      selectedTime: {\n        hour: -1,\n        min: -1\n      }\n    };\n  },\n  computed: {\n    containerStyle: function containerStyle() {\n      var deco = {};\n\n      if (this.width !== \"\") {\n        deco.width = this.width + \"px\";\n      }\n\n      if (this.disabled) {\n        deco.backgroundColor = \"#eeeeee\";\n        deco.color = \"#d2d2d2\";\n      }\n\n      return deco;\n    },\n    iconStyle: function iconStyle() {\n      return this.disabled ? {\n        color: \"#d2d2d2\"\n      } : {\n        color: \"#9b9b9b\"\n      };\n    },\n    timeValue: function timeValue() {\n      return this.selectedTime.hour === -1 || this.selectedTime.min === -1 ? this.placeholder : \"%02d:%02d\".format(this.selectedTime.hour, this.selectedTime.min);\n    }\n  },\n  created: function created() {\n    this.initHour();\n  },\n  methods: {\n    clickContainer: function clickContainer() {\n      if (!this.disabled) this.vSelect = true;\n    },\n    initHour: function initHour() {\n      this.hours = [];\n\n      for (var i = this.start.hour; i <= this.end.hour; i++) {\n        this.hours.push(i);\n      }\n\n      if (this.value && this.value !== \"\") {\n        var value = this.value.split(\":\");\n        this.clickHour(parseInt(value[0]));\n        this.selectedTime = {\n          hour: parseInt(value[0]),\n          min: parseInt(value[1])\n        };\n      }\n    },\n    clickHour: function clickHour(hour) {\n      this.selectedTime.hour = hour;\n      this.selectedTime.min = -1; //this.$emit('update:value', '');\n\n      this.minutes = [];\n\n      for (var i = 0; i < 60 / this.unit; i++) {\n        var min = i * this.unit;\n        var disabled = false;\n\n        if ( // 시작시간\n        this.start.hour === hour && min < this.start.min || // 종료시간\n        this.end.hour === hour && min > this.end.min || // 불가능한 시간대 - 시작시간\n        this.usingRange && this.disableRange.start.hour === hour && min >= this.disableRange.start.min || // 불가능한 시간대 - 종료시간\n        this.usingRange && this.disableRange.end.hour === hour && min <= this.disableRange.end.min) {\n          disabled = true;\n        }\n\n        this.minutes.push({\n          min: min,\n          disabled: disabled\n        });\n      }\n    },\n    clickMinute: function clickMinute(minute) {\n      if (minute.disabled) return;\n      this.selectedTime.min = minute.min;\n      this.$emit(\"update:value\", \"%02d:%02d\".format(this.selectedTime.hour, this.selectedTime.min));\n      this.vSelect = false;\n    }\n  },\n  watch: {\n    start: function start() {\n      this.initHour();\n    },\n    value: function value(n) {\n      if (!n) {\n        this.selectedTime = {\n          hour: -1,\n          min: -1\n        };\n      }\n\n      if (n.indexOf(\":\") > -1) {\n        var time = n.split(\":\");\n        var hour = parseInt(time[0]);\n        var min = parseInt(time[1]);\n\n        if (hour !== this.selectedTime.hour || min !== this.selectedTime.min) {\n          this.selectedTime = {\n            hour: hour,\n            min: min\n          };\n        }\n      } else {\n        if (this.selectedTime.hour !== -1 && this.selectedTime.min !== -1) {\n          this.selectedTime = {\n            hour: -1,\n            min: -1\n          };\n        }\n      }\n    },\n    vSelect: function vSelect(n) {\n      var _this = this;\n\n      if (n) {\n        // 목록 열릴 때, body에 스크롤 숨김처리\n        document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"overflow-y:hidden !important\"); // 선택되어있는 hour, min 위치로 이동\n\n        if (this.selectedTime.hour > -1) {\n          this.$nextTick(function () {\n            for (var i = 0; i < _this.hours.length; i++) {\n              if (_this.hours[i] === _this.selectedTime.hour) {\n                document.getElementById(\"hour-list\").scrollTop = 30 * i;\n                break;\n              }\n            }\n\n            if (_this.selectedTime.min > -1) {\n              for (var _i = 0; _i < _this.minutes.length; _i++) {\n                if (_this.minutes[_i].min === _this.selectedTime.min) {\n                  document.getElementById(\"min-list\").scrollTop = 30 * _i;\n                  break;\n                }\n              }\n            }\n          });\n        }\n      } else {\n        // 목록 닫힐 때, body에 스크롤 처리\n        document.getElementsByTagName(\"body\")[0].setAttribute(\"style\", \"overflow-y:scroll !important\");\n\n        if (this.selectedTime.min === -1) {\n          this.$emit(\"update:value\", \"\");\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["TimePicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"time-picker-container\" :style=\"containerStyle\" @click=\"clickContainer\">\r\n    <div>{{ timeValue }}</div>\r\n    <div class=\"lp-outsider-layout\" v-if=\"vSelect\" @click.stop.prevent=\"vSelect=false\"></div>\r\n    <i class=\"material-icons icon-alarm\" :style=\"iconStyle\">alarm</i>\r\n\r\n    <!-- 시작 선택 -->\r\n    <div class=\"time-picker-select\" v-if=\"vSelect\" @click.stop.prevent>\r\n      <div class=\"time-list\" id=\"hour-list\">\r\n        <div\r\n          v-for=\"hour in hours\"\r\n          :key=\"'hour-'+hour\"\r\n          :class=\"{'selected': hour === selectedTime.hour}\"\r\n          class=\"item unselect\"\r\n          @click=\"clickHour(hour)\"\r\n        >{{ '%02d'.format(hour) }}</div>\r\n      </div>\r\n      <div class=\"time-list\" id=\"min-list\">\r\n        <div\r\n          v-for=\"minute in minutes\"\r\n          :key=\"'minute-'+minute.min\"\r\n          :class=\"{'disabled' : minute.disabled, 'selected': (minute === selectedTime.min || minute.min === selectedTime.min)}\"\r\n          class=\"item unselect\"\r\n          @click=\"clickMinute(minute)\"\r\n        >{{ '%02d'.format(minute.min) }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TimePicker\",\r\n  props: {\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: \"시간 선택\"\r\n    },\r\n    value: {\r\n      type: String\r\n    },\r\n    // 시간 단위\r\n    unit: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    // 시간 범위 - 시작\r\n    start: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          hour: 0,\r\n          min: 0\r\n        };\r\n      }\r\n    },\r\n    // 시간 범위 - 종료\r\n    end: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          hour: 23,\r\n          min: 59\r\n        };\r\n      }\r\n    },\r\n    // 선택 불가능 시간 범위 기능 사용하기\r\n    usingRange: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 선택 불가능 시간 범위\r\n    disableRange: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          start: {\r\n            hour: 13,\r\n            min: 0\r\n          },\r\n          end: {\r\n            hour: 14,\r\n            min: 0\r\n          }\r\n        };\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      vSelect: false,\r\n      hours: [],\r\n      minutes: [],\r\n      selectedTime: {\r\n        hour: -1,\r\n        min: -1\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    containerStyle() {\r\n      let deco = {};\r\n\r\n      if (this.width !== \"\") {\r\n        deco.width = this.width + \"px\";\r\n      }\r\n      if (this.disabled) {\r\n        deco.backgroundColor = \"#eeeeee\";\r\n        deco.color = \"#d2d2d2\";\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    iconStyle() {\r\n      return this.disabled ? { color: \"#d2d2d2\" } : { color: \"#9b9b9b\" };\r\n    },\r\n    timeValue() {\r\n      return this.selectedTime.hour === -1 || this.selectedTime.min === -1\r\n        ? this.placeholder\r\n        : \"%02d:%02d\".format(this.selectedTime.hour, this.selectedTime.min);\r\n    }\r\n  },\r\n  created() {\r\n    this.initHour();\r\n  },\r\n  methods: {\r\n    clickContainer() {\r\n      if (!this.disabled) this.vSelect = true;\r\n    },\r\n    initHour() {\r\n      this.hours = [];\r\n      for (let i = this.start.hour; i <= this.end.hour; i++) {\r\n        this.hours.push(i);\r\n      }\r\n      if (this.value && this.value !== \"\") {\r\n        let value = this.value.split(\":\");\r\n        this.clickHour(parseInt(value[0]));\r\n        this.selectedTime = {\r\n          hour: parseInt(value[0]),\r\n          min: parseInt(value[1])\r\n        };\r\n      }\r\n    },\r\n    clickHour(hour) {\r\n      this.selectedTime.hour = hour;\r\n      this.selectedTime.min = -1;\r\n      //this.$emit('update:value', '');\r\n\r\n      this.minutes = [];\r\n      for (let i = 0; i < 60 / this.unit; i++) {\r\n        let min = i * this.unit;\r\n        let disabled = false;\r\n\r\n        if (\r\n          // 시작시간\r\n          (this.start.hour === hour && min < this.start.min) ||\r\n          // 종료시간\r\n          (this.end.hour === hour && min > this.end.min) ||\r\n          // 불가능한 시간대 - 시작시간\r\n          (this.usingRange &&\r\n            this.disableRange.start.hour === hour &&\r\n            min >= this.disableRange.start.min) ||\r\n          // 불가능한 시간대 - 종료시간\r\n          (this.usingRange &&\r\n            this.disableRange.end.hour === hour &&\r\n            min <= this.disableRange.end.min)\r\n        ) {\r\n          disabled = true;\r\n        }\r\n\r\n        this.minutes.push({\r\n          min: min,\r\n          disabled: disabled\r\n        });\r\n      }\r\n    },\r\n    clickMinute(minute) {\r\n      if (minute.disabled) return;\r\n      this.selectedTime.min = minute.min;\r\n      this.$emit(\r\n        \"update:value\",\r\n        \"%02d:%02d\".format(this.selectedTime.hour, this.selectedTime.min)\r\n      );\r\n      this.vSelect = false;\r\n    }\r\n  },\r\n  watch: {\r\n    start() {\r\n      this.initHour();\r\n    },\r\n    value(n) {\r\n      if (!n) {\r\n        this.selectedTime = {\r\n          hour: -1,\r\n          min: -1\r\n        };\r\n      }\r\n      if (n.indexOf(\":\") > -1) {\r\n        let time = n.split(\":\");\r\n        let hour = parseInt(time[0]);\r\n        let min = parseInt(time[1]);\r\n        if (hour !== this.selectedTime.hour || min !== this.selectedTime.min) {\r\n          this.selectedTime = {\r\n            hour: hour,\r\n            min: min\r\n          };\r\n        }\r\n      } else {\r\n        if (this.selectedTime.hour !== -1 && this.selectedTime.min !== -1) {\r\n          this.selectedTime = {\r\n            hour: -1,\r\n            min: -1\r\n          };\r\n        }\r\n      }\r\n    },\r\n    vSelect(n) {\r\n      if (n) {\r\n        // 목록 열릴 때, body에 스크롤 숨김처리\r\n        document\r\n          .getElementsByTagName(\"body\")[0]\r\n          .setAttribute(\"style\", \"overflow-y:hidden !important\");\r\n\r\n        // 선택되어있는 hour, min 위치로 이동\r\n        if (this.selectedTime.hour > -1) {\r\n          this.$nextTick(() => {\r\n            for (let i = 0; i < this.hours.length; i++) {\r\n              if (this.hours[i] === this.selectedTime.hour) {\r\n                document.getElementById(\"hour-list\").scrollTop = 30 * i;\r\n                break;\r\n              }\r\n            }\r\n            if (this.selectedTime.min > -1) {\r\n              for (let i = 0; i < this.minutes.length; i++) {\r\n                if (this.minutes[i].min === this.selectedTime.min) {\r\n                  document.getElementById(\"min-list\").scrollTop = 30 * i;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        // 목록 닫힐 때, body에 스크롤 처리\r\n        document\r\n          .getElementsByTagName(\"body\")[0]\r\n          .setAttribute(\"style\", \"overflow-y:scroll !important\");\r\n        if (this.selectedTime.min === -1) {\r\n          this.$emit(\"update:value\", \"\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n@import '~assets/css/lp_main';\r\n\r\n.time-picker-container {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\r\n  border-radius: 8px;\r\n  border: 1px solid #dfdfdf;\r\n  padding-left: 8px !important;\r\n  background: white;\r\n  color: #9b9b9b;\r\n  min-width: 99px;\r\n  min-height: 32px;\r\n}\r\n\r\n.icon-alarm {\r\n  // position: absolute;\r\n  // top: 5px;\r\n  // right: 4px;\r\n  margin-right: 7px;\r\n  // color: #989898;\r\n  font-size: 18px;\r\n}\r\n\r\n.time-picker-select {\r\n  position: absolute;\r\n  top: 29px;\r\n  left: 0;\r\n  background: white;\r\n  z-index: 1000;\r\n  border: 1px solid #ddd;\r\n  width: 200px;\r\n  display: flex;\r\n}\r\n\r\n.item {\r\n  text-align: center;\r\n  padding: 4px;\r\n  height: 30px;\r\n  color: #707070;\r\n}\r\n\r\n.item:hover, .selected {\r\n  background-color: $primary;\r\n  color: white;\r\n}\r\n\r\n.time-list {\r\n  overflow-y: scroll;\r\n  height: 240px;\r\n  width: 50%;\r\n}\r\n\r\n.disabled {\r\n  color: #d8d8d8;\r\n}\r\n\r\n.lp-outsider-layout {\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Common"}]}