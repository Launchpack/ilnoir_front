{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Slot/Gnb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Slot/Gnb.vue","mtime":1605259990000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mard/dev/ilnoir/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { dragscroll } from 'vue-dragscroll';\nimport MenuMixin from \"@/components/Mixins/MenuMixin\";\nexport default {\n  name: \"Gnb\",\n  directives: {\n    dragscroll: dragscroll\n  },\n  mixins: [MenuMixin],\n  props: {\n    // 선택된 탭 id\n    // qeury와 같이 number로 판단하고 싶을때 number로 치환시켜 보내주어야 한다\n    initialTab: {\n      type: [String, Number],\n      required: false\n    },\n    selectedItemStyle: {\n      type: Object,\n      required: false\n    },\n    wrapStyle: {\n      type: Object,\n      required: false\n    },\n    customItemStyle: {\n      type: Object,\n      required: false\n    },\n    indicatorStyle: {\n      type: Object,\n      required: false\n    },\n    scrollable: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  data: function data() {\n    return {\n      selectedTab: 0,\n      selectedChildTab: undefined,\n      selectedChildTabTwo: undefined,\n      dragging: false,\n      scrollArray: [],\n      scrollArrayTwo: [],\n      scrollArrayThree: [],\n      selectedIndex: undefined,\n      selectedTwoIndex: undefined,\n      selectedThreeIndex: undefined,\n      childListOne: [],\n      childListTwo: [],\n      menu: undefined\n    };\n  },\n  computed: {\n    childStateOne: function childStateOne() {\n      var menu = this.computedMenu[0];\n\n      if (menu && menu.child && menu.child.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    childStateTwo: function childStateTwo() {\n      var menu = this.computedChildMenu ? this.computedChildMenu[0] : [];\n\n      if (menu && menu.child && menu.child.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    grabStyle: function grabStyle() {\n      if (this.wrapStyle) return this.wrapStyle;else {\n        return {\n          borderBottom: this.brandBorder.main.border\n        };\n      }\n    },\n    computedChildMenu: function computedChildMenu() {\n      var _this = this;\n\n      var result = [];\n\n      if (this.childStateOne && this.childListOne.length > 0) {\n        this.childListOne.forEach(function (item) {\n          if (item.id === _this.selectedChildTab) {\n            result.push(item);\n          }\n        });\n        return result;\n      }\n    },\n    computedMenu: function computedMenu() {\n      var _this2 = this;\n\n      var result = [];\n      this.menu.forEach(function (item) {\n        if (item.id === _this2.selectedTab) result.push(item);\n      });\n      return result;\n    },\n    divider1Style: function divider1Style() {\n      var deco = {\n        backgroundColor: this.getColor('기본 테두리선 색상'),\n        width: '100%',\n        height: '1px'\n      };\n      if (this.dividerStyle !== undefined) deco = this.dividerStyle;\n      return deco;\n    },\n    tabListStyle: function tabListStyle() {\n      var deco = {};\n\n      if (this.scrollable) {\n        deco = {\n          overflowX: 'scroll',\n          flexWrap: 'nowrap',\n          display: '-webkit-box'\n        };\n      }\n\n      return deco;\n    },\n    isIE: function isIE() {\n      if (navigator.userAgent.indexOf('Trident') > -1) return true;else return false;\n    }\n  },\n  watch: {\n    /* selectedTab(n) {\n      if(!find(this.menu, 'id', n)) {\n        this.clickTab(this.menu[0], 0);\n        return;\n      } else {\n        this.$emit('select', n);\n      }\n      if(this.$route.path.indexOf('home')===-1) {\n        let query = cloneItem(this.$route.query);\n        query.tab = n;\n        this.$route.meta.clickPush = true;\n        this.$router.replace({\n          path: this.$route.path,\n          query: query\n        });\n      }\n    }  */\n    // '$route.query.gnb'(n) {\n    //   setTimeout(() => {\n    //     let one = find(this.menu, 'id', n);\n    //     let two = find(this.childListOne, 'id', n);\n    //     let three = find(this.childListTwo, 'id', n);\n    //     if(one) {\n    //       this.clickTab(one, one.index);\n    //     }\n    // if(two) {\n    // }\n    // if(three) {\n    // }\n    //   },300)\n    // },\n    selectedChildTabTwo: function selectedChildTabTwo(n) {\n      if (this.childListTwo && this.childListTwo.length > 0) {\n        // if(!find(this.childListTwo, 'id', n)) {\n        //   this.clickTab(this.childListTwo[0], 0);\n        //   return;\n        // } else {\n        //   this.$emit('selectedGnb', n);\n        // }\n        if (this.$route.path.indexOf('home') === -1 && n) {\n          var query = cloneItem(this.$route.query);\n          query.gnb = n;\n          this.$route.meta.clickPush = true;\n          this.$router.replace({\n            path: this.$route.path,\n            query: query\n          });\n        }\n      }\n    }\n  },\n  methods: {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var i, j, k;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setMenus('gnb', 'mobile');\n\n              case 2:\n                this.menu = _context.sent;\n\n                if (this.initialTab !== undefined) {\n                  if (typeof this.initialTab === 'number') {\n                    this.selectedTab = parseInt(this.initialTab);\n                  } else if (typeof this.initialTab === 'string') {\n                    this.selectedTab = this.initialTab;\n                  }\n                }\n\n                if (this.$route.query.gnb && this.menu && this.menu.length > 0) {\n                  for (i = 0; i < this.menu.length; i++) {\n                    if (this.menu[i].id === Number(this.$route.query.gnb)) {\n                      this.clickTab(this.menu[i], i, true);\n                      if (this.menu[i].child && this.menu[i].child.length > 0) this.clickTabOne(this.menu[i].child[0], 0);\n                    } else {\n                      if (this.menu[i].child && this.menu[i].child.length > 0) {\n                        for (j = 0; j < this.menu[i].child.length; j++) {\n                          if (this.menu[i].child[j].id === Number(this.$route.query.gnb)) {\n                            this.clickTab(this.menu[i], i, true);\n                            this.clickTabOne(this.menu[i].child[j], j);\n                          } else {\n                            if (this.menu[i].child[j].child && this.menu[i].child[j].child.length > 0) {\n                              for (k = 0; k < this.menu[i].child[j].child.length; k++) {\n                                if (this.menu[i].child[j].child[k].id === Number(this.$route.query.gnb)) {\n                                  this.clickTab(this.menu[i], i, true);\n                                  this.clickTabOne(this.menu[i].child[j], j, true);\n                                  this.clickTabTwo(this.menu[i].child[j].child[k], k);\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  } // this.selectedTab = Number(this.$route.query.gnb);\n                  // this.selectedChildTab = Number(this.$route.query.gnb);\n\n                }\n\n                if (this.isIE) {\n                  setTimeout(function () {\n                    dragscroll.reset();\n                  }, 1000);\n                } // 스크롤 \n\n\n                this.$nextTick(function () {\n                  var totalWidth = 0; // 스크롤아이템 width 저장\n\n                  for (var _i = 0; _i < _this3.menu.length; _i++) {\n                    if (_this3.$refs[\"tabItem\".concat(_i)] && _this3.$refs[\"tabItem\".concat(_i)][0]) {\n                      var width = _this3.$refs[\"tabItem\".concat(_i)][0].offsetWidth;\n\n                      _this3.scrollArray.push({\n                        id: _this3.menu[_i].id,\n                        name: _this3.menu[_i].name,\n                        width: width,\n                        // 본인 너비\n                        accumulatedWidth: totalWidth + width // 본인 누적너비\n\n                      });\n\n                      totalWidth += width; // 총 너비\n                    } // 현재 선택된 탭 index 저장\n\n\n                    if (_this3.menu[_i].id === _this3.selectedTab) {\n                      _this3.selectedIndex = _i;\n                    }\n                  } // 스크롤 중앙 정렬\n\n\n                  _this3.setScroll(_this3.selectedIndex);\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    itemStyle: function itemStyle(id) {\n      var obj = {\n        padding: '13px 16px'\n      };\n\n      if (id === this.selectedTab) {\n        if (this.selectedItemStyle) {\n          return Object.assign(obj, this.selectedItemStyle);\n        } else {\n          obj.color = this.brandColor.brand.color;\n          obj.borderBottom = \"2px solid \".concat(this.brandColor.brand.color);\n        }\n      }\n\n      if (this.customItemStyle) {\n        return Object.assign(obj, this.customItemStyle);\n      } else {\n        return obj;\n      }\n    },\n    childStyle: function childStyle(id) {\n      var obj = {\n        padding: '13px 16px'\n      };\n\n      if (id === this.selectedChildTab) {\n        if (this.selectedItemStyle) {\n          return Object.assign(obj, this.selectedItemStyle);\n        } else {\n          obj.color = this.brandColor.brand.color;\n          obj.borderBottom = \"2px solid \".concat(this.brandColor.brand.color);\n        }\n      }\n\n      if (this.customItemStyle) {\n        return Object.assign(obj, this.customItemStyle);\n      } else {\n        return obj;\n      }\n    },\n    childTwoStyle: function childTwoStyle(id) {\n      var obj = {\n        padding: '13px 16px'\n      };\n\n      if (id === this.selectedChildTabTwo) {\n        if (this.selectedItemStyle) {\n          return Object.assign(obj, this.selectedItemStyle);\n        } else {\n          obj.color = this.brandColor.brand.color;\n          obj.borderBottom = \"2px solid \".concat(this.brandColor.brand.color);\n        }\n      }\n\n      if (this.customItemStyle) {\n        return Object.assign(obj, this.customItemStyle);\n      } else {\n        return obj;\n      }\n    },\n    clickTab: function clickTab(item, idx, boo) {\n      var _this4 = this;\n\n      this.scrollArrayTwo = [];\n      this.childListOne = []; // 드래그앤드 시 클릭방지\n\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      } else {\n        this.selectedChildTab = undefined;\n        this.selectedChildTabTwo = undefined;\n        if (item.child) this.childListOne = item.child;\n        this.selectedTab = item.id;\n\n        if (this.childListOne.length === 0) {\n          if (this.selectedTab || this.selectedTab === 0) this.$emit('select', this.selectedTab, item);\n        }\n\n        this.dragging = false;\n\n        if (!boo) {\n          if (this.menu && this.menu.length > 0) {\n            // if(!find(this.menu, 'id', n)) {\n            //   this.clickTab(this.menu[0], 0);\n            //   return;\n            // } else {\n            //   this.$emit('selectedGnb', n);\n            // }\n            if (this.$route.path.indexOf('home') === -1) {\n              var query = cloneItem(this.$route.query);\n              if (this.selectedTab === 0) query.gnb = '';else query.gnb = this.selectedTab;\n              if (query.category1) delete query.category1;\n              if (query.category2) delete query.category2;\n              if (query.category3) delete query.category3;\n              this.$route.meta.clickPush = true;\n              this.$router.replace({\n                path: this.$route.path,\n                query: query\n              });\n            }\n\n            if (this.childListOne && this.childListOne.length > 0) this.clickTabOne(this.childListOne[0], 0);\n          }\n        }\n\n        this.$nextTick(function () {\n          if (_this4.childListOne.length > 0) {\n            var totalWidth = 0; // 스크롤아이템 width 저장\n\n            for (var i = 0; i < _this4.childListOne.length; i++) {\n              if (_this4.$refs[\"childItem\".concat(i)] && _this4.$refs[\"childItem\".concat(i)].length > 0) {\n                var width = _this4.$refs[\"childItem\".concat(i)][0].offsetWidth;\n\n                _this4.scrollArrayTwo.push({\n                  id: _this4.childListOne[i].id,\n                  name: _this4.childListOne[i].name,\n                  width: width,\n                  // 본인 너비\n                  accumulatedWidth: totalWidth + width // 본인 누적너비\n\n                });\n\n                totalWidth += width; // 총 너비\n              } // 현재 선택된 탭 index 저장\n              // if (this.childListOne[i].id === this.selectedTab) {\n              //   this.selectedIndex = i;\n              // }\n\n            }\n          }\n        }); // 스크롤 위치\n\n        if (this.scrollable) {\n          this.setScroll(idx, 'one');\n        }\n      }\n    },\n    clickTabOne: function clickTabOne(item, idx, boo) {\n      var _this5 = this;\n\n      this.scrollArrayThree = [];\n      this.childListTwo = []; // 드래그앤드 시 클릭방지\n\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      } else {\n        this.selectedChildTabTwo = item.id;\n        if (item.child) this.childListTwo = item.child;\n        this.selectedChildTab = item.id;\n\n        if (this.childListTwo.length === 0) {\n          this.$emit('select', this.selectedChildTab, item);\n        }\n\n        this.dragging = false;\n\n        if (!boo) {\n          if (this.childListOne && this.childListOne.length > 0) {\n            // if(!find(this.childListOne, 'id', n)) {\n            //   this.clickTab(this.childListOne[0], 0);\n            //   return;\n            // } else {\n            //   this.$emit('selectedGnb', n);\n            // }\n            if (this.$route.path.indexOf('home') === -1) {\n              var query = cloneItem(this.$route.query);\n              query.gnb = this.selectedChildTab;\n              this.$route.meta.clickPush = true;\n              this.$router.replace({\n                path: this.$route.path,\n                query: query\n              });\n            }\n          }\n        }\n\n        if (this.childListTwo) this.clickTabTwo(this.childListTwo[0], 0);\n        this.$nextTick(function () {\n          if (_this5.childListTwo.length > 0) {\n            var totalWidth = 0; // 스크롤아이템 width 저장\n\n            for (var i = 0; i < _this5.childListTwo.length; i++) {\n              if (_this5.$refs[\"childTwoItem\".concat(i)] && _this5.$refs[\"childTwoItem\".concat(i)].length > 0) {\n                var width = _this5.$refs[\"childTwoItem\".concat(i)][0].offsetWidth;\n\n                _this5.scrollArrayThree.push({\n                  id: _this5.childListTwo[i].id,\n                  name: _this5.childListTwo[i].name,\n                  width: width,\n                  // 본인 너비\n                  accumulatedWidth: totalWidth + width // 본인 누적너비\n\n                });\n\n                totalWidth += width; // 총 너비\n              } // 현재 선택된 탭 index 저장\n              // if (this.childListTwo[i].id === this.selectedTab) {\n              //   this.selectedIndex = i;\n              // }\n\n            }\n          }\n        }); // 스크롤 위치\n\n        if (this.scrollable) {\n          this.setScroll(idx, 'two');\n        }\n      }\n    },\n    clickTabTwo: function clickTabTwo(item, idx) {\n      // 드래그앤드 시 클릭방지\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      } else {\n        this.selectedChildTabTwo = item.id;\n        this.$emit('select', this.selectedChildTabTwo, item);\n        this.dragging = false; // 스크롤 위치\n\n        if (this.scrollable) {\n          this.setScroll(idx, 'three');\n        }\n      }\n    },\n    onDrag: function onDrag(e) {\n      // 기종별 감도차이 때문에 0이 아닌 1로 약간의 여유있게 줌\n      if (Math.abs(e.detail.deltaX) > 1) {\n        this.dragging = true;\n      }\n    },\n    // 선택된 탭을 스크롤 중앙으로\n    setScroll: function setScroll(index, str) {\n      var target = undefined;\n\n      if (str === 'one') {\n        target = this.scrollArray[index];\n\n        if (target) {\n          var result = target.accumulatedWidth - target.width / 2;\n          result -= this.$store.getters.deviceWidth / 2;\n          this.$refs.dragscroll.scrollTo({\n            behavior: 'smooth',\n            left: result\n          });\n        }\n      } else if (str === 'two') {\n        target = this.scrollArrayTwo[index];\n\n        if (target) {\n          var _result = target.accumulatedWidth - target.width / 2;\n\n          _result -= this.$store.getters.deviceWidth / 2;\n          this.$refs.dragscrollTwo.scrollTo({\n            behavior: 'smooth',\n            left: _result\n          });\n        }\n      } else if (str === 'three') {\n        target = this.scrollArrayThree[index];\n\n        if (target) {\n          var _result2 = target.accumulatedWidth - target.width / 2;\n\n          _result2 -= this.$store.getters.deviceWidth / 2;\n          this.$refs.dragscrollThree.scrollTo({\n            behavior: 'smooth',\n            left: _result2\n          });\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["Gnb.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"full-width\" v-if=\"menu && menu.length>0\">\r\n    <!-- 스크롤 -->\r\n    <div class=\"list-wrap full-width\"\r\n         v-dragscroll.x=\"true\"\r\n         @dragscrollmove.prevent.self=\"onDrag\"\r\n         :class=\"{'dragscroll':isIE}\"\r\n         ref=\"dragscroll\"\r\n         :style=\"grabStyle\">\r\n      <div class=\"grab-bing flex-align full-width\" ref=\"grabbing\">\r\n        <div v-for=\"(item,idx) in menu\"\r\n             :key=\"'tab-'+item.id\" class=\"unselect list-item\"\r\n             :style=\"itemStyle(item.id)\"\r\n             @click.stop.prevent=\"clickTab(item,idx)\"\r\n             :ref=\"'tabItem'+idx\">\r\n             {{ item.name }}\r\n              <div v-if=\"item.id===selectedTab\" class=\"indicator\" :style=\"indicatorStyle\"></div>     \r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"list-wrap full-width\"\r\n         v-dragscroll.x=\"true\"\r\n         @dragscrollmove.prevent.self=\"onDrag\"\r\n         :class=\"{'dragscrollTwo':isIE}\"\r\n         ref=\"dragscrollTwo\"\r\n         :style=\"grabStyle\"\r\n         v-if=\"childStateOne\">\r\n      <div class=\"grab-bing flex-align full-width\" ref=\"grabbing\"\r\n          >\r\n          <div v-for=\"(item,idx) in childListOne\"\r\n              :key=\"'tab-'+item.id\" class=\"unselect list-item position-relative\"\r\n              :style=\"childStyle(item.id)\"\r\n              @click.stop.prevent=\"clickTabOne(item,idx)\"\r\n              :ref=\"'childItem'+idx\">\r\n              {{ item.name }}\r\n                <div v-if=\"item.id===selectedTab\" class=\"indicator\" :style=\"indicatorStyle\"></div>     \r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"list-wrap full-width\"\r\n         v-dragscroll.x=\"true\"\r\n         @dragscrollmove.prevent.self=\"onDrag\"\r\n         :class=\"{'dragscrollThree':isIE}\"\r\n         ref=\"dragscrollThree\"\r\n         :style=\"grabStyle\"\r\n         v-if=\"childStateTwo\">\r\n      <div class=\"grab-bing flex-align full-width\" ref=\"grabbing\"\r\n        >\r\n        <div v-for=\"(item,idx) in childListTwo\"\r\n             :key=\"'tab-'+item.id\" class=\"unselect list-item\"\r\n             :style=\"childTwoStyle(item.id)\"\r\n             @click.stop.prevent=\"clickTabTwo(item,idx)\"\r\n             :ref=\"'childTwoItem'+idx\">\r\n             {{ item.name }}\r\n              <div v-if=\"item.id===selectedTab\" class=\"indicator\" :style=\"indicatorStyle\"></div>     \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {dragscroll} from 'vue-dragscroll'\r\n  import MenuMixin from \"@/components/Mixins/MenuMixin\";\r\n\r\n  export default {\r\n    name: \"Gnb\",\r\n    directives: {\r\n      dragscroll\r\n    },\r\n    mixins: [\r\n      MenuMixin\r\n    ],\r\n    props: {\r\n\r\n      // 선택된 탭 id\r\n      // qeury와 같이 number로 판단하고 싶을때 number로 치환시켜 보내주어야 한다\r\n      initialTab: {\r\n        type: [String, Number],\r\n        required: false\r\n      },\r\n      selectedItemStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      wrapStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      customItemStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      indicatorStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      scrollable: {\r\n        type: Boolean,\r\n        required: false,\r\n        default: true\r\n      }\r\n    },\r\n    created() {\r\n      this.init();\r\n    },\r\n    data() {\r\n      return {\r\n        selectedTab: 0,\r\n        selectedChildTab: undefined,\r\n        selectedChildTabTwo: undefined,\r\n        dragging: false,\r\n        scrollArray: [],\r\n        scrollArrayTwo: [],\r\n        scrollArrayThree: [],\r\n        selectedIndex: undefined,\r\n        selectedTwoIndex: undefined,\r\n        selectedThreeIndex: undefined,\r\n        childListOne: [],\r\n        childListTwo: [],\r\n        menu: undefined\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      childStateOne() {\r\n        let menu = this.computedMenu[0];\r\n        if(menu && menu.child && menu.child.length>0) {\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      },\r\n      childStateTwo() {\r\n        let menu = this.computedChildMenu ? this.computedChildMenu[0] : [];\r\n        if(menu && menu.child && menu.child.length>0) {\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      },\r\n      grabStyle() {\r\n        if(this.wrapStyle) return this.wrapStyle;\r\n        else {\r\n          return {\r\n            borderBottom: this.brandBorder.main.border,\r\n          }\r\n        }\r\n      },\r\n      computedChildMenu() {\r\n        let result = [];\r\n        if(this.childStateOne && this.childListOne.length>0) {\r\n          this.childListOne.forEach(item => {\r\n            if(item.id === this.selectedChildTab) {\r\n              result.push(item);\r\n            }\r\n          })\r\n          return result;\r\n        }\r\n      },\r\n      computedMenu() {\r\n        let result = [];\r\n        this.menu.forEach(item => {\r\n          if(item.id === this.selectedTab)\r\n            result.push(item);\r\n        });\r\n        return result;\r\n      },\r\n      divider1Style() {\r\n        let deco = {\r\n          backgroundColor: this.getColor('기본 테두리선 색상'),\r\n          width: '100%',\r\n          height: '1px'\r\n        };\r\n        if (this.dividerStyle!==undefined) deco = this.dividerStyle;\r\n        return deco;\r\n      },\r\n      tabListStyle() {\r\n        let deco = {};\r\n        if(this.scrollable) {\r\n          deco = {\r\n            overflowX: 'scroll',\r\n            flexWrap: 'nowrap',\r\n            display: '-webkit-box'\r\n          }\r\n        }\r\n        return deco;\r\n      },\r\n      isIE() {\r\n        if (navigator.userAgent.indexOf('Trident') > -1) return true;\r\n        else return false;\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      /* selectedTab(n) {\r\n        if(!find(this.menu, 'id', n)) {\r\n          this.clickTab(this.menu[0], 0);\r\n          return;\r\n        } else {\r\n          this.$emit('select', n);\r\n        }\r\n        if(this.$route.path.indexOf('home')===-1) {\r\n          let query = cloneItem(this.$route.query);\r\n          query.tab = n;\r\n          this.$route.meta.clickPush = true;\r\n          this.$router.replace({\r\n            path: this.$route.path,\r\n            query: query\r\n          });\r\n        }\r\n      }  */\r\n      // '$route.query.gnb'(n) {\r\n      //   setTimeout(() => {\r\n      //     let one = find(this.menu, 'id', n);\r\n      //     let two = find(this.childListOne, 'id', n);\r\n      //     let three = find(this.childListTwo, 'id', n);\r\n      //     if(one) {\r\n      //       this.clickTab(one, one.index);\r\n      //     }\r\n          // if(two) {\r\n          // }\r\n          // if(three) {\r\n          // }\r\n      //   },300)\r\n        \r\n      // },\r\n      selectedChildTabTwo(n) {\r\n        if(this.childListTwo && this.childListTwo.length>0) {\r\n          // if(!find(this.childListTwo, 'id', n)) {\r\n          //   this.clickTab(this.childListTwo[0], 0);\r\n          //   return;\r\n          // } else {\r\n          //   this.$emit('selectedGnb', n);\r\n          // }\r\n          if(this.$route.path.indexOf('home')===-1 && n) {\r\n            let query = cloneItem(this.$route.query);\r\n            query.gnb = n;\r\n            this.$route.meta.clickPush = true;\r\n            this.$router.replace({\r\n              path: this.$route.path,\r\n              query: query\r\n            });\r\n          }\r\n        }\r\n      },\r\n\r\n    },\r\n\r\n    methods: {\r\n      async init() {\r\n        this.menu = await this.setMenus('gnb', 'mobile');\r\n\r\n        if (this.initialTab!==undefined) {\r\n          if (typeof(this.initialTab)==='number') {\r\n            this.selectedTab = parseInt(this.initialTab);\r\n          }\r\n          else if (typeof(this.initialTab)==='string') {\r\n            this.selectedTab = this.initialTab;\r\n          }\r\n        }\r\n\r\n        if(this.$route.query.gnb && this.menu && this.menu.length>0) {\r\n          for(let i=0;i<this.menu.length;i++) {\r\n            if(this.menu[i].id === Number(this.$route.query.gnb)) {\r\n  \r\n                this.clickTab(this.menu[i], i, true);\r\n                if(this.menu[i].child && this.menu[i].child.length>0) this.clickTabOne(this.menu[i].child[0], 0);\r\n              \r\n            }\r\n            else {\r\n              if(this.menu[i].child && this.menu[i].child.length>0) {\r\n                for(let j=0;j<this.menu[i].child.length;j++) {\r\n                  if(this.menu[i].child[j].id === Number(this.$route.query.gnb)) {\r\n                    this.clickTab(this.menu[i], i, true);\r\n                    this.clickTabOne(this.menu[i].child[j], j);\r\n                  }\r\n                  else {\r\n                    if(this.menu[i].child[j].child && this.menu[i].child[j].child.length>0) {\r\n                      for(let k=0;k<this.menu[i].child[j].child.length;k++) {\r\n                        if(this.menu[i].child[j].child[k].id === Number(this.$route.query.gnb)) {\r\n                          this.clickTab(this.menu[i], i, true);\r\n                          this.clickTabOne(this.menu[i].child[j], j, true);\r\n                          this.clickTabTwo(this.menu[i].child[j].child[k], k);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n          // this.selectedTab = Number(this.$route.query.gnb);\r\n          // this.selectedChildTab = Number(this.$route.query.gnb);\r\n        }\r\n\r\n        if(this.isIE) {\r\n          setTimeout(() => {\r\n            dragscroll.reset();\r\n          },1000);\r\n        }\r\n\r\n        // 스크롤 \r\n        this.$nextTick(() => {\r\n          let totalWidth = 0;\r\n          // 스크롤아이템 width 저장\r\n          for (let i=0; i<this.menu.length; i++) {\r\n            if (this.$refs[`tabItem${i}`]&&this.$refs[`tabItem${i}`][0]) {\r\n              let width = this.$refs[`tabItem${i}`][0].offsetWidth;\r\n              this.scrollArray.push({\r\n                id : this.menu[i].id,\r\n                name : this.menu[i].name,\r\n                width: width,                        // 본인 너비\r\n                accumulatedWidth: totalWidth+width   // 본인 누적너비\r\n              });\r\n              totalWidth += width;                   // 총 너비\r\n            }\r\n            // 현재 선택된 탭 index 저장\r\n            if (this.menu[i].id === this.selectedTab) {\r\n              this.selectedIndex = i;\r\n            }\r\n          }\r\n          // 스크롤 중앙 정렬\r\n          this.setScroll(this.selectedIndex);\r\n        })\r\n        \r\n      },\r\n\r\n      itemStyle(id) {\r\n        let obj = {\r\n          padding: '13px 16px'\r\n        };\r\n\r\n        if (id===this.selectedTab) {\r\n          if(this.selectedItemStyle) {\r\n            return Object.assign(obj, this.selectedItemStyle);\r\n          }\r\n          else {\r\n            obj.color = this.brandColor.brand.color;\r\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\r\n          }\r\n        } \r\n\r\n        if (this.customItemStyle) {\r\n          return Object.assign(obj, this.customItemStyle);\r\n        } else {\r\n          return obj;\r\n        }\r\n      },\r\n\r\n      childStyle(id) {\r\n        let obj = {\r\n          padding: '13px 16px'\r\n        };\r\n\r\n        if (id===this.selectedChildTab) {\r\n          if(this.selectedItemStyle) {\r\n            return Object.assign(obj, this.selectedItemStyle);\r\n          }\r\n          else {\r\n            obj.color = this.brandColor.brand.color;\r\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\r\n          }\r\n        } \r\n\r\n        if (this.customItemStyle) {\r\n          return Object.assign(obj, this.customItemStyle);\r\n        } else {\r\n          return obj;\r\n        }\r\n      },\r\n\r\n      childTwoStyle(id) {\r\n        let obj = {\r\n          padding: '13px 16px'\r\n        };\r\n\r\n        if (id===this.selectedChildTabTwo) {\r\n          if(this.selectedItemStyle) {\r\n            return Object.assign(obj, this.selectedItemStyle);\r\n          }\r\n          else {\r\n            obj.color = this.brandColor.brand.color;\r\n            obj.borderBottom = `2px solid ${this.brandColor.brand.color}`;\r\n          }\r\n        } \r\n\r\n        if (this.customItemStyle) {\r\n          return Object.assign(obj, this.customItemStyle);\r\n        } else {\r\n          return obj;\r\n        }\r\n      },\r\n\r\n      clickTab(item, idx, boo) {\r\n        this.scrollArrayTwo = [];\r\n        this.childListOne = [];\r\n        // 드래그앤드 시 클릭방지\r\n        if (this.dragging) {\r\n          this.dragging = false;\r\n          return;\r\n        }\r\n        else {\r\n          this.selectedChildTab = undefined;\r\n          this.selectedChildTabTwo = undefined;\r\n          if(item.child) this.childListOne = item.child;\r\n          this.selectedTab = item.id;\r\n          if(this.childListOne.length===0) {\r\n            if(this.selectedTab || this.selectedTab===0) this.$emit('select', this.selectedTab, item);\r\n          }\r\n          this.dragging = false;\r\n\r\n          if(!boo) {\r\n            if(this.menu && this.menu.length>0) {\r\n              // if(!find(this.menu, 'id', n)) {\r\n              //   this.clickTab(this.menu[0], 0);\r\n              //   return;\r\n              // } else {\r\n              //   this.$emit('selectedGnb', n);\r\n              // }\r\n              if(this.$route.path.indexOf('home')===-1) {\r\n                let query = cloneItem(this.$route.query);\r\n                if(this.selectedTab===0) query.gnb = '';\r\n                else query.gnb = this.selectedTab;\r\n                if(query.category1) delete query.category1;\r\n                if(query.category2) delete query.category2;\r\n                if(query.category3) delete query.category3;\r\n                this.$route.meta.clickPush = true;\r\n                this.$router.replace({\r\n                  path: this.$route.path,\r\n                  query: query\r\n                });\r\n\r\n              }\r\n\r\n              if(this.childListOne && this.childListOne.length>0) this.clickTabOne(this.childListOne[0], 0) \r\n            }\r\n          }\r\n\r\n          \r\n\r\n          this.$nextTick(() => {\r\n            if(this.childListOne.length>0) {\r\n              let totalWidth = 0;\r\n              // 스크롤아이템 width 저장\r\n              for (let i=0; i<this.childListOne.length; i++) {\r\n                if (this.$refs[`childItem${i}`]&&this.$refs[`childItem${i}`].length>0) {\r\n                  let width = this.$refs[`childItem${i}`][0].offsetWidth;\r\n                  this.scrollArrayTwo.push({\r\n                    id : this.childListOne[i].id,\r\n                    name : this.childListOne[i].name,\r\n                    width: width,                        // 본인 너비\r\n                    accumulatedWidth: totalWidth+width   // 본인 누적너비\r\n                  });\r\n                  totalWidth += width;                   // 총 너비\r\n                }\r\n                // 현재 선택된 탭 index 저장\r\n                // if (this.childListOne[i].id === this.selectedTab) {\r\n                //   this.selectedIndex = i;\r\n                // }\r\n              }\r\n            }\r\n          })\r\n          \r\n          \r\n\r\n          // 스크롤 위치\r\n          if (this.scrollable) {\r\n            this.setScroll(idx, 'one');\r\n          }\r\n        }\r\n      },\r\n      clickTabOne(item, idx, boo) {\r\n        this.scrollArrayThree = [];\r\n        this.childListTwo = [];\r\n        // 드래그앤드 시 클릭방지\r\n        if (this.dragging) {\r\n          this.dragging = false;\r\n          return;\r\n        }\r\n        else {\r\n          this.selectedChildTabTwo = item.id;\r\n          if(item.child) this.childListTwo = item.child;\r\n          this.selectedChildTab = item.id;\r\n          if(this.childListTwo.length===0) {\r\n            this.$emit('select', this.selectedChildTab, item);\r\n          }\r\n          this.dragging = false;\r\n\r\n          if(!boo) {\r\n            if(this.childListOne && this.childListOne.length>0) {\r\n              // if(!find(this.childListOne, 'id', n)) {\r\n              //   this.clickTab(this.childListOne[0], 0);\r\n              //   return;\r\n              // } else {\r\n              //   this.$emit('selectedGnb', n);\r\n              // }\r\n              if(this.$route.path.indexOf('home')===-1) {\r\n                let query = cloneItem(this.$route.query);\r\n                query.gnb = this.selectedChildTab;\r\n                this.$route.meta.clickPush = true;\r\n                this.$router.replace({\r\n                  path: this.$route.path,\r\n                  query: query\r\n                });\r\n              }\r\n            }\r\n          }\r\n\r\n          if(this.childListTwo) this.clickTabTwo(this.childListTwo[0], 0);\r\n\r\n          this.$nextTick(() => {\r\n            if(this.childListTwo.length>0) {\r\n              let totalWidth = 0;\r\n              // 스크롤아이템 width 저장\r\n              for (let i=0; i<this.childListTwo.length; i++) {\r\n                if (this.$refs[`childTwoItem${i}`]&&this.$refs[`childTwoItem${i}`].length>0) {\r\n                  let width = this.$refs[`childTwoItem${i}`][0].offsetWidth;\r\n                  this.scrollArrayThree.push({\r\n                    id : this.childListTwo[i].id,\r\n                    name : this.childListTwo[i].name,\r\n                    width: width,                        // 본인 너비\r\n                    accumulatedWidth: totalWidth+width   // 본인 누적너비\r\n                  });\r\n                  totalWidth += width;                   // 총 너비\r\n                }\r\n                // 현재 선택된 탭 index 저장\r\n                // if (this.childListTwo[i].id === this.selectedTab) {\r\n                //   this.selectedIndex = i;\r\n                // }\r\n              }\r\n            }\r\n          })\r\n          \r\n\r\n          // 스크롤 위치\r\n          if (this.scrollable) {\r\n            this.setScroll(idx, 'two');\r\n          }\r\n        }\r\n      },\r\n      clickTabTwo(item, idx) {\r\n        // 드래그앤드 시 클릭방지\r\n        if (this.dragging) {\r\n          this.dragging = false;\r\n          return;\r\n        }\r\n        else {\r\n          this.selectedChildTabTwo = item.id;\r\n          this.$emit('select', this.selectedChildTabTwo, item);\r\n          this.dragging = false;\r\n\r\n          // 스크롤 위치\r\n          if (this.scrollable) {\r\n            this.setScroll(idx, 'three');\r\n          }\r\n        }\r\n      },\r\n      onDrag(e) {\r\n        // 기종별 감도차이 때문에 0이 아닌 1로 약간의 여유있게 줌\r\n        if (Math.abs(e.detail.deltaX) > 1) {\r\n          this.dragging = true;\r\n        }\r\n      },\r\n      // 선택된 탭을 스크롤 중앙으로\r\n      setScroll(index, str) {\r\n        let target = undefined;\r\n        if(str==='one') {\r\n          target = this.scrollArray[index];\r\n          if (target) {\r\n            let result = (target.accumulatedWidth - (target.width/2));\r\n            result -= (this.$store.getters.deviceWidth/2);\r\n            this.$refs.dragscroll.scrollTo({\r\n              behavior: 'smooth',\r\n              left: result\r\n            });\r\n          }\r\n        }\r\n        else if(str==='two') {\r\n          target = this.scrollArrayTwo[index];\r\n          if (target) {\r\n            let result = (target.accumulatedWidth - (target.width/2));\r\n            result -= (this.$store.getters.deviceWidth/2);\r\n            this.$refs.dragscrollTwo.scrollTo({\r\n              behavior: 'smooth',\r\n              left: result\r\n            });\r\n          }\r\n        }\r\n        else if(str==='three') {\r\n          target = this.scrollArrayThree[index];\r\n          if (target) {\r\n            let result = (target.accumulatedWidth - (target.width/2));\r\n            result -= (this.$store.getters.deviceWidth/2);\r\n            this.$refs.dragscrollThree.scrollTo({\r\n              behavior: 'smooth',\r\n              left: result\r\n            });\r\n          }\r\n        }\r\n        \r\n      }\r\n    },\r\n\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n  .list-horizontal\r\n    overflow hidden\r\n\r\n  .list-wrap\r\n    overflow hidden\r\n\r\n  .grab-bing\r\n    white-space nowrap\r\n    position relative\r\n    text-overflow ellipsis\r\n\r\n  .list-item\r\n    display inline-block\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Slot"}]}