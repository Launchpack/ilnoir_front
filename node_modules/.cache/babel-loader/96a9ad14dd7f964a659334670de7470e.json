{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputRadiobuttonGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputRadiobuttonGroup.vue","mtime":1605259988000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from '@/components/Mixins/FormMixin';\nexport default {\n  name: 'c-input-radiobuttonGroup',\n  mixins: [FormMixin],\n  props: {\n    options: {\n      type: Array,\n      required: true\n    },\n    value: {\n      type: [String, Number, Boolean],\n      required: false\n    },\n    label: {\n      type: String,\n      required: false\n    },\n    align: {\n      type: String,\n      required: false,\n      default: 'left'\n    },\n    itemLableSelectedStyle: {\n      type: Object,\n      required: false\n    },\n    itemLableUnselectedStyle: {\n      type: Object,\n      required: false\n    },\n    lableWrapCustomStyle: {\n      type: Object,\n      required: false\n    },\n    lableWrapLastStyle: {\n      type: Object,\n      required: false\n    }\n  },\n  computed: {},\n  data: function data() {\n    return {\n      currentIdx: 0,\n      hover: false,\n      selectedValue: '',\n      hoverText: false,\n      disabledState: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    if (this.options) {\n      this.disabledState = this.options.every(function (item) {\n        return item.disabled === undefined || item.disabled === false || item.disabled === '';\n      });\n    } else this.disabledState = true;\n\n    if (this.disabledState === false) {\n      this.options.forEach(function (item) {\n        if (item.disabled) {\n          for (var i = 0; _this.options.length; i++) {\n            if ((_this.options[i].disabled === undefined || _this.options[i].disabled === false) && (_this.options[i].value !== undefined || _this.options[i].value !== '') && _this.selectedValue === '') {\n              _this.selectedValue = _this.options[i].value;\n\n              _this.$emit('update:value', _this.selectedValue);\n\n              break;\n            }\n          }\n        }\n      });\n    } else {\n      if (this.value) {\n        this.selectedValue = this.value;\n        this.$emit('update:value', this.selectedValue);\n      }\n\n      if (this.options.length > 0 && (this.value === undefined || this.value === '') && this.selectedValue === '') {\n        this.$emit('update:value', this.options[0].value); // this.value = ;\n      }\n\n      if ((this.value || this.value === 0 || this.value === false) && this.selectedValue === '') {\n        this.selectedValue = this.value;\n        this.$emit('update:value', this.options[0].value);\n\n        if (find(this.options, 'value', this.value) !== undefined) {\n          this.$emit('update:selectedValue', find(this.options, 'value', this.value).label);\n        }\n      }\n    }\n  },\n  watch: {\n    options: function options(n) {\n      if (this.value.length === 0) {\n        this.value = n[0].value;\n      }\n    },\n    value: function value(n) {\n      if (n || n === 0 || n === false) {\n        this.selectedValue = n;\n      }\n    }\n  },\n  methods: {\n    outerStyle: function outerStyle(item) {\n      var deco = {\n        width: '16px',\n        height: '16px',\n        margin: '0px 8px 0px 0px',\n        border: '1px solid ' + this.getColor('기본 테두리선 색상'),\n        cursor: 'pointer'\n      };\n\n      if (item.disabled) {\n        deco.cursor = 'default';\n      }\n\n      return deco;\n    },\n    innerStyle: function innerStyle(item) {\n      var deco = {\n        width: '8px',\n        height: '8px',\n        backgroundColor: this.brandBgColor.brand.backgroundColor,\n        cursor: 'pointer'\n      };\n\n      if (item.disabled) {\n        deco.cursor = 'default';\n      }\n\n      return deco;\n    },\n    setHover: function setHover(val, item) {\n      this.hover = val;\n\n      if (this.hover) {\n        if (item.disabled && item.disabled_action === 'hover') {\n          this.hoverText = true;\n        }\n      } else {\n        this.hoverText = false;\n      }\n    },\n    lableWrapStyle: function lableWrapStyle(item, idx) {\n      var deco = {};\n\n      if (this.lableWrapCustomStyle) {\n        deco = this.lableWrapCustomStyle;\n\n        if (idx === this.options.length - 1) {\n          if (this.lableWrapLastStyle) deco = this.lableWrapLastStyle;\n        }\n      } else {\n        deco.marginRight = '24px';\n        deco.marginBottom = '12px';\n\n        if (item.id === this.options[this.options.length - 1].id) {\n          deco.marginRight = '0';\n        }\n      }\n\n      return deco;\n    },\n    itemLabelStyle: function itemLabelStyle(item) {\n      var deco = {\n        fontSize: '15px'\n      };\n\n      if (item.disabled) {\n        deco.color = '#bbb';\n        deco.cursor = 'default';\n      } else {\n        if (item.value === this.selectedValue) {\n          if (this.itemLableSelectedStyle) deco = this.itemLableSelectedStyle;else deco.color = this.brandColor.brand.color;\n        } else {\n          if (this.itemLableUnselectedStyle) deco = this.itemLableUnselectedStyle;else deco.color = this.brandColor.main.color;\n        }\n      }\n\n      return deco;\n    },\n    selectRadioButton: function selectRadioButton(item) {\n      if (!item.disabled) {\n        this.selectedValue = item.value;\n        this.$emit('update:value', item.value);\n        this.$emit('update:selectedValue', item.label);\n      } // // 모든 라디오버튼 off\n      // let data = this.itemProperties.options;\n      // for(let i=0; i<data.length; i++) {\n      //   data[i].selected = false;\n      // }\n      // // 선택된 라디오버튼만 on\n      // data[idx].selected = true;\n\n      /*let action = this.cloneItem(this.properties.action);\n      if(action!==undefined) {\n        action.value = action.value.replace('{value}', item.label);\n      }\n      this.onClickAction(action);*/\n\n    }\n  }\n};",{"version":3,"sources":["CInputRadiobuttonGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\">\r\n\r\n  <!-- 레이블 -->\r\n  <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <div :style=\"listStyle\" class=\"full-width wrap\" style=\"margin-top:12px\">\r\n      <div v-for=\"(item, idx) in options\"\r\n          :key=\"`radio-button-${idx}`\"\r\n          class=\"flex-between full-width\"\r\n          :style=\"lableWrapStyle(item,idx)\"\r\n          @click.stop.prevent=\"selectRadioButton(item)\">\r\n\r\n        <div class=\"flex-align\">\r\n          <div v-if=\"align==='left'\"\r\n            class=\"outer\" :style=\"outerStyle(item)\">\r\n            <div v-if=\"item.value===selectedValue\"\r\n                :style=\"innerStyle(item)\"\r\n              class=\"inner\"></div>\r\n          </div>\r\n\r\n          <div class=\"radio-button-text position-relative\" :style=\"itemLabelStyle(item)\"\r\n            @mouseover=\"setHover(true, item)\"\r\n            @mouseleave=\"setHover(false, item)\">{{ item.label }}\r\n            <div class=\"position-absolute hover-text-style\" \r\n              v-if=\"hoverText&&item.disabled&&item.disabled_action==='hover'\"\r\n              :style=\"[brandColor.sub, brandBgColor.sub, brandBorder.main]\">준비중입니다.</div>\r\n            <div :style=\"brandColor.main\" style=\"font-size:11px\" v-if=\"item.desc\">{{ item.desc }}</div>\r\n          </div>\r\n\r\n          <div v-if=\"align==='right'\"\r\n            class=\"outer\" :style=\"outerStyle(item)\">\r\n            <div v-if=\"item.value===selectedValue\"\r\n              class=\"inner\" :style=\"innerStyle(item)\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <i v-if=\"align==='check' && item.value===selectedValue\" class=\"material-icons size-14 bold\" :style=\"brandColor.brand\">check</i>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n\r\n  export default {\r\n    name: 'c-input-radiobuttonGroup',\r\n\r\n    mixins: [\r\n      FormMixin\r\n    ],\r\n\r\n    props: {\r\n      options: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      value: {\r\n        type: [String, Number, Boolean],\r\n        required: false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      align: {\r\n        type: String,\r\n        required: false,\r\n        default: 'left'\r\n      },\r\n      itemLableSelectedStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      itemLableUnselectedStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      lableWrapCustomStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      lableWrapLastStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n    },\r\n\r\n    computed: {\r\n      \r\n    },\r\n\r\n    data() {\r\n      return {\r\n        currentIdx: 0,\r\n        hover: false,\r\n        selectedValue: '',\r\n        hoverText: false,\r\n        disabledState: ''\r\n      }\r\n    },\r\n\r\n    created() {\r\n\r\n      if (this.options) {\r\n        this.disabledState = this.options.every(item => {\r\n          return item.disabled===undefined || item.disabled===false || item.disabled==='';\r\n        })\r\n      }\r\n      else this.disabledState = true;\r\n      \r\n      \r\n      if(this.disabledState===false) {\r\n        this.options.forEach(item => {\r\n          if(item.disabled) {\r\n            \r\n            for(let i=0;this.options.length;i++) {\r\n              if ((this.options[i].disabled===undefined || this.options[i].disabled===false) && (this.options[i].value !==undefined || this.options[i].value!=='') && this.selectedValue==='') {\r\n                this.selectedValue = this.options[i].value;\r\n                this.$emit('update:value', this.selectedValue);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n      \r\n      else {\r\n        if(this.value) {\r\n          this.selectedValue = this.value;\r\n          this.$emit('update:value', this.selectedValue)\r\n        }\r\n        if(this.options.length > 0 && (this.value===undefined || this.value === '') && this.selectedValue==='') {\r\n          this.$emit('update:value', this.options[0].value);\r\n          // this.value = ;\r\n        }\r\n\r\n        if((this.value || this.value===0 || this.value===false) && this.selectedValue==='') {\r\n          this.selectedValue = this.value;\r\n          this.$emit('update:value', this.options[0].value);\r\n          if (find(this.options, 'value', this.value)!==undefined) {\r\n            this.$emit('update:selectedValue', find(this.options, 'value', this.value).label);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      options(n) {\r\n        if(this.value.length===0) {\r\n          this.value = n[0].value;\r\n        }\r\n      },\r\n      value(n) {\r\n        if(n || n===0 || n===false) {\r\n          this.selectedValue = n;\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      outerStyle(item) {\r\n        let deco = {\r\n          width: '16px',\r\n          height: '16px',\r\n          margin: '0px 8px 0px 0px',\r\n          border: '1px solid ' + this.getColor('기본 테두리선 색상'),\r\n          cursor: 'pointer'\r\n        };\r\n        if(item.disabled) {\r\n          deco.cursor = 'default'\r\n        }\r\n        return deco;\r\n      },\r\n\r\n      innerStyle(item) {\r\n        let deco = {\r\n          width: '8px',\r\n          height: '8px',\r\n          backgroundColor: this.brandBgColor.brand.backgroundColor,\r\n          cursor: 'pointer'\r\n        };\r\n        if(item.disabled) {\r\n          deco.cursor = 'default'\r\n        }\r\n        return deco;\r\n      },\r\n      setHover(val, item) {\r\n        this.hover = val;\r\n        if(this.hover) {\r\n          if(item.disabled&&item.disabled_action==='hover') {\r\n            this.hoverText = true;\r\n          }\r\n        }\r\n        else {\r\n          this.hoverText = false;\r\n        }\r\n      },\r\n      lableWrapStyle(item,idx) {\r\n        let deco = {}\r\n\r\n        if(this.lableWrapCustomStyle) {\r\n          deco = this.lableWrapCustomStyle;\r\n          if(idx===this.options.length-1) {\r\n            if(this.lableWrapLastStyle) deco = this.lableWrapLastStyle;\r\n          }\r\n        }\r\n        \r\n        else {\r\n          deco.marginRight = '24px';\r\n          deco.marginBottom = '12px';\r\n\r\n          if(item.id===this.options[this.options.length-1].id) {\r\n            deco.marginRight = '0';\r\n          }          \r\n        }\r\n        return deco;\r\n      },\r\n      itemLabelStyle(item) {\r\n        let deco = {\r\n          fontSize: '15px'\r\n        };\r\n        if(item.disabled) {\r\n          deco.color = '#bbb';\r\n          deco.cursor = 'default';\r\n        }\r\n        else {\r\n          if(item.value === this.selectedValue) {\r\n            if(this.itemLableSelectedStyle) deco = this.itemLableSelectedStyle;\r\n            else deco.color = this.brandColor.brand.color;\r\n          } else {\r\n            if(this.itemLableUnselectedStyle) deco = this.itemLableUnselectedStyle;\r\n            else deco.color = this.brandColor.main.color;\r\n          }\r\n        }\r\n\r\n        return deco;\r\n      },\r\n      selectRadioButton(item) {\r\n        if(!item.disabled) {\r\n          this.selectedValue = item.value;\r\n          this.$emit('update:value', item.value);\r\n          this.$emit('update:selectedValue', item.label);\r\n        }\r\n\r\n        // // 모든 라디오버튼 off\r\n        // let data = this.itemProperties.options;\r\n        // for(let i=0; i<data.length; i++) {\r\n        //   data[i].selected = false;\r\n        // }\r\n        // // 선택된 라디오버튼만 on\r\n        // data[idx].selected = true;\r\n\r\n        /*let action = this.cloneItem(this.properties.action);\r\n        if(action!==undefined) {\r\n          action.value = action.value.replace('{value}', item.label);\r\n        }\r\n        this.onClickAction(action);*/\r\n\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n  .c-input-radiobutton-group-container\r\n    display flex\r\n    flex-wrap wrap\r\n\r\n  .c-input-radiobutton-group-wrap\r\n    display flex\r\n    align-items center\r\n\r\n  .radio-button\r\n  .radio-button-text\r\n    cursor pointer\r\n\r\n  .outer\r\n    border-radius 50%\r\n    display flex\r\n    align-items center\r\n    justify-content center\r\n    width 18px\r\n    height 18px\r\n\r\n  .inner\r\n    border-radius 50%\r\n    width 10px\r\n    height 10px\r\n\r\n\r\n\r\n  .hover-text-style\r\n    left 0\r\n    top 28px\r\n    padding 2px 12px\r\n    white-space pre \r\n    border-radius 8px\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}