{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputNumberRange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputNumberRange.vue","mtime":1605259987000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from '@/components/Mixins/FormMixin';\nexport default {\n  name: 'c-input-numberRange',\n  props: {},\n  components: {},\n  mixins: [FormMixin],\n  data: function data() {\n    return {\n      temp: '',\n      temp1: '',\n      visible: true,\n      visible1: true,\n      inputLowPrice: '',\n      inputHighPrice: ''\n    };\n  },\n  mounted: function mounted() {\n    this.inputLowPrice = this.value[0];\n    this.inputHighPrice = this.value[1];\n  },\n  methods: {\n    onBlurNumber: function onBlurNumber(e) {\n      this.visible = false;\n      this.inputLowPrice = this.temp;\n      this.temp = this.thousandSeprator(this.temp);\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice]);\n    },\n    onBlurNumber1: function onBlurNumber1(e) {\n      this.visible1 = false;\n      this.inputHighPrice = this.temp1;\n      this.temp1 = this.thousandSeprator(this.temp1);\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice]);\n    },\n    onFocusText: function onFocusText() {\n      this.visible = true;\n      this.temp = this.inputLowPrice;\n    },\n    onFocusText1: function onFocusText1() {\n      this.visible1 = true;\n      this.temp1 = this.inputHighPrice;\n    },\n    thousandSeprator: function thousandSeprator(amount) {\n      if (amount !== '' && amount !== undefined && amount !== 0 && amount !== '0' && amount !== null) {\n        return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + '원';\n      } else {\n        return amount;\n      }\n    }\n  }\n};",{"version":3,"sources":["CInputNumberRange.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,SAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,UAAA,EAAA,EAHA;AAIA,EAAA,MAAA,EAAA,CACA,SADA,CAJA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,aAAA,EAAA,EALA;AAMA,MAAA,cAAA,EAAA;AANA,KAAA;AAQA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,aAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,SAAA,cAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,aAAA,GAAA,KAAA,IAAA;AACA,WAAA,IAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,CAAA,KAAA,aAAA,EAAA,KAAA,cAAA,CAAA;AACA,KANA;AAOA,IAAA,aAPA,yBAOA,CAPA,EAOA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,cAAA,GAAA,KAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,KAAA,CAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,CAAA,KAAA,aAAA,EAAA,KAAA,cAAA,CAAA;AACA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,IAAA,GAAA,KAAA,aAAA;AACA,KAhBA;AAiBA,IAAA,YAjBA,0BAiBA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,KAAA,cAAA;AACA,KApBA;AAqBA,IAAA,gBArBA,4BAqBA,MArBA,EAqBA;AACA,UAAA,MAAA,KAAA,EAAA,IAAA,MAAA,KAAA,SAAA,IAAA,MAAA,KAAA,CAAA,IAAA,MAAA,KAAA,GAAA,IAAA,MAAA,KAAA,IAAA,EAAA;AACA,eAAA,MAAA,CAAA,QAAA,GAAA,OAAA,CAAA,uBAAA,EAAA,GAAA,IAAA,GAAA;AACA,OAFA,MAEA;AACA,eAAA,MAAA;AACA;AACA;AA3BA;AArBA,CAAA","sourcesContent":["<template>\r\n  <div :style=\"containerStyle\" class=\"full-width\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\">{{ label }}</div>\r\n\r\n    <!-- input -->\r\n    <div class=\"flex-between\">\r\n      <input v-if=\"visible === true\" @blur=\"onBlurNumber\" type=\"number\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최저가\" v-model.number=\"temp\">\r\n      <input v-if=\"visible === false\" @focus=\"onFocusText\" type=\"text\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최저가\" v-model=\"temp\">\r\n      <div style=\"padding:8px; flex-shrink:0\">~</div>\r\n      <input v-if=\"visible1 === true\" @blur=\"onBlurNumber1\" type=\"number\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최고가\" v-model.number=\"temp1\">\r\n      <input v-if=\"visible1 === false\" @focus=\"onFocusText1\" type=\"text\" class=\"full-width\" :style=\"inputStyle\" placeholder=\"최고가\" v-model=\"temp1\">\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FormMixin from '@/components/Mixins/FormMixin';\r\n\r\nexport default {\r\n  name: 'c-input-numberRange',\r\n  props: {},\r\n  components: {},\r\n  mixins: [\r\n    FormMixin\r\n  ],\r\n  data() {\r\n    return {\r\n      temp: '',\r\n      temp1: '',\r\n      visible: true,\r\n      visible1: true,\r\n      inputLowPrice: '',\r\n      inputHighPrice: '',\r\n    }\r\n  },\r\n  mounted() {\r\n    this.inputLowPrice = this.value[0];\r\n    this.inputHighPrice = this.value[1];\r\n  },\r\n  methods: {\r\n    onBlurNumber(e) {\r\n      this.visible = false;\r\n      this.inputLowPrice = this.temp;\r\n      this.temp = this.thousandSeprator(this.temp);\r\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice])\r\n    },\r\n    onBlurNumber1(e) {\r\n      this.visible1 = false;\r\n      this.inputHighPrice = this.temp1;\r\n      this.temp1 = this.thousandSeprator(this.temp1);\r\n      this.$emit('update:value', [this.inputLowPrice, this.inputHighPrice])\r\n    },\r\n    onFocusText() {\r\n      this.visible = true;\r\n      this.temp = this.inputLowPrice;\r\n    },\r\n    onFocusText1() {\r\n      this.visible1 = true;\r\n      this.temp1 = this.inputHighPrice;\r\n    },\r\n    thousandSeprator(amount) {\r\n      if (amount !== '' && amount !== undefined && amount !== 0 && amount !== '0' && amount !== null) {\r\n        return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+'원';\r\n      } else {\r\n        return amount;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/Components/Form"}]}