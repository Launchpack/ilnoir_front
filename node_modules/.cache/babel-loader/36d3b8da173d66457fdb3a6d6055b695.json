{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/App.vue","mtime":1605259958000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\nimport Toast from \"@/components/Components/Common/Toast\";\nimport Vue from 'vue';\nimport VueAnalytics from 'vue-analytics';\nimport router from \"./router/index\";\n\nvar fernet = require('fernet');\n\nimport AuthMixin from \"./components/Mixins/AuthMixin\";\nexport default {\n  components: {\n    Toast: Toast\n  },\n  name: 'App',\n  mixins: [AuthMixin],\n  head: {\n    link: function link() {\n      return [{\n        rel: 'icon',\n        href: this.favicon,\n        type: 'image/x-icon'\n      }];\n    },\n    meta: function meta() {\n      return [{\n        name: 'viewport',\n        content: this.viewportContent\n      }];\n    }\n  },\n  created: function created() {\n    this.serviceInit();\n    this.setAuthHeader(); //토큰 유효한지 체크\n\n    this.validAuth();\n    this.sendToNativeApp();\n  },\n  data: function data() {\n    return {\n      vHeadDone: false,\n      backendUrl: 'http://localhost:8000/',\n      vRouter: false,\n      appStyle: {\n        minHeight: '100vh',\n        maxWidth: '100%',\n        margin: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        overflow: 'hidden'\n      },\n      overlayLink: '',\n      viewportContent: 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'\n    };\n  },\n  methods: {\n    naverRedirect: function naverRedirect() {\n      if (location.pathname.indexOf('/naver/') > -1) {\n        var access_token = location.hash.replace('#access_token=', '').split('&')[0];\n        location.replace(\"\".concat(this.backendUrl, \"auth/user/signin/naver?access_token=\").concat(access_token));\n      }\n    },\n    serviceInit: function serviceInit() {\n      this.backendUrl = process.env.VUE_APP_BACKEND_URL;\n      this.$axios.defaults.baseURL = this.backendUrl; // ie cache 방지\n\n      this.$axios.defaults.headers['Pragma'] = 'no-cache'; // 네이버 로그인 후 진입한 경우 리다이렉트\n\n      this.naverRedirect(); // 메타 뷰포트 vue-head 설정\n\n      this.setMetaViewport(); // 브랜드 디자인 가져오기\n\n      this.getBrand(); // 서비스 정보 가져오기\n\n      this.getServiceInfo(); // PC Mode 여부 가져오기\n\n      this.getServicePcMode(); // API Key 가져오기\n\n      this.getAPIKey(); //기본 공통 스타일 지정\n\n      this.setCommonStyle();\n    },\n    setMetaViewport: function setMetaViewport() {\n      if (navigator.userAgent.match(/Android/i)) {\n        this.viewportContent = 'width=device-width,initial-scale=1.0';\n      } else {\n        this.viewportContent = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\n      }\n\n      this.$emit('updateHead');\n    },\n    validAuth: function validAuth() {\n      var _this = this;\n\n      if (this.$store.getters.user.user_id > 0) {\n        this.$axios.get(\"user/\".concat(this.$store.getters.user.user_id)).then(function (res) {\n          _this.setUserData(res.data);\n        }).catch(function (err) {\n          if (err.response.status === 401) {\n            _this.$store.commit('logout');\n          }\n        });\n      }\n    },\n    getServicePcMode: function getServicePcMode() {\n      var _this2 = this;\n\n      this.$axios.get('public/service/pc_mode').then(function (res) {\n        // 경로에 overlay 포함 된 경우 pc mode\n        if (_this2.$route.path.indexOf('_overlay') > -1) {\n          _this2.$store.commit('setPcMode', true);\n        } else {\n          _this2.$store.commit('setPcMode', res.data.pc_mode);\n        } // 디바이스 너비 설정\n\n\n        _this2.setDevice(); // 디바이스 리사이즈 처리\n\n\n        _this2.$nextTick(function () {\n          window.addEventListener('resize', function () {\n            _this2.setDevice();\n          });\n        });\n      });\n    },\n    getServiceInfo: function getServiceInfo() {\n      var _this3 = this;\n\n      this.$axios.get('public/service/info').then(function (res) {\n        _this3.$store.commit('setServiceInfo', res.data);\n\n        _this3.$emit('updateHead');\n      });\n    },\n    getAPIKey: function getAPIKey() {\n      var _this4 = this;\n\n      this.$axios.get('public/service/social_key').then(function (res) {\n        var keys = undefined;\n\n        if (res.data.result) {\n          var result = res.data.result.split('_!_');\n          var token = new fernet.Token({\n            secret: new fernet.Secret(result[1]),\n            token: result[0],\n            ttl: 0\n          });\n          keys = JSON.parse(token.decode());\n        } else {\n          keys = res.data.social_key;\n        }\n\n        _this4.$store.commit('setSocialKey', keys); // 구글애널리틱스\n\n\n        var ga = _this4.$store.getters.social_key.google.ga;\n\n        if (ga) {\n          Vue.use(VueAnalytics, {\n            id: ga,\n            checkDuplicatedScript: true,\n            router: router\n          });\n        } // 네이버지도\n\n\n        if (_this4.$store.getters.social_key.naver.enable.map) {\n          var naverMap = _this4.$store.getters.social_key.naver.map.client_id;\n\n          _this4.addHeadJs(\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=\".concat(naverMap, \"&submodules=geocoder\"));\n\n          setTimeout(function () {\n            _this4.addHeadJs('/static/marker_clustering.js');\n\n            _this4.vHeadDone = true;\n          }, 1000);\n        } else {\n          _this4.vHeadDone = true;\n        }\n      });\n    },\n    addHeadJs: function addHeadJs(src) {\n      var head = document.getElementsByTagName('head')[0];\n      var el = document.createElement('script');\n      el.setAttribute('type', 'text/javascript');\n      el.setAttribute('src', src);\n      head.appendChild(el);\n    },\n    setDevice: function setDevice() {\n      // 서비스 PC모드 (서비스 PC device 지원 여부)\n      var pc_enable = this.$store.getters.pcMode;\n      console.log('setDevice', navigator.userAgent); // 화면 너비\n      // 모바일\n\n      if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i)) {\n        console.log('mobile');\n        this.$store.commit('setDevice', 'mobile');\n        this.$store.commit('setBrowserType', 'mobile');\n        this.$store.commit('setDeviceWidth', window.innerWidth);\n        console.log(this.$store.getters.device);\n      } // PC\n      else {\n          console.log('pc');\n          this.$store.commit('setBrowserType', 'pc'); // PC모드 지원 서비스\n\n          if (pc_enable) {\n            this.$store.commit('setDevice', 'pc');\n            this.$store.commit('setDeviceWidth', screen.width);\n          } // PC모드 지원하지 않는 서비스 (only 모바일)\n          else {\n              this.$store.commit('setDevice', 'mobile');\n              this.$store.commit('setDeviceWidth', 416);\n              this.appStyle.maxWidth = '416px';\n              this.appStyle.margin = '0 auto';\n              this.appStyle.borderLeft = '1px solid #eeeeee';\n              this.appStyle.borderRight = '1px solid #eeeeee';\n            }\n\n          console.log(this.$store.getters.device);\n        }\n    },\n    getBrand: function getBrand() {\n      var _this5 = this;\n\n      this.$axios.get('public/ui/brand/admin').then(function (res) {\n        // this.$store.commit('setBrand', res.data);\n        document.getElementsByTagName('html')[0].style.fontFamily = res.data.font;\n\n        _this5.$axios.get('public/service/grade').then(function (res) {\n          _this5.$store.commit('setGrade', res.data);\n        });\n\n        _this5.$store.commit('setBrand', res.data);\n\n        _this5.vRouter = true;\n        _this5.favicon = _this5.$store.getters.brand.favicon || '';\n\n        _this5.$emit('updateHead');\n      });\n    },\n    setCommonStyle: function setCommonStyle() {\n      this.$store.commit('setCommonStyle', {\n        borderRadius: '12px',\n        blockMarginBottom: '8px',\n        blockMarginBottomPc: '8px'\n      });\n    },\n    sendToNativeApp: function sendToNativeApp() {\n      if (window.Android && this.$store.getters.user.user_id > 0) {\n        window.Android.sendMessage(this.$store.getters.user.username, this.$store.getters.user.token, this.$store.getters.user.user_id);\n        var params = JSON.stringify({\n          username: this.$store.getters.user.username,\n          token: this.$store.getters.user.token,\n          user_id: this.$store.getters.user.user_id\n        });\n        window.postMessage(params, '*');\n      }\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"app\" :style=\"appStyle\">\r\n    <router-view v-if=\"vRouter && vHeadDone\" />\r\n    <toast/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Toast from \"@/components/Components/Common/Toast\";\r\n  import Vue from 'vue'\r\n  import VueAnalytics from 'vue-analytics'\r\n  import router from './router/index'\r\n  let fernet = require('fernet');\r\n  import AuthMixin from \"./components/Mixins/AuthMixin\";\r\n\r\n  export default {\r\n    components: {\r\n      Toast\r\n    },\r\n    name: 'App',\r\n    mixins: [\r\n      AuthMixin\r\n    ],\r\n    head: {\r\n      link: function () {\r\n        return [\r\n          {\r\n            rel: 'icon',\r\n            href: this.favicon,\r\n            type: 'image/x-icon'\r\n          }\r\n        ];\r\n      },\r\n      meta: function () {\r\n        return [\r\n          { name: 'viewport', content: this.viewportContent }\r\n        ]\r\n      }\r\n    },\r\n    created() {\r\n      this.serviceInit();\r\n      this.setAuthHeader();\r\n\r\n      //토큰 유효한지 체크\r\n      this.validAuth();\r\n\r\n      this.sendToNativeApp();\r\n    },\r\n    data() {\r\n      return {\r\n        vHeadDone: false,\r\n        backendUrl: 'http://localhost:8000/',\r\n        vRouter: false,\r\n        appStyle: {\r\n          minHeight: '100vh',\r\n          maxWidth: '100%',\r\n          margin: 0,\r\n          paddingLeft: 0,\r\n          paddingRight: 0,\r\n          overflow: 'hidden'\r\n        },\r\n        overlayLink: '',\r\n        viewportContent: 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'\r\n      }\r\n    },\r\n    methods: {\r\n      naverRedirect() {\r\n        if (location.pathname.indexOf('/naver/')>-1) {\r\n          let access_token = location.hash.replace('#access_token=', '').split('&')[0];\r\n          location.replace(`${this.backendUrl}auth/user/signin/naver?access_token=${access_token}`);\r\n        }\r\n      },\r\n      serviceInit() {\r\n        this.backendUrl = process.env.VUE_APP_BACKEND_URL;\r\n        this.$axios.defaults.baseURL = this.backendUrl;\r\n        // ie cache 방지\r\n        this.$axios.defaults.headers['Pragma'] = 'no-cache';\r\n\r\n        // 네이버 로그인 후 진입한 경우 리다이렉트\r\n        this.naverRedirect();\r\n\r\n        // 메타 뷰포트 vue-head 설정\r\n        this.setMetaViewport();\r\n\r\n        // 브랜드 디자인 가져오기\r\n        this.getBrand();\r\n\r\n        // 서비스 정보 가져오기\r\n        this.getServiceInfo();\r\n\r\n        // PC Mode 여부 가져오기\r\n        this.getServicePcMode();\r\n\r\n        // API Key 가져오기\r\n        this.getAPIKey();\r\n\r\n        //기본 공통 스타일 지정\r\n        this.setCommonStyle();\r\n      },\r\n\r\n      setMetaViewport() {\r\n        if (navigator.userAgent.match(/Android/i)) {\r\n          this.viewportContent = 'width=device-width,initial-scale=1.0';\r\n        }\r\n        else {\r\n          this.viewportContent = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\r\n        }\r\n        this.$emit('updateHead');\r\n      },\r\n\r\n      validAuth() {\r\n        if(this.$store.getters.user.user_id>0) {\r\n          this.$axios.get(`user/${this.$store.getters.user.user_id}`).then(res => {\r\n            this.setUserData(res.data);\r\n          }).catch(err => {\r\n            if(err.response.status === 401) {\r\n              this.$store.commit('logout');\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      getServicePcMode() {\r\n        this.$axios.get('public/service/pc_mode').then(res => {\r\n          // 경로에 overlay 포함 된 경우 pc mode\r\n          if(this.$route.path.indexOf('_overlay')>-1) {\r\n            this.$store.commit('setPcMode', true);\r\n          }\r\n          else {\r\n            this.$store.commit('setPcMode', res.data.pc_mode);\r\n          }\r\n          // 디바이스 너비 설정\r\n          this.setDevice();\r\n          // 디바이스 리사이즈 처리\r\n          this.$nextTick(() => {\r\n            window.addEventListener('resize', () => {\r\n              this.setDevice();\r\n            });\r\n          })\r\n        });\r\n      },\r\n\r\n      getServiceInfo() {\r\n        this.$axios.get('public/service/info').then(res => {\r\n          this.$store.commit('setServiceInfo', res.data);\r\n          this.$emit('updateHead');\r\n        });\r\n      },\r\n\r\n      getAPIKey() {\r\n        this.$axios.get('public/service/social_key').then(res => {\r\n          let keys = undefined;\r\n          if(res.data.result) {\r\n            let result = res.data.result.split('_!_');\r\n            let token = new fernet.Token({secret: new fernet.Secret(result[1]), token:result[0], ttl:0});\r\n            keys = JSON.parse(token.decode());\r\n          } else {\r\n            keys = res.data.social_key;\r\n          }\r\n          this.$store.commit('setSocialKey', keys);\r\n          // 구글애널리틱스\r\n          let ga = this.$store.getters.social_key.google.ga;\r\n          if (ga) {\r\n            Vue.use(VueAnalytics, {\r\n              id: ga,\r\n              checkDuplicatedScript: true,\r\n              router\r\n            })\r\n          }\r\n\r\n          // 네이버지도\r\n          if(this.$store.getters.social_key.naver.enable.map) {\r\n            let naverMap = this.$store.getters.social_key.naver.map.client_id;\r\n            this.addHeadJs(`https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${naverMap}&submodules=geocoder`);\r\n            setTimeout(()=>{\r\n              this.addHeadJs('/static/marker_clustering.js');\r\n              this.vHeadDone = true;\r\n            },1000);\r\n\r\n          } else {\r\n            this.vHeadDone = true;\r\n          }\r\n        });\r\n      },\r\n\r\n      addHeadJs(src) {\r\n        let head = document.getElementsByTagName('head')[0];\r\n        let el = document.createElement('script');\r\n        el.setAttribute('type', 'text/javascript');\r\n        el.setAttribute('src', src);\r\n        head.appendChild(el);\r\n      },\r\n\r\n      setDevice() {\r\n        // 서비스 PC모드 (서비스 PC device 지원 여부)\r\n        let pc_enable = this.$store.getters.pcMode;\r\n        console.log('setDevice', navigator.userAgent)\r\n        \r\n        // 화면 너비\r\n        // 모바일\r\n        if (navigator.userAgent.match(/Android/i)\r\n          || navigator.userAgent.match(/webOS/i)\r\n          || navigator.userAgent.match(/iPhone/i)\r\n          || navigator.userAgent.match(/iPod/i)\r\n          || navigator.userAgent.match(/iPad/i)\r\n          || navigator.userAgent.match(/BlackBerry/i)\r\n          || navigator.userAgent.match(/Windows Phone/i)\r\n        ) {\r\n          console.log('mobile')\r\n          this.$store.commit('setDevice', 'mobile');\r\n          this.$store.commit('setBrowserType', 'mobile');\r\n          this.$store.commit('setDeviceWidth', window.innerWidth);\r\n          console.log(this.$store.getters.device)\r\n        }\r\n        // PC\r\n        else {\r\n          console.log('pc')\r\n          this.$store.commit('setBrowserType', 'pc');\r\n\r\n          // PC모드 지원 서비스\r\n          if (pc_enable) {\r\n            this.$store.commit('setDevice', 'pc');\r\n            this.$store.commit('setDeviceWidth', screen.width);\r\n          }\r\n          // PC모드 지원하지 않는 서비스 (only 모바일)\r\n          else {\r\n            this.$store.commit('setDevice', 'mobile');\r\n            this.$store.commit('setDeviceWidth', 416);\r\n\r\n            this.appStyle.maxWidth = '416px';\r\n            this.appStyle.margin = '0 auto';\r\n            this.appStyle.borderLeft = '1px solid #eeeeee';\r\n            this.appStyle.borderRight = '1px solid #eeeeee';\r\n          }\r\n          console.log(this.$store.getters.device)\r\n        }\r\n      },\r\n      getBrand() {\r\n        this.$axios.get('public/ui/brand/admin').then(res => {\r\n          // this.$store.commit('setBrand', res.data);\r\n          document.getElementsByTagName('html')[0].style.fontFamily = res.data.font;\r\n          this.$axios.get('public/service/grade').then(res => {\r\n            this.$store.commit('setGrade', res.data);\r\n\r\n          });\r\n\r\n          this.$store.commit('setBrand', res.data);\r\n\r\n          this.vRouter = true;\r\n          this.favicon = this.$store.getters.brand.favicon || '';\r\n\r\n          this.$emit('updateHead');\r\n        });\r\n      },\r\n      setCommonStyle() {\r\n        this.$store.commit('setCommonStyle', {\r\n            borderRadius: '12px',\r\n            blockMarginBottom: '8px',\r\n            blockMarginBottomPc: '8px'\r\n        });\r\n      },\r\n      sendToNativeApp() {\r\n        if(window.Android && this.$store.getters.user.user_id > 0) {\r\n          window.Android.sendMessage(this.$store.getters.user.username, this.$store.getters.user.token, this.$store.getters.user.user_id);\r\n\r\n          let params = JSON.stringify({\r\n            username: this.$store.getters.user.username,\r\n            token: this.$store.getters.user.token,\r\n            user_id: this.$store.getters.user.user_id,\r\n          });\r\n          window.postMessage(params, '*');\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n  /* ***\r\n    img lazy loading \r\n    *** */\r\n\r\n  /* img tag */\r\n  img[lazy='loading'] {\r\n  }\r\n  img[lazy='error'] {\r\n  }\r\n  img[lazy='loaded'] {\r\n    animation-name: imgloaded;\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-out;\r\n  }\r\n  /* background-image */\r\n  .lazy-background-image[lazy='loading'] {\r\n  }\r\n  .lazy-background-image[lazy='error'] {\r\n  }\r\n  .lazy-background-image[lazy='loaded'] {\r\n    animation-name: imgloaded;\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-out;\r\n  }\r\n  .lazy-background-image-cover[lazy='loaded'] {\r\n    animation-name: imgloaded;\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-out;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n  }\r\n  .lazy-background-image-contain[lazy='loaded'] {\r\n    animation-name: imgloaded;\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-out;\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n  }\r\n  /* animation */\r\n  @keyframes imgloaded {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n</style>"],"sourceRoot":"src"}]}