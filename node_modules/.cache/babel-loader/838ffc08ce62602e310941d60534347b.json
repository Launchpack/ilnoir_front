{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockSignupPc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockSignupPc.vue","mtime":1605260004000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from \"@/components/Mixins/FormMixin\";\nimport AuthMixin from \"@/components/Mixins/AuthMixin\";\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\";\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\";\nexport default {\n  name: 'BlockSignupPc',\n  components: {},\n  mixins: [FormMixin, AuthMixin, FormCustomMixin, HeaderMixin],\n  props: {},\n  data: function data() {\n    return {\n      \"formData\": [{\n        \"name\": \"아이디\",\n        \"field\": \"username\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_email\",\n        \"validate\": {\n          \"num\": true,\n          \"alpha_g\": true,\n          \"alpha_s\": true,\n          \"special\": true,\n          \"required\": true,\n          \"max_length\": 30,\n          \"min_length\": 4,\n          \"valid_required\": true\n        },\n        \"placeholder\": \"아이디\"\n      }, {\n        \"name\": \"비밀번호\",\n        \"field\": \"password\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_password\",\n        \"validate\": {\n          \"required\": true,\n          \"valid_required\": true\n        },\n        \"placeholder\": \"비밀번호\"\n      }],\n      \"isVerify\": true,\n      \"inputImgData\": undefined\n    };\n  },\n  created: function created() {\n    this.getForm();\n  },\n  methods: {\n    sign: function sign() {\n      var _this = this;\n\n      var result = this.getParamData(this.computedFormData);\n\n      if (result.enable) {\n        // if(this.$route.query.login_type) result.params['login_type'] = this.$route.query.login_type;\n        //본인인증 처리시, birth, gender, phone 반영 (result.params에 빠진 경우 추가)\n        if (this.$route.query.type === 'personal_valid') {\n          if (!result.params.birth) {\n            var no = this.$route.query.social_no;\n            result.params.birth = \"\".concat(no.substring(0, 4), \"-\").concat(no.substring(4, 6), \"-\").concat(no.substring(6, 8));\n          }\n\n          if (!result.params.gender) {\n            result.params.gender = this.$route.query.sex === 'M' ? 'male' : \"female\";\n          }\n\n          if (!result.params.phone) {\n            result.params.phone = this.$route.query.phone;\n          }\n\n          if (!result.params.name) {\n            result.params.name = this.$route.query.name;\n          }\n        }\n\n        this.$axios.post(\"auth/user/signup\", result.params).then(function (res) {\n          if (res.status === 200) {\n            _this.toast('회원가입 되었습니다.');\n\n            _this.setUserData(res.data);\n\n            _this.setAuthHeader();\n\n            _this.$router.replace('home');\n          }\n        }).catch(function (err) {\n          console.log(err);\n          if (!err.response.data.message) _this.toast(err.response.data.detail);else _this.toast(err.response.data.message);\n        });\n      }\n    },\n    getForm: function getForm() {\n      var _this2 = this;\n\n      this.$axios.get('public/member/formdata/1').then(function (res) {\n        var formData = res.data;\n        var profileForm = find(formData, 'field', 'profile');\n\n        if (profileForm && profileForm.format === 'CImgUploader') {\n          profileForm.elType = 'c-input-imgUploader-single';\n          profileForm.format = 'CImgUploaderSingle';\n        }\n\n        formData.map(function (fd) {\n          fd.containerCustom = {\n            marginTop: '16px'\n          };\n        });\n        formData.push({\n          name: '이용약관 및 개인정보처리방침 동의',\n          label: '',\n          format: 'CgCheckboxArray',\n          items: [{\n            text: '이용약관',\n            link: 'TermsofserviceModal',\n            linkType: 'modal',\n            styles: {\n              container: {\n                color: _this2.brandColor.primary.color,\n                fontWeight: 500,\n                textDecoration: 'underline'\n              }\n            }\n          }, {\n            text: ' 및 ',\n            styles: {\n              container: {\n                padding: '0 4px'\n              }\n            }\n          }, {\n            text: '개인정보처리방침',\n            link: 'PrivacyModal',\n            linkType: 'modal',\n            styles: {\n              container: {\n                color: _this2.brandColor.primary.color,\n                fontWeight: 500,\n                textDecoration: 'underline'\n              }\n            }\n          }, {\n            text: '에 동의하기'\n          }],\n          validate: {\n            valid_required: true // validation 필수 여부\n\n          },\n          value: false,\n          containerCustom: {\n            marginTop: '24px'\n          }\n        });\n        _this2.inputImgData = formData[0];\n        _this2.inputImgData.elType = 'c-input-imgUploader-single';\n        formData.splice(0, 1, _this2.inputImgData);\n        formData = _this2.setForm(formData); // 소셜로그인 진입 시\n\n        if (_this2.$route.query.user_id !== undefined) {\n          find(formData, 'field', 'username').value = _this2.$route.query.user_id;\n          find(formData, 'field', 'username').elType = '';\n          find(formData, 'field', 'password').elType = '';\n          find(formData, 'field', 'password_re').elType = '';\n          var name = find(formData, 'field', 'name');\n          if (name !== undefined) name.value = _this2.$route.query.name;\n          var profile = find(formData, 'field', 'profile');\n          if (profile !== undefined) profile.value = _this2.$route.query.profile;\n        } // https://modowa.kr/signup?type=personal_valid&name=%EC%9D%B4%EB%82%A8%ED%98%B8&phone=01094785634&Tradeid=03023f48-11bf-4200-8cad-b221a232336b&sex=M&social_no=19821222\n\n\n        if (_this2.$route.query.type === 'personal_valid') {\n          var gender = find(formData, 'field', 'gender');\n\n          if (gender) {\n            gender.value = _this2.$route.query.sex === 'M' ? 'male' : \"female\";\n            gender.options.forEach(function (item) {\n              if (item.value !== gender.value) item.disabled = true;\n            });\n          }\n\n          var birth = find(formData, 'field', 'birth');\n\n          if (birth) {\n            var no = _this2.$route.query.social_no;\n            birth.value = \"\".concat(no.substring(0, 4), \"-\").concat(no.substring(4, 6), \"-\").concat(no.substring(6, 8));\n            birth.disabled = true;\n          }\n\n          var _name = find(formData, 'field', 'name');\n\n          if (_name) {\n            _name.value = _this2.$route.query.name;\n            _name.disabled = true;\n          }\n\n          var phone = find(formData, 'field', 'phone');\n\n          if (phone) {\n            phone.value = _this2.$route.query.phone;\n            phone.disabled = true;\n          }\n        }\n\n        _this2.formData = formData;\n      });\n    }\n  },\n  computed: {\n    btnStyle: function btnStyle() {\n      return {\n        fontSize: '14px',\n        fontWeight: '500',\n        backgroundColor: this.brandBgColor.primary.backgroundColor,\n        color: this.brandColor.white.color,\n        width: '30%',\n        height: '48px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '12px',\n        borderRadius: this.radius.borderRadius,\n        pointer: 'cursor'\n      };\n    },\n    inputCustom: function inputCustom() {\n      return {\n        border: this.brandBorder.main.border,\n        borderRadius: '6px',\n        backgroundColor: 'white',\n        padding: '12px 16px',\n        color: this.brandColor.main,\n        fontSize: '14px',\n        height: '48px'\n      };\n    },\n    computedFormData: function computedFormData() {\n      //본인인증 필드 보유 여부 확인\n      var verify = this.formData.filter(function (item) {\n        return item.type === 'verify';\n      });\n\n      if (verify.length === 1 && this.$route.query.type === undefined) {\n        this.isVerify = true;\n        this.formTypeCustomLabel.label = false;\n        return verify;\n      } else {\n        this.isVerify = false;\n        this.formTypeCustomLabel.label = true;\n        return this.formData.filter(function (item) {\n          return item.type !== 'verify';\n        });\n      }\n    },\n    addressButtonCustom: function addressButtonCustom() {\n      var styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      styles.padding = '12px 20px';\n      return styles;\n    },\n    inputWrapStyle: function inputWrapStyle() {\n      return {\n        display: 'none'\n      };\n    },\n    contentStyle: function contentStyle() {\n      return {\n        borderTop: \"1px solid \".concat(this.getColor('기본 테두리선 색상')),\n        borderBottom: \"1px solid \".concat(this.getColor('기본 테두리선 색상')),\n        padding: '20px 28px 32px'\n      };\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["BlockSignupPc.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div :style=\"pagePadding\" style=\"padding:24px 0 16px\">\n    <div class=\"size-20 bold\" :style=\"[brandColor.main]\">회원가입</div>\n  </div>\n  <div :style=\"[contentStyle]\">\n    <!-- 본인 인증 메시지 -->\n    <div v-if=\"isVerify\" style=\"padding:20px 0\">{{ $store.getters.service.title }} 회원가입을 위해서는 본인인증이 필요합니다.</div>\n    <!--회원가입 폼 요소-->\n    <component \n              :is=\"form.elType\" v-for=\"(form,idx) in computedFormData\" :key=\"'form-'+idx\"\n               v-bind=\"form\" :value.sync=\"form.value\"\n               :formType=\"formTypeCustomLabel\"\n               :containerCustomStyle=\"form.containerCustom\"\n               :labelCustomStyle=\"labelCustom\"\n               :inputCustomStyle=\"inputCustom\"\n               :addressInputWrapStyle=\"{marginTop: '8px'}\"\n               :buttonCustomStyle=\"buttonCustom\"\n               :addressButtonCustomStyle=\"addressButtonCustom\"\n               :inputWrapStyle=\"inputWrapStyle\"></component>\n  </div>\n\n  <!--회원가입 버튼-->\n  \n  <div style=\"padding:32px 16px\" v-if=\"!isVerify\"\n    class=\"flex-align\">\n    <!--내정보수정 버튼-->\n    <div class=\"unselect\" :style=\"btnStyle\" style=\"margin-right:20px\" @click=\"sign\">가입하기</div>\n    <div @click=\"clickBack\" :style=\"[brandBgColor.white,radius]\" class=\"size-14 weight-500 unselect\"\n      style=\"width:30%;height:48px;line-height:48px;text-align:center\">취소</div>\n  </div>\n</div>\n</template>\n<script>\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\n\nexport default {\n  name: 'BlockSignupPc',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    AuthMixin,\n    FormCustomMixin,\n    HeaderMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"아이디\",\n          \"field\": \"username\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_email\",\n          \"validate\": {\n            \"num\": true,\n            \"alpha_g\": true,\n            \"alpha_s\": true,\n            \"special\": true,\n            \"required\": true,\n            \"max_length\": 30,\n            \"min_length\": 4,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"아이디\"\n        },\n        {\n          \"name\": \"비밀번호\",\n          \"field\": \"password\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_password\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": true\n          },\n          \"placeholder\": \"비밀번호\"\n        }\n      ],\n      \"isVerify\": true,\n      \"inputImgData\": undefined\n    }\n  },\n  created() {\n      this.getForm();\n    },\n  \n  methods: {\n    sign() {\n        let result = this.getParamData(this.computedFormData);\n        \n        if(result.enable) {\n          // if(this.$route.query.login_type) result.params['login_type'] = this.$route.query.login_type;\n          \n          //본인인증 처리시, birth, gender, phone 반영 (result.params에 빠진 경우 추가)\n          if(this.$route.query.type === 'personal_valid') {\n            if(!result.params.birth) {\n              let no = this.$route.query.social_no;\n              result.params.birth = `${no.substring(0,4)}-${no.substring(4,6)}-${no.substring(6,8)}`;\n            }\n            if(!result.params.gender) {\n              result.params.gender = this.$route.query.sex === 'M' ? 'male' : \"female\";\n            }\n            if(!result.params.phone) {\n              result.params.phone = this.$route.query.phone;\n            }\n            if(!result.params.name) {\n              result.params.name = this.$route.query.name;\n            }\n          }\n\n          this.$axios.post(`auth/user/signup`, result.params).then(res=>{\n            if(res.status===200) {\n              this.toast('회원가입 되었습니다.');\n              this.setUserData(res.data);\n              this.setAuthHeader();\n              this.$router.replace('home');\n            }\n          }).catch(err=> {\n          console.log(err)\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      },\n    getForm() {\n        this.$axios.get('public/member/formdata/1').then(res=>{\n          let formData = res.data;\n          \n          let profileForm = find(formData, 'field', 'profile');\n          if (profileForm && profileForm.format==='CImgUploader') {\n            profileForm.elType = 'c-input-imgUploader-single'\n            profileForm.format = 'CImgUploaderSingle'\n          }\n          \n          formData.map(fd => {\n            fd.containerCustom = {marginTop: '16px'};\n          })\n          \n          formData.push(\n            {\n              name: '이용약관 및 개인정보처리방침 동의',\n              label: '',\n              format: 'CgCheckboxArray',\n              items: [\n                {\n                  text: '이용약관',\n                  link: 'TermsofserviceModal',\n                  linkType: 'modal',\n                  styles: {\n                    container: {\n                      color: this.brandColor.primary.color,\n                      fontWeight: 500,\n                      textDecoration: 'underline'\n                    }\n                  }\n                },\n                {\n                  text: ' 및 ',\n                  styles: {\n                    container: {\n                      padding: '0 4px'\n                    }\n                  }\n                },\n                {\n                  text: '개인정보처리방침',\n                  link: 'PrivacyModal',\n                  linkType: 'modal',\n                  styles: {\n                    container: {\n                      color: this.brandColor.primary.color,\n                      fontWeight: 500,\n                      textDecoration: 'underline'\n                    }\n                  }\n                },\n                {\n                  text: '에 동의하기'\n                }\n              ],\n              validate: {\n                valid_required: true,     // validation 필수 여부\n              },\n              value: false,\n              containerCustom: {marginTop: '24px'}\n            }\n          )\n          \n          this.inputImgData = formData[0];\n          this.inputImgData.elType = 'c-input-imgUploader-single'\n          \n          formData.splice(0,1,this.inputImgData);\n          \n          \n          formData = this.setForm(formData);\n\n          // 소셜로그인 진입 시\n          if (this.$route.query.user_id !== undefined) {\n            find(formData, 'field', 'username').value = this.$route.query.user_id;\n            find(formData, 'field', 'username').elType = '';\n            find(formData, 'field', 'password').elType = '';\n            find(formData, 'field', 'password_re').elType = '';\n            let name = find(formData, 'field', 'name');\n            if(name !== undefined) name.value = this.$route.query.name;\n            let profile = find(formData, 'field', 'profile')\n            if(profile !== undefined) profile.value = this.$route.query.profile;\n          }\n          \n          // https://modowa.kr/signup?type=personal_valid&name=%EC%9D%B4%EB%82%A8%ED%98%B8&phone=01094785634&Tradeid=03023f48-11bf-4200-8cad-b221a232336b&sex=M&social_no=19821222\n          if(this.$route.query.type === 'personal_valid') {\n            let gender = find(formData, 'field', 'gender');\n            if(gender) {\n              gender.value = this.$route.query.sex === 'M' ? 'male' : \"female\";\n              gender.options.forEach(item=> { if(item.value !== gender.value) item.disabled = true });\n            }\n            let birth = find(formData, 'field', 'birth');\n            if(birth) {\n              let no = this.$route.query.social_no;\n              birth.value = `${no.substring(0,4)}-${no.substring(4,6)}-${no.substring(6,8)}`;\n              birth.disabled = true;\n            }  \n            let name = find(formData, 'field', 'name');\n            if(name) {\n              name.value = this.$route.query.name;\n              name.disabled = true;\n            }\n            let phone = find(formData, 'field', 'phone');\n            if(phone) {\n              phone.value = this.$route.query.phone;\n              phone.disabled = true;\n            }\n          }\n\n          this.formData = formData;\n        })\n      }\n  },\n  computed: {\n    btnStyle() {\n        return {\n          fontSize: '14px',\n          fontWeight: '500',\n          backgroundColor: this.brandBgColor.primary.backgroundColor,\n          color: this.brandColor.white.color,\n          width: '30%',\n          height: '48px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: '12px',\n          borderRadius: this.radius.borderRadius,\n          pointer: 'cursor'\n        }\n      },\n    inputCustom() {\n      return {\n        border: this.brandBorder.main.border,\n        borderRadius: '6px',\n        backgroundColor: 'white',\n        padding: '12px 16px',\n        color: this.brandColor.main,\n        fontSize: '14px',\n        height: '48px',\n      }\n    },\n    computedFormData() {\n        //본인인증 필드 보유 여부 확인\n        let verify = this.formData.filter(item => { return item.type === 'verify' });\n        if(verify.length === 1 && this.$route.query.type === undefined) {\n          this.isVerify = true;\n          this.formTypeCustomLabel.label = false;\n         return verify; \n        } else {\n          this.isVerify = false;\n          this.formTypeCustomLabel.label = true;\n          return this.formData.filter(item => {return item.type !== 'verify' });\n        }\n      },\n    addressButtonCustom() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      styles.padding = '12px 20px';\n      return styles;\n    },\n    inputWrapStyle() {\n      return {\n        display: 'none'\n      }\n    },\n    contentStyle() {\n      return {\n        borderTop: `1px solid ${this.getColor('기본 테두리선 색상')}`,\n        borderBottom: `1px solid ${this.getColor('기본 테두리선 색상')}`,\n        padding: '20px 28px 32px'\n      }\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"],"sourceRoot":"src/components/Components/Block"}]}