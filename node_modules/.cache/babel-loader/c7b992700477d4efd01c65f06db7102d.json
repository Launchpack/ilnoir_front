{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Form/CInputImgUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Form/CInputImgUploader.vue","mtime":1605259987000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mard/dev/ilnoir/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from \"@/components/Mixins/FormMixin\";\nimport ImageUploaderMixin from \"@/components/Mixins/ImageUploaderMixin\";\nimport uuidv4 from \"uuid/v4\";\nexport default {\n  name: \"c-input-imgUploader\",\n  mixins: [ImageUploaderMixin, FormMixin],\n  props: {\n    data: {\n      type: String,\n      required: false\n    },\n    label: {\n      type: String,\n      required: false\n    },\n    index: {\n      type: Number,\n      required: false\n    },\n    borderStyle: {\n      type: String,\n      default: \"rectangle\" // circle, rectangle, radius\n\n    },\n    align: {\n      type: String,\n      default: \"left\" // left, center, right\n\n    },\n    isImgDeletable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      uid: \"\",\n      file: this.value,\n      imageArray: []\n    };\n  },\n  created: function created() {\n    this.uid = uuidv4(); // if(this.data!==undefined) {\n    //   this.properties.img = this.objectValue(this.getDataSet(), this.properties.data);\n    // }\n    //this.element('a-input-label').properties.enable = true;\n  },\n  computed: {\n    alignStyle: function alignStyle() {\n      var deco = {};\n\n      if (this.align === \"center\") {\n        deco.display = \"flex\";\n        deco.justifyContent = \"center\";\n      }\n\n      return deco;\n    },\n    viewStyles: function viewStyles() {\n      var deco = {\n        border: \"1px solid \" + this.getColor(\"기본 테두리선 색상\"),\n        backgroundImage: \"url(\" + this.file + \")\",\n        marginTop: \"8px\",\n        marginRight: \"6px\",\n        width: \"80px\",\n        height: \"80px\"\n      };\n\n      if (this.imgUploaderStyle) {\n        if (this.imgUploaderStyle.width) deco.width = this.imgUploaderStyle.width;\n        if (this.imgUploaderStyle.height) deco.height = this.imgUploaderStyle.height;\n      }\n\n      switch (this.borderStyle) {\n        case \"circle\":\n          deco.borderRadius = \"50%\";\n          break;\n\n        case \"radius\":\n          deco.borderRadius = this.radius.borderRadius;\n          break;\n      }\n\n      return deco;\n    },\n    closeStyles: function closeStyles() {\n      return {};\n    },\n    addIconStyle: function addIconStyle() {\n      return {\n        color: this.getColor(\"브랜드 강조 색상\")\n      };\n    }\n  },\n  watch: {\n    value: function value(n) {\n      if (Array.isArray(this.file)) {\n        this.file = n;\n      } else {\n        this.file = this.image(n);\n      }\n    }\n  },\n  methods: {\n    onFileChange: function () {\n      var _onFileChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(e) {\n        var files, length, j;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$store.commit(\"setLoadingSpinner\", true);\n                files = e.target.files || e.dataTransfer.files;\n\n                if (files.length) {\n                  _context.next = 5;\n                  break;\n                }\n\n                this.$store.commit(\"setLoadingSpinner\", false);\n                return _context.abrupt(\"return\");\n\n              case 5:\n                length = Object.keys(files).length;\n                j = 0;\n\n              case 7:\n                if (!(j < length)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.loadFile(files[j], length, j);\n\n              case 10:\n                j++;\n                _context.next = 7;\n                break;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onFileChange(_x) {\n        return _onFileChange.apply(this, arguments);\n      }\n\n      return onFileChange;\n    }(),\n    loadFile: function loadFile(file, length, index) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = function (f) {\n          var params = {\n            f: f,\n            file: file,\n            length: length,\n            index: index\n          };\n          resolve(params);\n        };\n      }).then(function (params) {\n        return _this.loadImage(params.f, params.file, params.length, params.index);\n      }).catch(function (err) {\n        _this.$store.commit(\"setLoadingSpinner\", false);\n\n        console.log(err);\n      });\n    },\n    loadImage: function loadImage(f, file, length, index) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          var params = {\n            file: file,\n            image: image,\n            length: length,\n            index: index\n          };\n          resolve(params);\n        };\n\n        image.src = f.target.result;\n      }).then(function (params) {\n        var afterAction = function (file, resizeImg, length, index) {\n          var self = this;\n          self.imageArray.push(resizeImg);\n\n          if (length === self.imageArray.length) {\n            if (length === 1) self.file = self.imageArray[0];else self.file = self.imageArray;\n            self.$emit(\"update:value\", self.file);\n            self.imageArray = [];\n            self.$store.commit(\"setLoadingSpinner\", false);\n          }\n        }.bind(_this2);\n\n        return _this2.getFixedImage(params.file, params.image, params.length, params.index, afterAction); // return this.getFixedImage(params.file, params.image, params.length, params.index);\n      }).catch(function (err) {\n        _this2.$store.commit(\"setLoadingSpinner\", false);\n\n        console.log(err);\n      });\n    },\n    deleteImg: function deleteImg() {\n      if (this.file && this.file !== \"\") {\n        this.file = \"\";\n        this.$emit(\"delImg\", this.index);\n      }\n    }\n  }\n};",{"version":3,"sources":["CInputImgUploader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    :style=\"[containerStyle, alignStyle]\"\r\n    class=\"c-input-imgUploader-container c-root position-relative\"\r\n  >\r\n    <!-- 레이블 -->\r\n    <div\r\n      v-if=\"formType.label && label\"\r\n      :class=\"{hiddenLabel: index >= 1}\"\r\n      :style=\"labelStyle\"\r\n    >{{ label }}</div>\r\n\r\n    <!-- 이미지 업로더 -->\r\n    <div class=\"imgUploader-view flex-center\" :style=\"viewStyles\">\r\n      <!-- 이미지 데이터가 있는 경우 -->\r\n      <input\r\n        class=\"imgUploader-input\"\r\n        v-if=\"(file === undefined || file==='')\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        @click.stop\r\n        :id=\"uid\"\r\n        @change=\"onFileChange\"\r\n        multiple=\"multiple\"\r\n      />\r\n      <label\r\n        class=\"imgUploader-box\"\r\n        v-if=\"(file === undefined || file==='')\"\r\n        @click.stop\r\n        :for=\"uid\"\r\n      >\r\n        <!-- :style=\"boxStyles\"> -->\r\n        <i class=\"material-icons\" :style=\"addIconStyle\">add</i>\r\n      </label>\r\n\r\n      <!-- 이미지 데이터가 없는 경우 -->\r\n      <div v-if=\"file && file!==''\" style=\"position: relative; width: 100%; height: 100%;\">\r\n        <!-- 닫기버튼 -->\r\n        <i v-if=\"file && file!=='' && isImgDeletable\"\r\n          class=\"imgUploader-close material-icons\"\r\n          style=\"cursor: pointer;\"\r\n          :style=\"closeStyles\"\r\n          @click.stop.prevent=\"deleteImg\"\r\n        >close</i>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FormMixin from \"@/components/Mixins/FormMixin\";\r\nimport ImageUploaderMixin from \"@/components/Mixins/ImageUploaderMixin\";\r\nimport uuidv4 from \"uuid/v4\";\r\nexport default {\r\n  name: \"c-input-imgUploader\",\r\n  mixins: [ImageUploaderMixin, FormMixin],\r\n  props: {\r\n    data: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    index: {\r\n      type: Number,\r\n      required: false\r\n    },\r\n    borderStyle: {\r\n      type: String,\r\n      default: \"rectangle\" // circle, rectangle, radius\r\n    },\r\n    align: {\r\n      type: String,\r\n      default: \"left\" // left, center, right\r\n    },\r\n    isImgDeletable: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      uid: \"\",\r\n      file: this.value,\r\n      imageArray: []\r\n    };\r\n  },\r\n  created() {\r\n    this.uid = uuidv4();\r\n    // if(this.data!==undefined) {\r\n    //   this.properties.img = this.objectValue(this.getDataSet(), this.properties.data);\r\n    // }\r\n    //this.element('a-input-label').properties.enable = true;\r\n  },\r\n  computed: {\r\n    alignStyle() {\r\n      let deco = {};\r\n      if (this.align === \"center\") {\r\n        deco.display = \"flex\";\r\n        deco.justifyContent = \"center\";\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    viewStyles() {\r\n      let deco = {\r\n        border: \"1px solid \" + this.getColor(\"기본 테두리선 색상\"),\r\n        backgroundImage: \"url(\" + this.file + \")\",\r\n        marginTop: \"8px\",\r\n        marginRight: \"6px\",\r\n        width: \"80px\",\r\n        height: \"80px\"\r\n      };\r\n\r\n      if (this.imgUploaderStyle) {\r\n        if (this.imgUploaderStyle.width)\r\n          deco.width = this.imgUploaderStyle.width;\r\n        if (this.imgUploaderStyle.height)\r\n          deco.height = this.imgUploaderStyle.height;\r\n      }\r\n\r\n      switch (this.borderStyle) {\r\n        case \"circle\":\r\n          deco.borderRadius = \"50%\";\r\n          break;\r\n        case \"radius\":\r\n          deco.borderRadius = this.radius.borderRadius;\r\n          break;\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    closeStyles() {\r\n      return {};\r\n    },\r\n    addIconStyle() {\r\n      return { color: this.getColor(\"브랜드 강조 색상\") };\r\n    }\r\n  },\r\n  watch: {\r\n    value(n) {\r\n      if (Array.isArray(this.file)) {\r\n        this.file = n;\r\n      } else {\r\n        this.file = this.image(n);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async onFileChange(e) {\r\n      this.$store.commit(\"setLoadingSpinner\", true);\r\n      let files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) {\r\n        this.$store.commit(\"setLoadingSpinner\", false);\r\n        return;\r\n      }\r\n\r\n      let length = Object.keys(files).length;\r\n\r\n      for (let j = 0; j < length; j++) {\r\n        await this.loadFile(files[j], length, j);\r\n      }\r\n    },\r\n    loadFile(file, length, index) {\r\n      return new Promise((resolve, reject) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = f => {\r\n          let params = {\r\n            f: f,\r\n            file: file,\r\n            length: length,\r\n            index: index\r\n          };\r\n          resolve(params);\r\n        };\r\n      })\r\n        .then(params => {\r\n          return this.loadImage(\r\n            params.f,\r\n            params.file,\r\n            params.length,\r\n            params.index\r\n          );\r\n        })\r\n        .catch(err => {\r\n          this.$store.commit(\"setLoadingSpinner\", false);\r\n          console.log(err);\r\n        });\r\n    },\r\n    loadImage(f, file, length, index) {\r\n      return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.onload = () => {\r\n          let params = {\r\n            file: file,\r\n            image: image,\r\n            length: length,\r\n            index: index\r\n          };\r\n          resolve(params);\r\n        };\r\n        image.src = f.target.result;\r\n      })\r\n        .then(params => {\r\n          let afterAction = function(file, resizeImg, length, index) {\r\n            let self = this;\r\n            self.imageArray.push(resizeImg);\r\n            if (length === self.imageArray.length) {\r\n              if (length === 1) self.file = self.imageArray[0];\r\n              else self.file = self.imageArray;\r\n              self.$emit(\"update:value\", self.file);\r\n              self.imageArray = [];\r\n              self.$store.commit(\"setLoadingSpinner\", false);\r\n            }\r\n          }.bind(this);\r\n\r\n          return this.getFixedImage(\r\n            params.file,\r\n            params.image,\r\n            params.length,\r\n            params.index,\r\n            afterAction\r\n          );\r\n          // return this.getFixedImage(params.file, params.image, params.length, params.index);\r\n        })\r\n        .catch(err => {\r\n          this.$store.commit(\"setLoadingSpinner\", false);\r\n          console.log(err);\r\n        });\r\n    },\r\n    deleteImg() {\r\n      if (this.file && this.file !== \"\") {\r\n        this.file = \"\";\r\n        this.$emit(\"delImg\", this.index);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n// @import '~assets/css/ui_main'\r\n.imgUploader-view {\r\n  background-size: cover;\r\n  background-position: center;\r\n}\r\n\r\n.imgUploader-input {\r\n  position: fixed;\r\n  top: -20px;\r\n  left: -20px;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.imgUploader-box {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.imgUploader-close {\r\n  cursor: pointer;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  color: #eee;\r\n  border-radius: 50%;\r\n  padding: 2px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  z-index: 10;\r\n}\r\n\r\n.hiddenLabel {\r\n  visibility: hidden;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}