{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockProfile.vue","mtime":1605259999000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from \"@/components/Mixins/FormMixin\";\nimport AuthMixin from \"@/components/Mixins/AuthMixin\";\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\";\nexport default {\n  name: 'BlockProfile',\n  components: {},\n  mixins: [FormMixin, AuthMixin, FormCustomMixin],\n  props: {},\n  data: function data() {\n    return {\n      \"check\": false,\n      \"formData\": []\n    };\n  },\n  created: function created() {\n    this.getForm();\n  },\n  methods: {\n    save: function save() {\n      var _this = this;\n\n      // 소셜로그인 여부\n      if (this.isSocialLogin) {\n        this.updateInfo();\n      } // 이메일로그인\n      else {\n          var password = find(this.formData, 'field', 'password').value;\n\n          if (!password) {\n            this.toast('비밀번호를 입력하세요.');\n            return;\n          } // 비밀번호 체크 api\n\n\n          this.$axios.post('auth/user/login', {\n            username: find(this.formData, 'field', 'username').value,\n            password: find(this.formData, 'field', 'password').value\n          }).then(function (res) {\n            if (res.status === 200) {\n              _this.updateInfo();\n            }\n          }).catch(function (error) {\n            _this.toast('잘못된 비밀번호 입니다.');\n          });\n        }\n    },\n    updateInfo: function updateInfo() {\n      var _this2 = this;\n\n      var result = this.getParamData(this.formData);\n\n      if (result.enable) {\n        this.$axios.patch(\"user/\".concat(this.$store.getters.user.user_id), result.params).then(function (res) {\n          if (res.status === 200) {\n            _this2.toast('내 정보가 변경되었습니다.');\n\n            _this2.setUserData(res.data);\n\n            _this2.$router.replace('home');\n          }\n        }).catch(function (err) {\n          if (!err.response.data.message) _this2.toast(err.response.data.detail);else _this2.toast(err.response.data.message);\n        });\n      }\n    },\n    getForm: function getForm() {\n      var _this3 = this;\n\n      this.$axios.get('public/member/formdata/2').then(function (res) {\n        _this3.formData = _this3.setForm(res.data);\n        var profileForm = find(_this3.formData, 'field', 'profile');\n\n        if (profileForm && profileForm.format === 'CImgUploader') {\n          profileForm.elType = 'c-input-imgUploader-single';\n          profileForm.format = 'CImgUploaderSingle';\n        }\n\n        var result = [];\n\n        _this3.formData.forEach(function (item, idx) {\n          // 폼 ID 수정 불가\n          if (item.field === 'username') item.disabled = true;\n          var user = _this3.$store.getters.user;\n          var value = user[item.field];\n          if (value) item.value = value; // 소셜로그인 여부\n\n          if (_this3.isSocialLogin) {\n            if (['username', 'password', 'password_re'].indexOf(item.field) > -1) {\n              item.enable = false;\n              item.validate = {\n                required: false,\n                valid_required: false\n              };\n            }\n          } // 이메일 로그인\n          else if (user.username !== undefined) {\n              if (['email', 'password_re'].indexOf(item.field) > -1) {\n                item.enable = false;\n                item.validate = {\n                  required: false,\n                  valid_required: false\n                };\n              }\n            }\n\n          result.push(item);\n        });\n\n        _this3.formData = result;\n      });\n    }\n  },\n  computed: {\n    user: function user() {\n      return this.$store.getters.user;\n    },\n    computedformData: function computedformData() {\n      var result = [];\n      this.formData.forEach(function (item) {\n        if (item.enable) result.push(item);\n      });\n      return result;\n    },\n    addressButtonCustom: function addressButtonCustom() {\n      var styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      styles.padding = '12px 20px';\n      return styles;\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["BlockProfile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <!--내정보수정 폼 요소-->\n  <component :is=\"form.elType\" v-for=\"(form,idx) in formData\" :key=\"'form-'+idx\"\n             v-bind=\"form\" :value.sync=\"form.value\"\n             :formType=\"formTypeCustomLabel\"\n             :containerCustomStyle=\"form.containerCustom\"\n             :labelCustomStyle=\"labelCustom\"\n             :inputCustomStyle=\"inputCustom\"\n             :addressInputWrapStyle=\"{marginTop: '8px'}\"\n             :buttonCustomStyle=\"buttonCustom\"\n             :addressButtonCustomStyle=\"addressButtonCustom\"></component>\n\n  <!--내정보수정 버튼-->\n  <div :style=\"buttonCustom\" style=\"margin: 48px 0 20px;\" @click=\"save\">변경하기</div>\n</div>  \n  \n  \n<!--<div>-->\n    <!-- 내 정보 수정 폼 -->\n<!--    <component :is=\"form.elType\" -->\n<!--      v-for=\"(form,idx) in computedformData\" :key=\"'form-'+idx\"-->\n<!--      v-bind=\"form\"-->\n<!--      :value.sync=\"form.value\"-->\n<!--      :formType=\"formTypeData\"></component>-->\n<!--    <div style=\"margin-top: 24px\">-->\n<!--      <btn :color=\"brandColor.white\"-->\n<!--           :backgroundColor=\"brandBgColor.brand\"-->\n<!--           @clicked=\"save\">변경하기</btn>-->\n<!--    </div>-->\n<!--  </div>-->\n</template>\n<script>\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockProfile',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    AuthMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"check\": false,\n      \"formData\": []\n    }\n  },\n  created() {\n      this.getForm();\n    },\n  \n  methods: {\n    save() {\n        // 소셜로그인 여부\n        if (this.isSocialLogin) {\n          this.updateInfo();\n        }\n        // 이메일로그인\n        else {\n          let password = find(this.formData, 'field', 'password').value;\n          if(!password) {\n            this.toast('비밀번호를 입력하세요.');\n            return;\n          }\n          // 비밀번호 체크 api\n          this.$axios.post('auth/user/login', {\n            username: find(this.formData, 'field', 'username').value,\n            password: find(this.formData, 'field', 'password').value\n          }).then(res=> {\n            if(res.status===200) {\n              this.updateInfo();\n            }\n          }).catch(error=> {\n            this.toast('잘못된 비밀번호 입니다.');\n          });\n        }\n      },\n    updateInfo() {\n        let result = this.getParamData(this.formData);\n        if(result.enable) {\n          this.$axios.patch(`user/${this.$store.getters.user.user_id}`,\n            result.params).then(res=>{\n            if(res.status===200) {\n              this.toast('내 정보가 변경되었습니다.');\n              this.setUserData(res.data);\n              this.$router.replace('home');\n            }\n          }).catch(err=> {\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      },\n    getForm() {\n        this.$axios.get('public/member/formdata/2').then(res=>{\n          this.formData = this.setForm(res.data);\n          \n          let profileForm = find(this.formData, 'field', 'profile');\n          if (profileForm && profileForm.format==='CImgUploader') {\n            profileForm.elType = 'c-input-imgUploader-single'\n            profileForm.format = 'CImgUploaderSingle'\n          }\n\n          let result = [];\n\n          this.formData.forEach((item,idx) => {\n            // 폼 ID 수정 불가\n            if (item.field==='username') item.disabled = true;\n            let user = this.$store.getters.user;\n            let value = user[item.field]\n            if(value) item.value = value;\n\n            // 소셜로그인 여부\n            if (this.isSocialLogin) {\n              if (['username','password','password_re'].indexOf(item.field)>-1) {\n                item.enable = false;\n                item.validate = {\n                  required: false,\n                  valid_required: false\n                };\n              }\n            }\n            // 이메일 로그인\n            else if (user.username!==undefined) {\n              if (['email','password_re'].indexOf(item.field)>-1) {\n                item.enable = false;\n                item.validate = {\n                  required: false,\n                  valid_required: false\n                };\n              }\n            }\n            \n            result.push(item);\n          })\n          \n          this.formData = result;\n          \n        })\n      }\n  },\n  computed: {\n    user() {\n        return this.$store.getters.user;\n      },\n    computedformData() {\n        let result = [];\n        this.formData.forEach(item => {\n          if (item.enable) result.push(item);\n        })\n        return result;\n      },\n    addressButtonCustom() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      styles.padding = '12px 20px';\n      return styles;\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"],"sourceRoot":"src/components/Components/Block"}]}