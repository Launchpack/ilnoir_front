{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/eslint-loader/index.js??ref--13-0!/Users/mard/dev/ilnoir/src/utils/helper/object-helper.js","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/utils/helper/object-helper.js","mtime":1605259993000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\";\nimport _typeof from \"/Users/mard/dev/ilnoir/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport { currency, currencyWon, currencyNum, currencyKor, thousand } from '@/utils/helper/format-helper';\n/**\r\n * 객체의 Deep copy를 위한 함수입니다.\r\n * @param {Object} obj - 복제할 자바스크립트 객체.\r\n * @returns {Object} Deep copy로 복제된 객체.\r\n */\n\nfunction cloneItem(obj) {\n  if (obj === null || _typeof(obj) !== 'object') return obj;\n  var copy = obj.constructor();\n\n  for (var attr in obj) {\n    if (typeof obj[attr] === 'function' || attr.indexOf('_') === 0 || attr === 'request' || attr.indexOf('$') === 0 && attr !== '$selected' && attr !== '$hover' && attr !== '$fill') continue;\n\n    if (obj.hasOwnProperty(attr) && obj[attr] !== undefined) {\n      copy[attr] = cloneItem(obj[attr]);\n    }\n  }\n\n  return copy;\n}\n\nfunction objectValue(target, value) {\n  var _this = this;\n\n  if (target === undefined || value === undefined) return value;\n  value = value.replace('{', '').replace('}', ''); // 연산이 있는 경우\n\n  var calcs = ['add', 'sub'];\n\n  for (var i = 0; i < calcs.length; i++) {\n    var calc = calcs[i];\n\n    if (value.indexOf(\"__\".concat(calc, \"__\")) > -1) {\n      var values = value.split(\"__\".concat(calc, \"__\"));\n      var filter = '';\n\n      if (values[1].indexOf('|')) {\n        var filters = values[1].split('|');\n        filter = filters[filters.length - 1];\n        if (filter.indexOf('.') > -1) filter = '';else {\n          values[1] = values[1].replace('|' + filter, ''); // 필터 제거\n        }\n      }\n\n      var val1 = this.objectValue(target, values[0]);\n      var val2 = this.objectValue(target, values[1]);\n      if (val1 === undefined) val1 = 0;\n      if (val2 === undefined) val2 = 0;\n\n      if (calc === 'add') {\n        var result = val1 + val2;\n\n        if (filter !== '') {\n          return this[filter](result);\n        } else {\n          return val1 + val2;\n        }\n      } else if (calc === 'sub') {\n        var _result = val1 - val2;\n\n        if (filter !== '') {\n          return this[filter](_result);\n        } else {\n          return val1 - val2;\n        }\n      }\n    }\n  }\n\n  value = value.split('.');\n\n  var _loop = function _loop(_i2) {\n    var key = value[_i2]; // target에 key로 없는 값. 건너뛰기\n\n    if (['store', 'products.', 'product_list.'].indexOf(key) > -1) {\n      _i = _i2;\n      return \"continue\";\n    } // key에 필터 적용된 경우(ex> {product.price | currency}\n    else if (key.indexOf('|') > -1) {\n        var keys = key.split('|'); // 필터가 목록인 경우 (ex> checkedList|list|sum.product.total_price|currency)\n\n        if (keys[1] === 'list') {\n          // 목록 내부에 해당 값에 대한 합계\n          if (keys[2] === 'sum') {\n            var targetValue = 0;\n            var _filter = '';\n            target[keys[0]].forEach(function (item) {\n              for (var idx = _i2 + 1; idx < value.length; idx++) {\n                var childKey = value[idx];\n\n                if (childKey.indexOf('|') > -1) {\n                  var childKeys = childKey.split('|');\n                  _filter = childKeys[1];\n                  childKey = childKeys[0];\n                }\n\n                item = item[childKey];\n              }\n\n              targetValue += parseInt(item);\n            });\n\n            if (_filter !== '') {\n              target = _this[_filter](targetValue);\n            } else {\n              target = targetValue;\n            }\n\n            _i = _i2;\n            return \"break\";\n          }\n        } // 그외, 필터에 해당하는 함수 적용하여 결과 얻기\n        else {\n            switch (keys[1]) {\n              case 'currency':\n                target = currency(target[keys[0]]);\n                break;\n\n              case 'currencyNum':\n                target = currencyNum(target[keys[0]]);\n                break;\n\n              case 'currencyWon':\n                target = currencyWon(target[keys[0]]);\n                break;\n\n              case 'currencyKor':\n                target = currencyKor(target[keys[0]]);\n                break;\n\n              case 'thousand':\n                target = thousand(target[keys[0]]);\n                break;\n            }\n          }\n      } // 맞춤 디비 데이터 매핑 (ex> {param.이름})\n      else if (key.indexOf('param') > -1) {\n          if (key === 'param') key = 'params';\n\n          if (target[key]) {\n            var param_val = find(target[key], 'name', value[++_i2]).value; // 값이 array형식인 경우\n\n            if (Array.isArray(param_val)) {\n              _i = _i2;\n              return {\n                v: param_val[0].name\n              };\n            } else {\n              _i = _i2;\n              return {\n                v: param_val\n              };\n            }\n          } else {\n            _i = _i2;\n            return {\n              v: undefined\n            };\n          }\n        } // {store.commonValue.filters}\n        else if (key.indexOf('filters') > -1) {\n            var _filters = '';\n            Object.keys(target).forEach(function (key) {\n              if (key.indexOf('filter_') > -1) {\n                if (_filters !== '') _filters += ', ';\n                _filters += target[key];\n              }\n            });\n            target = _filters;\n          } else {\n            target = target[key]; // this.$store.getters.backendData.product\n          }\n\n    if (target === undefined) {\n      _i = _i2;\n      return {\n        v: undefined\n      };\n    }\n\n    _i = _i2;\n  };\n\n  for (var _i = 0; _i < value.length; _i++) {\n    var _ret = _loop(_i);\n\n    if (_ret === \"continue\") continue;\n    if (_ret === \"break\") break;\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n\n  return target;\n}\n/**\r\n * 빈 오브젝트인지 체크.\r\n * @param {Object} obj - 체크할 객체.\r\n * @returns {boolean}\r\n */\n\n\nfunction isEmptyObj(obj) {\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) return false;\n  }\n\n  return JSON.stringify(obj) === JSON.stringify({});\n} //목록에서 특정 키값을 문자열로 가져오기([{val:1},{val:2}] -> '1,2')\n\n\nfunction getStringArray(arr, key) {\n  var str = '';\n\n  for (var i = 0; i < arr.length; i++) {\n    if (i > 0) str += ',';\n    str += arr[i][key].toString();\n  }\n\n  return str;\n}\n/**\r\n * URL에 필터 값 추가\r\n */\n\n\nfunction urlAppendFilter(filtered, sorted, url) {\n  filtered = cloneItem(filtered);\n\n  if (Array.isArray(filtered)) {\n    if (filtered.length > 0) {\n      // location 따로 처리\n      for (var i = filtered.length - 1; i >= 0; i--) {\n        var item = filtered[i];\n\n        if (Object.keys(item).indexOf('location') > -1) {\n          url += \"&location=\".concat(item.location);\n          filtered.remove(i);\n          break;\n        }\n\n        if (item.set && item.set.length > 0) {\n          for (var j = item.set.length - 1; j >= 0; j--) {\n            var setItem = item.set[j];\n\n            if (setItem.value === '') {\n              item.set.remove(j);\n            }\n          }\n\n          if (item.set.length === 0) {\n            filtered.remove(i);\n          }\n        }\n      }\n\n      url += '&filtering=' + encodeURIComponent(JSON.stringify(filtered));\n    }\n  } else {\n    var keys = Object.keys(filtered);\n\n    if (keys.length > 0) {\n      for (var idx = 0; idx < keys.length; idx++) {\n        var key = keys[idx];\n        var filter = filtered[key]; // 카테고리(복수 선택)\n\n        if (key === 'category') {\n          url += \"&\".concat(key, \"=\").concat(getStringArray(filter, 'value'));\n        } // 금액 (최소 ~ 최대)\n        else if (key === 'price_start' || key === 'price_end') {\n            url += \"&\".concat(key, \"=\").concat(filter.toString());\n          } // 지역\n          else if (key === 'region') {\n              url += \"&\".concat(key, \"=\").concat(filter.sigungu.id);\n            } // 좌표\n            else if (key === 'location') {\n                url += ',distance';\n                if (filter !== undefined && filter !== 'undefined,undefined') url += \"&\".concat(key, \"=\").concat(filter);\n              }\n      }\n    }\n  }\n\n  if (sorted && sorted.value) {\n    if (url.indexOf('?') > -1) url += '&ordering=' + sorted.value;else url += '?ordering=' + sorted.value;\n  }\n\n  return url;\n}\n/**\r\n * Convert Color object to hex string.\r\n * @param {Object} lpColor - Color 오브젝트\r\n * @param {function} brandHandler - 브랜드 컬러 가져오기 함수\r\n */\n\n\nfunction colorToString(lpColor) {\n  return \"rgba(\".concat(lpColor.r, \",\").concat(lpColor.g, \",\").concat(lpColor.b, \",\").concat(lpColor.a, \")\");\n}\n\nexport { cloneItem, objectValue, isEmptyObj, urlAppendFilter, colorToString };",{"version":3,"sources":["/Users/mard/dev/ilnoir/src/utils/helper/object-helper.js"],"names":["currency","currencyWon","currencyNum","currencyKor","thousand","cloneItem","obj","copy","constructor","attr","indexOf","hasOwnProperty","undefined","objectValue","target","value","replace","calcs","i","length","calc","values","split","filter","filters","val1","val2","result","key","keys","targetValue","forEach","item","idx","childKey","childKeys","parseInt","param_val","find","Array","isArray","name","Object","isEmptyObj","prop","JSON","stringify","getStringArray","arr","str","toString","urlAppendFilter","filtered","sorted","url","location","remove","set","j","setItem","encodeURIComponent","sigungu","id","colorToString","lpColor","r","g","b","a"],"mappings":";;;;;;;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,WAA/B,EAA4CC,WAA5C,EAAyDC,QAAzD,QAAyE,8BAAzE;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIA,GAAG,KAAK,IAAR,IAAgB,QAAOA,GAAP,MAAgB,QAApC,EACE,OAAOA,GAAP;AACF,MAAIC,IAAI,GAAGD,GAAG,CAACE,WAAJ,EAAX;;AACA,OAAK,IAAIC,IAAT,IAAiBH,GAAjB,EAAsB;AACpB,QAAG,OAAOA,GAAG,CAACG,IAAD,CAAV,KAAsB,UAAtB,IAAoCA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAoB,CAAxD,IAA6DD,IAAI,KAAK,SAAtE,IACAA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAoB,CAApB,IAAyBD,IAAI,KAAK,WAAlC,IAAkDA,IAAI,KAAK,QAA3D,IAAuEA,IAAI,KAAK,OADnF,EAEE;;AAEF,QAAIH,GAAG,CAACK,cAAJ,CAAmBF,IAAnB,KAA4BH,GAAG,CAACG,IAAD,CAAH,KAAYG,SAA5C,EAAuD;AACrDL,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACC,GAAG,CAACG,IAAD,CAAJ,CAAtB;AACD;AACF;;AAED,SAAOF,IAAP;AACD;;AAGD,SAASM,WAAT,CAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AAAA;;AAClC,MAAGD,MAAM,KAAKF,SAAX,IAAwBG,KAAK,KAAKH,SAArC,EACE,OAAOG,KAAP;AAEFA,EAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,GAAd,EAAkB,EAAlB,EAAsBA,OAAtB,CAA8B,GAA9B,EAAkC,EAAlC,CAAR,CAJkC,CAMlC;;AACA,MAAIC,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,CAAZ;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,KAAK,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,QAAIE,IAAI,GAAGH,KAAK,CAACC,CAAD,CAAhB;;AACA,QAAGH,KAAK,CAACL,OAAN,aAAmBU,IAAnB,WAA6B,CAAC,CAAjC,EAAoC;AAClC,UAAIC,MAAM,GAAGN,KAAK,CAACO,KAAN,aAAiBF,IAAjB,QAAb;AACA,UAAIG,MAAM,GAAG,EAAb;;AACA,UAAGF,MAAM,CAAC,CAAD,CAAN,CAAUX,OAAV,CAAkB,GAAlB,CAAH,EAA2B;AACzB,YAAIc,OAAO,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUC,KAAV,CAAgB,GAAhB,CAAd;AACAC,QAAAA,MAAM,GAAGC,OAAO,CAACA,OAAO,CAACL,MAAR,GAAe,CAAhB,CAAhB;AACA,YAAGI,MAAM,CAACb,OAAP,CAAe,GAAf,IAAoB,CAAC,CAAxB,EACEa,MAAM,GAAG,EAAT,CADF,KAEK;AACHF,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAN,CAAUL,OAAV,CAAkB,MAAIO,MAAtB,EAA8B,EAA9B,CAAZ,CADG,CAC+C;AACnD;AACF;;AACD,UAAIE,IAAI,GAAG,KAAKZ,WAAL,CAAiBC,MAAjB,EAAyBO,MAAM,CAAC,CAAD,CAA/B,CAAX;AACA,UAAIK,IAAI,GAAG,KAAKb,WAAL,CAAiBC,MAAjB,EAAyBO,MAAM,CAAC,CAAD,CAA/B,CAAX;AAEA,UAAGI,IAAI,KAAKb,SAAZ,EAAuBa,IAAI,GAAG,CAAP;AACvB,UAAGC,IAAI,KAAKd,SAAZ,EAAuBc,IAAI,GAAG,CAAP;;AAEvB,UAAGN,IAAI,KAAK,KAAZ,EAAmB;AACjB,YAAIO,MAAM,GAAGF,IAAI,GAAGC,IAApB;;AAEA,YAAGH,MAAM,KAAK,EAAd,EAAkB;AAChB,iBAAO,KAAKA,MAAL,EAAaI,MAAb,CAAP;AACD,SAFD,MAIK;AACH,iBAAOF,IAAI,GAAGC,IAAd;AACD;AACF,OAVD,MAWK,IAAGN,IAAI,KAAK,KAAZ,EAAmB;AACtB,YAAIO,OAAM,GAAGF,IAAI,GAAGC,IAApB;;AAEA,YAAGH,MAAM,KAAK,EAAd,EAAkB;AAChB,iBAAO,KAAKA,MAAL,EAAaI,OAAb,CAAP;AACD,SAFD,MAIK;AACH,iBAAOF,IAAI,GAAGC,IAAd;AACD;AACF;AACF;AACF;;AAEDX,EAAAA,KAAK,GAAGA,KAAK,CAACO,KAAN,CAAY,GAAZ,CAAR;;AArDkC;AAwDhC,QAAIM,GAAG,GAAGb,KAAK,CAACG,GAAD,CAAf,CAxDgC,CA0DhC;;AACA,QAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,eAAvB,EAAwCR,OAAxC,CAAgDkB,GAAhD,IAAqD,CAAC,CAAzD,EAA4D;AAAA;AAC1D;AACD,KAFD,CAIA;AAJA,SAKK,IAAGA,GAAG,CAAClB,OAAJ,CAAY,GAAZ,IAAiB,CAAC,CAArB,EAAwB;AAC3B,YAAImB,IAAI,GAAGD,GAAG,CAACN,KAAJ,CAAU,GAAV,CAAX,CAD2B,CAG3B;;AACA,YAAGO,IAAI,CAAC,CAAD,CAAJ,KAAY,MAAf,EAAuB;AACrB;AACA,cAAGA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAf,EAAsB;AACpB,gBAAIC,WAAW,GAAG,CAAlB;AACA,gBAAIP,OAAM,GAAG,EAAb;AACAT,YAAAA,MAAM,CAACe,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBE,OAAhB,CAAyB,UAAAC,IAAI,EAAI;AAC/B,mBAAI,IAAIC,GAAG,GAACf,GAAC,GAAC,CAAd,EAAiBe,GAAG,GAAClB,KAAK,CAACI,MAA3B,EAAmCc,GAAG,EAAtC,EAA0C;AACxC,oBAAIC,QAAQ,GAAGnB,KAAK,CAACkB,GAAD,CAApB;;AACA,oBAAGC,QAAQ,CAACxB,OAAT,CAAiB,GAAjB,IAAsB,CAAC,CAA1B,EAA6B;AAC3B,sBAAIyB,SAAS,GAAGD,QAAQ,CAACZ,KAAT,CAAe,GAAf,CAAhB;AACAC,kBAAAA,OAAM,GAAGY,SAAS,CAAC,CAAD,CAAlB;AACAD,kBAAAA,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAApB;AACD;;AACDH,gBAAAA,IAAI,GAAGA,IAAI,CAACE,QAAD,CAAX;AACD;;AACDJ,cAAAA,WAAW,IAAIM,QAAQ,CAACJ,IAAD,CAAvB;AACD,aAXD;;AAYA,gBAAGT,OAAM,KAAK,EAAd,EAAkB;AAChBT,cAAAA,MAAM,GAAG,KAAI,CAACS,OAAD,CAAJ,CAAaO,WAAb,CAAT;AACD,aAFD,MAGK;AACHhB,cAAAA,MAAM,GAAGgB,WAAT;AACD;;AApBmB;AAqBpB;AACD;AACF,SAzBD,CA2BA;AA3BA,aA4BK;AACH,oBAAOD,IAAI,CAAC,CAAD,CAAX;AACE,mBAAK,UAAL;AACEf,gBAAAA,MAAM,GAAGd,QAAQ,CAACc,MAAM,CAACe,IAAI,CAAC,CAAD,CAAL,CAAP,CAAjB;AACA;;AACF,mBAAK,aAAL;AACEf,gBAAAA,MAAM,GAAGZ,WAAW,CAACY,MAAM,CAACe,IAAI,CAAC,CAAD,CAAL,CAAP,CAApB;AACA;;AACF,mBAAK,aAAL;AACEf,gBAAAA,MAAM,GAAGb,WAAW,CAACa,MAAM,CAACe,IAAI,CAAC,CAAD,CAAL,CAAP,CAApB;AACA;;AACF,mBAAK,aAAL;AACEf,gBAAAA,MAAM,GAAGX,WAAW,CAACW,MAAM,CAACe,IAAI,CAAC,CAAD,CAAL,CAAP,CAApB;AACA;;AACF,mBAAK,UAAL;AACEf,gBAAAA,MAAM,GAAGV,QAAQ,CAACU,MAAM,CAACe,IAAI,CAAC,CAAD,CAAL,CAAP,CAAjB;AACA;AAfJ;AAiBD;AACF,OAnDI,CAqDL;AArDK,WAsDA,IAAGD,GAAG,CAAClB,OAAJ,CAAY,OAAZ,IAAqB,CAAC,CAAzB,EAA4B;AAC/B,cAAGkB,GAAG,KAAK,OAAX,EAAoBA,GAAG,GAAG,QAAN;;AACpB,cAAGd,MAAM,CAACc,GAAD,CAAT,EAAgB;AACd,gBAAIS,SAAS,GAAGC,IAAI,CAACxB,MAAM,CAACc,GAAD,CAAP,EAAc,MAAd,EAAsBb,KAAK,CAAC,EAAEG,GAAH,CAA3B,CAAJ,CAAsCH,KAAtD,CADc,CAEd;;AACA,gBAAGwB,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAH;AAAA;AACE;AAAA,mBAAOA,SAAS,CAAC,CAAD,CAAT,CAAaI;AAApB;AADF;AAAA;AAGE;AAAA,mBAAOJ;AAAP;AAHF;AAID,WAPD;AAAA;AASE;AAAA,iBAAOzB;AAAP;AATF;AAUD,SAZI,CAcL;AAdK,aAeA,IAAGgB,GAAG,CAAClB,OAAJ,CAAY,SAAZ,IAAuB,CAAC,CAA3B,EAA8B;AACjC,gBAAIc,QAAO,GAAG,EAAd;AACAkB,YAAAA,MAAM,CAACb,IAAP,CAAYf,MAAZ,EAAoBiB,OAApB,CAA4B,UAAAH,GAAG,EAAI;AACjC,kBAAGA,GAAG,CAAClB,OAAJ,CAAY,SAAZ,IAAuB,CAAC,CAA3B,EAA8B;AAC5B,oBAAGc,QAAO,KAAK,EAAf,EAAmBA,QAAO,IAAI,IAAX;AACnBA,gBAAAA,QAAO,IAAIV,MAAM,CAACc,GAAD,CAAjB;AACD;AACF,aALD;AAMAd,YAAAA,MAAM,GAAGU,QAAT;AACD,WATI,MAWA;AACHV,YAAAA,MAAM,GAAGA,MAAM,CAACc,GAAD,CAAf,CADG,CACuB;AAC3B;;AAED,QAAGd,MAAM,KAAKF,SAAd;AAAA;AACE;AAAA,WAAOA;AAAP;AADF;;AApJgC;AAAA;;AAuDlC,OAAI,IAAIM,EAAC,GAAC,CAAV,EAAaA,EAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,EAAC,EAA9B,EAAkC;AAAA,qBAA1BA,EAA0B;;AAAA,6BAK9B;AAL8B,0BAoC1B;AApC0B;AA+FjC;;AACD,SAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAS6B,UAAT,CAAoBrC,GAApB,EAAyB;AACvB,OAAI,IAAIsC,IAAR,IAAgBtC,GAAhB,EAAqB;AACnB,QAAGA,GAAG,CAACK,cAAJ,CAAmBiC,IAAnB,CAAH,EACE,OAAO,KAAP;AACH;;AACD,SAAOC,IAAI,CAACC,SAAL,CAAexC,GAAf,MAAwBuC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA/B;AACD,C,CAID;;;AACA,SAASC,cAAT,CAAwBC,GAAxB,EAA6BpB,GAA7B,EAAkC;AAChC,MAAIqB,GAAG,GAAG,EAAV;;AACA,OAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,GAAG,CAAC7B,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIA,CAAC,GAAG,CAAR,EAAW+B,GAAG,IAAI,GAAP;AACXA,IAAAA,GAAG,IAAID,GAAG,CAAC9B,CAAD,CAAH,CAAOU,GAAP,EAAYsB,QAAZ,EAAP;AACD;;AACD,SAAOD,GAAP;AACD;AAED;AACA;AACA;;;AACA,SAASE,eAAT,CAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,GAA3C,EAAgD;AAC9CF,EAAAA,QAAQ,GAAG/C,SAAS,CAAC+C,QAAD,CAApB;;AAEA,MAAIb,KAAK,CAACC,OAAN,CAAcY,QAAd,CAAJ,EAA6B;AAC3B,QAAIA,QAAQ,CAACjC,MAAT,GAAkB,CAAtB,EAAyB;AACvB;AACA,WAAI,IAAID,CAAC,GAACkC,QAAQ,CAACjC,MAAT,GAAgB,CAA1B,EAA6BD,CAAC,IAAE,CAAhC,EAAmCA,CAAC,EAApC,EAAwC;AACtC,YAAIc,IAAI,GAAGoB,QAAQ,CAAClC,CAAD,CAAnB;;AACA,YAAGwB,MAAM,CAACb,IAAP,CAAYG,IAAZ,EAAkBtB,OAAlB,CAA0B,UAA1B,IAAsC,CAAC,CAA1C,EAA6C;AAC3C4C,UAAAA,GAAG,wBAAiBtB,IAAI,CAACuB,QAAtB,CAAH;AACAH,UAAAA,QAAQ,CAACI,MAAT,CAAgBtC,CAAhB;AACA;AACD;;AACD,YAAGc,IAAI,CAACyB,GAAL,IAAYzB,IAAI,CAACyB,GAAL,CAAStC,MAAT,GAAgB,CAA/B,EAAkC;AAChC,eAAI,IAAIuC,CAAC,GAAC1B,IAAI,CAACyB,GAAL,CAAStC,MAAT,GAAgB,CAA1B,EAA4BuC,CAAC,IAAE,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACrC,gBAAIC,OAAO,GAAG3B,IAAI,CAACyB,GAAL,CAASC,CAAT,CAAd;;AACA,gBAAGC,OAAO,CAAC5C,KAAR,KAAkB,EAArB,EAAyB;AACvBiB,cAAAA,IAAI,CAACyB,GAAL,CAASD,MAAT,CAAgBE,CAAhB;AACD;AACF;;AACD,cAAG1B,IAAI,CAACyB,GAAL,CAAStC,MAAT,KAAkB,CAArB,EAAwB;AACtBiC,YAAAA,QAAQ,CAACI,MAAT,CAAgBtC,CAAhB;AACD;AACF;AACF;;AAEDoC,MAAAA,GAAG,IAAI,gBAAgBM,kBAAkB,CAACf,IAAI,CAACC,SAAL,CAAeM,QAAf,CAAD,CAAzC;AACD;AACF,GAzBD,MA2BK;AACH,QAAIvB,IAAI,GAAGa,MAAM,CAACb,IAAP,CAAYuB,QAAZ,CAAX;;AACA,QAAIvB,IAAI,CAACV,MAAL,GAAc,CAAlB,EAAqB;AACnB,WAAK,IAAIc,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,IAAI,CAACV,MAA7B,EAAqCc,GAAG,EAAxC,EAA4C;AAC1C,YAAIL,GAAG,GAAGC,IAAI,CAACI,GAAD,CAAd;AACA,YAAIV,MAAM,GAAG6B,QAAQ,CAACxB,GAAD,CAArB,CAF0C,CAG1C;;AACA,YAAIA,GAAG,KAAK,UAAZ,EAAwB;AACtB0B,UAAAA,GAAG,eAAQ1B,GAAR,cAAemB,cAAc,CAACxB,MAAD,EAAS,OAAT,CAA7B,CAAH;AACD,SAFD,CAGA;AAHA,aAIK,IAAIK,GAAG,KAAK,aAAR,IAAyBA,GAAG,KAAK,WAArC,EAAkD;AACrD0B,YAAAA,GAAG,eAAQ1B,GAAR,cAAeL,MAAM,CAAC2B,QAAP,EAAf,CAAH;AACD,WAFI,CAGL;AAHK,eAIA,IAAItB,GAAG,KAAK,QAAZ,EAAsB;AACzB0B,cAAAA,GAAG,eAAQ1B,GAAR,cAAeL,MAAM,CAACsC,OAAP,CAAeC,EAA9B,CAAH;AACD,aAFI,CAGL;AAHK,iBAIA,IAAIlC,GAAG,KAAK,UAAZ,EAAwB;AAC3B0B,gBAAAA,GAAG,IAAI,WAAP;AACA,oBAAI/B,MAAM,KAAKX,SAAX,IAAwBW,MAAM,KAAK,qBAAvC,EACE+B,GAAG,eAAQ1B,GAAR,cAAeL,MAAf,CAAH;AACH;AACF;AACF;AACF;;AAED,MAAI8B,MAAM,IAAIA,MAAM,CAACtC,KAArB,EAA4B;AAC1B,QAAGuC,GAAG,CAAC5C,OAAJ,CAAY,GAAZ,IAAiB,CAAC,CAArB,EACE4C,GAAG,IAAI,eAAeD,MAAM,CAACtC,KAA7B,CADF,KAGEuC,GAAG,IAAI,eAAeD,MAAM,CAACtC,KAA7B;AACH;;AAED,SAAOuC,GAAP;AACD;AAGD;AACA;AACA;AACA;AACA;;;AACA,SAASS,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,wBAAeA,OAAO,CAACC,CAAvB,cAA4BD,OAAO,CAACE,CAApC,cAAyCF,OAAO,CAACG,CAAjD,cAAsDH,OAAO,CAACI,CAA9D;AACD;;AAED,SACE/D,SADF,EAEEQ,WAFF,EAGE8B,UAHF,EAIEQ,eAJF,EAKEY,aALF","sourcesContent":["import {currency, currencyWon, currencyNum, currencyKor, thousand } from '@/utils/helper/format-helper'\r\n\r\n/**\r\n * 객체의 Deep copy를 위한 함수입니다.\r\n * @param {Object} obj - 복제할 자바스크립트 객체.\r\n * @returns {Object} Deep copy로 복제된 객체.\r\n */\r\nfunction cloneItem(obj) {\r\n  if (obj === null || typeof(obj) !== 'object')\r\n    return obj;\r\n  var copy = obj.constructor();\r\n  for (var attr in obj) {\r\n    if(typeof(obj[attr]) === 'function' || attr.indexOf('_')===0 || attr === 'request' ||\r\n      (attr.indexOf('$')===0 && attr !== '$selected'  && attr !== '$hover' && attr !== '$fill'))\r\n      continue;\r\n\r\n    if (obj.hasOwnProperty(attr) && obj[attr]!==undefined) {\r\n      copy[attr] = cloneItem(obj[attr]);\r\n    }\r\n  }\r\n\r\n  return copy;\r\n}\r\n\r\n\r\nfunction objectValue(target, value) {\r\n  if(target === undefined || value === undefined)\r\n    return value;\r\n\r\n  value = value.replace('{','').replace('}','');\r\n\r\n  // 연산이 있는 경우\r\n  let calcs = ['add', 'sub'];\r\n  for(let i=0; i<calcs.length; i++) {\r\n    let calc = calcs[i];\r\n    if(value.indexOf(`__${calc}__`)>-1) {\r\n      let values = value.split(`__${calc}__`);\r\n      let filter = '';\r\n      if(values[1].indexOf('|')) {\r\n        let filters = values[1].split('|');\r\n        filter = filters[filters.length-1];\r\n        if(filter.indexOf('.')>-1)\r\n          filter = '';\r\n        else {\r\n          values[1] = values[1].replace('|'+filter, '');    // 필터 제거\r\n        }\r\n      }\r\n      let val1 = this.objectValue(target, values[0]);\r\n      let val2 = this.objectValue(target, values[1]);\r\n\r\n      if(val1 === undefined) val1 = 0;\r\n      if(val2 === undefined) val2 = 0;\r\n\r\n      if(calc === 'add') {\r\n        let result = val1 + val2;\r\n\r\n        if(filter !== '') {\r\n          return this[filter](result);\r\n        }\r\n\r\n        else {\r\n          return val1 + val2;\r\n        }\r\n      }\r\n      else if(calc === 'sub') {\r\n        let result = val1 - val2;\r\n\r\n        if(filter !== '') {\r\n          return this[filter](result);\r\n        }\r\n\r\n        else {\r\n          return val1 - val2;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  value = value.split('.');\r\n\r\n  for(let i=0; i<value.length; i++) {\r\n    let key = value[i];\r\n\r\n    // target에 key로 없는 값. 건너뛰기\r\n    if(['store', 'products.', 'product_list.'].indexOf(key)>-1) {\r\n      continue;\r\n    }\r\n\r\n    // key에 필터 적용된 경우(ex> {product.price | currency}\r\n    else if(key.indexOf('|')>-1) {\r\n      let keys = key.split('|');\r\n\r\n      // 필터가 목록인 경우 (ex> checkedList|list|sum.product.total_price|currency)\r\n      if(keys[1] === 'list') {\r\n        // 목록 내부에 해당 값에 대한 합계\r\n        if(keys[2] === 'sum') {\r\n          let targetValue = 0;\r\n          let filter = '';\r\n          target[keys[0]].forEach( item => {\r\n            for(let idx=i+1; idx<value.length; idx++) {\r\n              let childKey = value[idx];\r\n              if(childKey.indexOf('|')>-1) {\r\n                let childKeys = childKey.split('|');\r\n                filter = childKeys[1];\r\n                childKey = childKeys[0];\r\n              }\r\n              item = item[childKey];\r\n            }\r\n            targetValue += parseInt(item);\r\n          });\r\n          if(filter !== '') {\r\n            target = this[filter](targetValue);\r\n          }\r\n          else {\r\n            target = targetValue;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 그외, 필터에 해당하는 함수 적용하여 결과 얻기\r\n      else {\r\n        switch(keys[1]) {\r\n          case 'currency':\r\n            target = currency(target[keys[0]]);\r\n            break;\r\n          case 'currencyNum':\r\n            target = currencyNum(target[keys[0]]);\r\n            break;\r\n          case 'currencyWon':\r\n            target = currencyWon(target[keys[0]]);\r\n            break;\r\n          case 'currencyKor':\r\n            target = currencyKor(target[keys[0]]);\r\n            break;\r\n          case 'thousand':\r\n            target = thousand(target[keys[0]]);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 맞춤 디비 데이터 매핑 (ex> {param.이름})\r\n    else if(key.indexOf('param')>-1) {\r\n      if(key === 'param') key = 'params';\r\n      if(target[key]) {\r\n        let param_val = find(target[key], 'name', value[++i]).value;\r\n        // 값이 array형식인 경우\r\n        if(Array.isArray(param_val))\r\n          return param_val[0].name;\r\n        else\r\n          return param_val;\r\n      }\r\n      else\r\n        return undefined;\r\n    }\r\n\r\n    // {store.commonValue.filters}\r\n    else if(key.indexOf('filters')>-1) {\r\n      let filters = '';\r\n      Object.keys(target).forEach(key => {\r\n        if(key.indexOf('filter_')>-1) {\r\n          if(filters !== '') filters += ', ';\r\n          filters += target[key];\r\n        }\r\n      });\r\n      target = filters;\r\n    }\r\n\r\n    else {\r\n      target = target[key];     // this.$store.getters.backendData.product\r\n    }\r\n\r\n    if(target === undefined)\r\n      return undefined;\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * 빈 오브젝트인지 체크.\r\n * @param {Object} obj - 체크할 객체.\r\n * @returns {boolean}\r\n */\r\nfunction isEmptyObj(obj) {\r\n  for(var prop in obj) {\r\n    if(obj.hasOwnProperty(prop))\r\n      return false;\r\n  }\r\n  return JSON.stringify(obj) === JSON.stringify({});\r\n}\r\n\r\n\r\n\r\n//목록에서 특정 키값을 문자열로 가져오기([{val:1},{val:2}] -> '1,2')\r\nfunction getStringArray(arr, key) {\r\n  let str = '';\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (i > 0) str += ',';\r\n    str += arr[i][key].toString();\r\n  }\r\n  return str;\r\n}\r\n\r\n/**\r\n * URL에 필터 값 추가\r\n */\r\nfunction urlAppendFilter(filtered, sorted, url) {\r\n  filtered = cloneItem(filtered);\r\n\r\n  if (Array.isArray(filtered)) {\r\n    if (filtered.length > 0) {\r\n      // location 따로 처리\r\n      for(let i=filtered.length-1; i>=0; i--) {\r\n        let item = filtered[i];\r\n        if(Object.keys(item).indexOf('location')>-1) {\r\n          url += `&location=${item.location}`;\r\n          filtered.remove(i);\r\n          break;\r\n        }\r\n        if(item.set && item.set.length>0) {\r\n          for(let j=item.set.length-1;j>=0; j--) {\r\n            let setItem = item.set[j];\r\n            if(setItem.value === '') {\r\n              item.set.remove(j);\r\n            }\r\n          }\r\n          if(item.set.length===0) {\r\n            filtered.remove(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      url += '&filtering=' + encodeURIComponent(JSON.stringify(filtered));\r\n    }\r\n  }\r\n\r\n  else {\r\n    let keys = Object.keys(filtered);\r\n    if (keys.length > 0) {\r\n      for (let idx = 0; idx < keys.length; idx++) {\r\n        let key = keys[idx];\r\n        let filter = filtered[key];\r\n        // 카테고리(복수 선택)\r\n        if (key === 'category') {\r\n          url += `&${key}=${getStringArray(filter, 'value')}`;\r\n        }\r\n        // 금액 (최소 ~ 최대)\r\n        else if (key === 'price_start' || key === 'price_end') {\r\n          url += `&${key}=${filter.toString()}`;\r\n        }\r\n        // 지역\r\n        else if (key === 'region') {\r\n          url += `&${key}=${filter.sigungu.id}`;\r\n        }\r\n        // 좌표\r\n        else if (key === 'location') {\r\n          url += ',distance';\r\n          if (filter !== undefined && filter !== 'undefined,undefined')\r\n            url += `&${key}=${filter}`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (sorted && sorted.value) {\r\n    if(url.indexOf('?')>-1)\r\n      url += '&ordering=' + sorted.value;\r\n    else\r\n      url += '?ordering=' + sorted.value;\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\n\r\n/**\r\n * Convert Color object to hex string.\r\n * @param {Object} lpColor - Color 오브젝트\r\n * @param {function} brandHandler - 브랜드 컬러 가져오기 함수\r\n */\r\nfunction colorToString(lpColor) {\r\n  return `rgba(${lpColor.r},${lpColor.g},${lpColor.b},${lpColor.a})`;\r\n}\r\n\r\nexport {\r\n  cloneItem,\r\n  objectValue,\r\n  isEmptyObj,\r\n  urlAppendFilter,\r\n  colorToString\r\n}\r\n"]}]}