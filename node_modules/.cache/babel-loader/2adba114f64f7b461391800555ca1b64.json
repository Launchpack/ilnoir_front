{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/eslint-loader/index.js??ref--13-0!/Users/mard/dev/grit12/src/api/board.js","dependencies":[{"path":"/Users/mard/dev/grit12/src/api/board.js","mtime":1605259959000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nvar api_board = {};\nimport * as helper from \"./api_helper\";\n/***\r\n 게시판\r\n */\n\n/***\r\n * 게시판 목록\r\n * @param {Object} params - cat1(Number): 카테고리1 id, cat2(Number): 카테고리2 id, cat3(Number): 카테고리3 id\r\n */\n\napi_board.Board = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    var url = \"\".concat(helper.auth(vm), \"/board\");\n\n    if (params) {\n      if (params.cat1) {\n        url += \"?cat1=\".concat(params.cat1);\n      }\n\n      if (params.cat2) {\n        url += url.indexOf('?') > -1 ? '&' : '?';\n        url += \"cat2=\".concat(params.cat2);\n      }\n\n      if (params.cat3) {\n        url += url.indexOf('?') > -1 ? '&' : '?';\n        url += \"cat3=\".concat(params.cat3);\n      }\n    }\n\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 상세\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\n\n\napi_board.BoardDetail = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id);\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 게시물 목록\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\n\n\napi_board.BoardPost = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id, \"/post\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 즐겨찾기한 게시물 목록\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\n\n\napi_board.BoardPostLiked = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth_user(vm), \"/board/\").concat(params.id, \"/post/liked\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판에 내 게시물 목록\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\n\n\napi_board.BoardMyPost = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth_user(vm), \"/board/\").concat(params.id, \"/my-post\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 게시물 상세\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id\r\n */\n\n\napi_board.BoardPostDetail = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    if (helper.validParams(reject, params, 'post_id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id, \"/post/\").concat(params.post_id);\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 게시물 댓글 목록\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id\r\n */\n\n\napi_board.BoardPostComment = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    if (helper.validParams(reject, params, 'post_id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id, \"/post/\").concat(params.post_id, \"/comment\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 게시물 댓글 생성\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id, data(Object): 댓글 내용('content(String)', 'is_secret(Boolean)', 'parent_id(Number)')\r\n */\n\n\napi_board.CreateBoardPostComment = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    if (helper.validParams(reject, params, 'post_id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id, \"/post/\").concat(params.post_id, \"/comment\");\n    vm.$axios.post(url, params.data).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 게시물 댓글 수정\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id, comment_id(Number): 댓글 id, data(Object): 댓글 내용('content(String)', 'is_secret(Boolean)', 'parent_id(Number)')\r\n */\n\n\napi_board.UpdateBoardPostComment = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    if (helper.validParams(reject, params, 'post_id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id, \"/post/\").concat(params.post_id, \"/comment/\").concat(params.comment_id);\n    vm.$axios.patch(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 게시판 게시물 댓글 삭제\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id, comment_id(Number): 댓글 id\r\n */\n\n\napi_board.UpdateBoardPostComment = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    if (helper.validParams(reject, params, 'post_id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/\").concat(params.id, \"/post/\").concat(params.post_id, \"/comment/\").concat(params.comment_id);\n    vm.$axios.delete(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 공지사항 게시물 목록\r\n */\n\n\napi_board.Notice = function (vm) {\n  return new Promise(function (resolve, reject) {\n    var url = \"\".concat(helper.auth(vm), \"/board/notice\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 공지사항 게시물 상세\r\n * @param {Object} params - id(Number): 공지사항 id\r\n */\n\n\napi_board.NoticeDetail = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/notice/\").concat(params.id);\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 공지사항 게시물 상세\r\n * @param {Object} params - id(Number): 공지사항 id\r\n */\n\n\napi_board.NoticeDetail = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/notice/\").concat(params.id);\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 자주 묻는 질문 게시물\r\n */\n\n\napi_board.Faq = function (vm) {\n  return new Promise(function (resolve, reject) {\n    var url = \"\".concat(helper.auth(vm), \"/board/faq\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 자주 묻는 질문 게시물 상세\r\n * @param {Object} params - id(Number): 자주 묻는 질문 id\r\n */\n\n\napi_board.FaqDetail = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/faq/\").concat(params.id);\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 이벤트 게시물\r\n */\n\n\napi_board.Event = function (vm) {\n  return new Promise(function (resolve, reject) {\n    var url = \"\".concat(helper.auth(vm), \"/board/event\");\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n/***\r\n * 이벤트 게시물 상세\r\n * @param {Object} params - id(Number): 이벤트 id\r\n */\n\n\napi_board.EventDetail = function (vm, params) {\n  return new Promise(function (resolve, reject) {\n    if (helper.validParams(reject, params, 'id')) return;\n    var url = \"\".concat(helper.auth(vm), \"/board/event/\").concat(params.id);\n    vm.$axios.get(url).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.response.data);\n    });\n  });\n};\n\nexport default api_board;",{"version":3,"sources":["/Users/mard/dev/grit12/src/api/board.js"],"names":["api_board","helper","Board","vm","params","Promise","resolve","reject","url","auth","cat1","cat2","indexOf","cat3","$axios","get","then","res","data","catch","err","response","BoardDetail","validParams","id","BoardPost","BoardPostLiked","auth_user","BoardMyPost","BoardPostDetail","post_id","BoardPostComment","CreateBoardPostComment","post","UpdateBoardPostComment","comment_id","patch","delete","Notice","NoticeDetail","Faq","FaqDetail","Event","EventDetail"],"mappings":"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","sourcesContent":["let api_board = {};\r\nimport * as helper from './api_helper'\r\n\r\n/***\r\n 게시판\r\n */\r\n\r\n/***\r\n * 게시판 목록\r\n * @param {Object} params - cat1(Number): 카테고리1 id, cat2(Number): 카테고리2 id, cat3(Number): 카테고리3 id\r\n */\r\napi_board.Board = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    let url = `${helper.auth(vm)}/board`;\r\n    if(params) {\r\n      if(params.cat1) {\r\n        url += `?cat1=${params.cat1}`;\r\n      }\r\n      if(params.cat2) {\r\n        url += url.indexOf('?')>-1 ? '&' : '?';\r\n        url += `cat2=${params.cat2}`;\r\n      }\r\n      if(params.cat3) {\r\n        url += url.indexOf('?')>-1 ? '&' : '?';\r\n        url += `cat3=${params.cat3}`;\r\n      }\r\n    }\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 상세\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\r\napi_board.BoardDetail = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth(vm)}/board/${params.id}`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 게시물 목록\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\r\napi_board.BoardPost = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth(vm)}/board/${params.id}/post`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 즐겨찾기한 게시물 목록\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\r\napi_board.BoardPostLiked = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth_user(vm)}/board/${params.id}/post/liked`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판에 내 게시물 목록\r\n * @param {Object} params - id(Number): 게시판 id\r\n */\r\napi_board.BoardMyPost = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth_user(vm)}/board/${params.id}/my-post`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 게시물 상세\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id\r\n */\r\napi_board.BoardPostDetail = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    if(helper.validParams(reject, params, 'post_id')) return;\r\n\r\n    let url = `${helper.auth(vm)}/board/${params.id}/post/${params.post_id}`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 게시물 댓글 목록\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id\r\n */\r\napi_board.BoardPostComment = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    if(helper.validParams(reject, params, 'post_id')) return;\r\n\r\n    let url = `${helper.auth(vm)}/board/${params.id}/post/${params.post_id}/comment`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 게시물 댓글 생성\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id, data(Object): 댓글 내용('content(String)', 'is_secret(Boolean)', 'parent_id(Number)')\r\n */\r\napi_board.CreateBoardPostComment = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    if(helper.validParams(reject, params, 'post_id')) return;\r\n\r\n    let url = `${helper.auth(vm)}/board/${params.id}/post/${params.post_id}/comment`;\r\n\r\n    vm.$axios.post(url, params.data).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 게시물 댓글 수정\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id, comment_id(Number): 댓글 id, data(Object): 댓글 내용('content(String)', 'is_secret(Boolean)', 'parent_id(Number)')\r\n */\r\napi_board.UpdateBoardPostComment = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    if(helper.validParams(reject, params, 'post_id')) return;\r\n\r\n    let url = `${helper.auth(vm)}/board/${params.id}/post/${params.post_id}/comment/${params.comment_id}`;\r\n\r\n    vm.$axios.patch(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 게시판 게시물 댓글 삭제\r\n * @param {Object} params - id(Number): 게시판 id, post_id(Number): 게시물 id, comment_id(Number): 댓글 id\r\n */\r\napi_board.UpdateBoardPostComment = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    if(helper.validParams(reject, params, 'post_id')) return;\r\n\r\n    let url = `${helper.auth(vm)}/board/${params.id}/post/${params.post_id}/comment/${params.comment_id}`;\r\n\r\n    vm.$axios.delete(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/***\r\n * 공지사항 게시물 목록\r\n */\r\napi_board.Notice = function(vm) {\r\n  return new Promise((resolve, reject) => {\r\n    let url = `${helper.auth(vm)}/board/notice`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 공지사항 게시물 상세\r\n * @param {Object} params - id(Number): 공지사항 id\r\n */\r\napi_board.NoticeDetail = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth(vm)}/board/notice/${params.id}`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 공지사항 게시물 상세\r\n * @param {Object} params - id(Number): 공지사항 id\r\n */\r\napi_board.NoticeDetail = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth(vm)}/board/notice/${params.id}`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 자주 묻는 질문 게시물\r\n */\r\napi_board.Faq = function(vm) {\r\n  return new Promise((resolve, reject) => {\r\n    let url = `${helper.auth(vm)}/board/faq`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 자주 묻는 질문 게시물 상세\r\n * @param {Object} params - id(Number): 자주 묻는 질문 id\r\n */\r\napi_board.FaqDetail = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth(vm)}/board/faq/${params.id}`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 이벤트 게시물\r\n */\r\napi_board.Event = function(vm) {\r\n  return new Promise((resolve, reject) => {\r\n    let url = `${helper.auth(vm)}/board/event`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\n/***\r\n * 이벤트 게시물 상세\r\n * @param {Object} params - id(Number): 이벤트 id\r\n */\r\napi_board.EventDetail = function(vm, params) {\r\n  return new Promise((resolve, reject) => {\r\n    if(helper.validParams(reject, params, 'id')) return;\r\n    let url = `${helper.auth(vm)}/board/event/${params.id}`;\r\n\r\n    vm.$axios.get(url).then(res => {\r\n      resolve(res.data);\r\n    }).catch(err => {\r\n      reject(err.response.data);\r\n    });\r\n  });\r\n}\r\n\r\nexport default api_board;"]}]}