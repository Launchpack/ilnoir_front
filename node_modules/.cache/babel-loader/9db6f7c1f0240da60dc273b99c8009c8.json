{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Button/IconCircleCall.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Button/IconCircleCall.vue","mtime":1605259982000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"IconCircleCall\",\n  props: {\n    size: {\n      type: Number,\n      default: 24\n    },\n    color: {\n      type: String,\n      default: 'sub'\n    },\n    icon: {\n      type: String,\n      default: 'call'\n    },\n    width: {\n      type: Number,\n      default: 48\n    },\n    height: {\n      type: Number,\n      default: 48\n    },\n    borderRadius: {\n      type: Number,\n      default: 8\n    },\n    call: {\n      type: String,\n      required: true\n    }\n  },\n  methods: {\n    onCloseModal: function onCloseModal() {\n      setTimeout(function () {\n        var body = document.getElementsByTagName('body')[0];\n        body.removeAttribute('style');\n      }, 500);\n    },\n    clickBtn: function clickBtn() {\n      this.$refs.callModal.open();\n    },\n    clickCall: function clickCall() {\n      location.href = \"tel:\".concat(this.call);\n      this.$refs.callModal.close();\n    }\n  },\n  computed: {\n    iconStyle: function iconStyle() {\n      var deco = this.brandColor[this.color];\n      deco.fontSize = this.size + 'px';\n      deco.height = deco.fontSize;\n      return deco;\n    },\n    iconWrapStyle: function iconWrapStyle() {\n      var deco = {\n        backgroundColor: \"\".concat(this.getColor('기본 배경 색상'))\n      };\n      if (this.width) deco.width = \"\".concat(this.width, \"px\");\n      if (this.height) deco.height = \"\".concat(this.height, \"px\");\n      if (this.borderRadius) deco.borderRadius = \"\".concat(this.borderRadius, \"px\");\n      return deco;\n    },\n    letterStyle: function letterStyle() {\n      return {\n        marginLeft: '6px',\n        whiteSpace: 'pre',\n        color: this.getColor('보조 내용 색상')\n      };\n    }\n  }\n};",{"version":3,"sources":["IconCircleCall.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAzBA,GAFA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,YAAA,IAAA,GAAA,QAAA,CAAA,oBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,QAAA,IAAA,CAAA,eAAA,CAAA,OAAA;AACA,OAHA,EAGA,GAHA,CAAA;AAIA,KANA;AAOA,IAAA,QAPA,sBAOA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AACA,KATA;AAUA,IAAA,SAVA,uBAUA;AACA,MAAA,QAAA,CAAA,IAAA,iBAAA,KAAA,IAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA;AAbA,GAhCA;AA+CA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,KAAA,KAAA,CAAA;AACA,MAAA,IAAA,CAAA,QAAA,GAAA,KAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,QAAA;AACA,aAAA,IAAA;AACA,KANA;AAOA,IAAA,aAPA,2BAOA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,eAAA,YAAA,KAAA,QAAA,CAAA,UAAA,CAAA;AADA,OAAA;AAIA,UAAA,KAAA,KAAA,EAAA,IAAA,CAAA,KAAA,aAAA,KAAA,KAAA;AACA,UAAA,KAAA,MAAA,EAAA,IAAA,CAAA,MAAA,aAAA,KAAA,MAAA;AACA,UAAA,KAAA,YAAA,EAAA,IAAA,CAAA,YAAA,aAAA,KAAA,YAAA;AAEA,aAAA,IAAA;AACA,KAjBA;AAkBA,IAAA,WAlBA,yBAkBA;AACA,aAAA;AACA,QAAA,UAAA,EAAA,KADA;AAEA,QAAA,UAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA,KAAA,QAAA,CAAA,UAAA;AAHA,OAAA;AAKA;AAxBA;AA/CA,CAAA","sourcesContent":["<template>\r\n<div>\r\n  <div class=\"flex-center\" :style=\"[iconWrapStyle]\" @click=\"clickBtn\">\r\n    <i class=\"material-icons unselect\" :style=\"iconStyle\">{{ icon }}</i>\r\n  </div>\r\n  <div class=\"page-modal\">\r\n    <sweet-modal ref=\"callModal\" overlay-theme=\"dark\" @close=\"onCloseModal\">\r\n      <modal @confirm=\"clickCall\" @cancel=\"$refs.callModal.close()\" style=\"padding:20px\">\r\n        <div slot=\"header\">전화연결</div>\r\n        <div slot=\"content\">확인 버튼을 누르시면 전화연결이 진행됩니다. 진행하시겠습니까?</div>\r\n      </modal>\r\n    </sweet-modal>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"IconCircleCall\",\r\n    props: {\r\n      size: {\r\n        type: Number,\r\n        default: 24\r\n      },\r\n      color: {\r\n        type: String,\r\n        default: 'sub'\r\n      },\r\n      icon: {\r\n        type: String,\r\n        default: 'call'\r\n      },\r\n      width: {\r\n        type: Number,\r\n        default: 48,\r\n      },\r\n      height: {\r\n        type: Number,\r\n        default: 48,\r\n      },\r\n      borderRadius: {\r\n        type: Number,\r\n        default: 8,\r\n      },\r\n      call: {\r\n        type: String,\r\n        required: true\r\n      }\r\n    },\r\n    methods: {\r\n      onCloseModal(){\r\n        setTimeout(()=>{\r\n          let body = document.getElementsByTagName('body')[0];\r\n          body.removeAttribute('style');\r\n        },500);\r\n      },\r\n      clickBtn() {\r\n        this.$refs.callModal.open();\r\n      },\r\n      clickCall() {\r\n        location.href = `tel:${this.call}`;\r\n        this.$refs.callModal.close();\r\n      },\r\n    },\r\n    computed: {\r\n      iconStyle() {\r\n        let deco = this.brandColor[this.color];\r\n        deco.fontSize = this.size+'px';\r\n        deco.height = deco.fontSize;\r\n        return deco;\r\n      },\r\n      iconWrapStyle() {\r\n        let deco = {\r\n          backgroundColor: `${this.getColor('기본 배경 색상')}`\r\n        }\r\n\r\n        if(this.width) deco.width = `${this.width}px`;\r\n        if(this.height) deco.height = `${this.height}px`;\r\n        if(this.borderRadius) deco.borderRadius = `${this.borderRadius}px`;\r\n\r\n        return deco;\r\n      },\r\n      letterStyle() {\r\n        return {\r\n          marginLeft: '6px',\r\n          whiteSpace: 'pre',\r\n          color: this.getColor('보조 내용 색상')\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/Components/Button"}]}