{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Button/BtnDelivery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Button/BtnDelivery.vue","mtime":1605259981000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  components: {},\n  name: \"btn-delivery\",\n  props: {\n    product: {\n      type: Object,\n      required: true\n    },\n    name: {\n      type: String,\n      default: '주문하기'\n    },\n    customStyle: {\n      type: Object,\n      required: false\n    },\n    // Google Analytics 세팅할 경우\n    ga: {\n      type: Object,\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      fixedState: false,\n      showOption: false,\n      order_product: undefined,\n      selectorStocks: [],\n      deliveryMethodArr: [],\n      selectedDeliveryMethod: \"\"\n    };\n  },\n  created: function created() {\n    this.order_product = {\n      product_id: this.product.id,\n      name: this.product.name,\n      quantity: 1,\n      comm_price: 0,\n      point: 0,\n      discount_price: 0,\n      total_price: 0,\n      img: this.product.img,\n      delivery_price: this.product.price.delivery_price,\n      order_product_option: [],\n      product: this.product\n    }; // 옵션 사용할 경우\n\n    if (this.product.enable_option) this.getSelectorStocks(); // 자체 상품일 경우\n    else this.selectProduct();\n    this.initializeDeliveryMethod();\n    this.detectClientHeight();\n  },\n  updated: function updated() {\n    this.detectClientHeight();\n  },\n  computed: {\n    selectorStockStyle: function selectorStockStyle() {\n      if (this.$store.getters.device === 'mobile') {\n        return {\n          marginLeft: '16px',\n          marginRight: '16px'\n        };\n      }\n    },\n    quanStyle: function quanStyle() {\n      return {\n        borderBottom: \"1px solid \".concat(this.getColor('기본 테두리선 색상'))\n      };\n    },\n    optionDropdownStyle: function optionDropdownStyle() {\n      return {\n        container: {\n          margin: '0 0 8px 0'\n        },\n        dropdown: {\n          backgroundColor: this.brandBgColor.sub,\n          color: this.brandColor.main.color,\n          height: '32px',\n          padding: '12px',\n          fontSize: '12px',\n          borderRadius: '4px'\n        },\n        label: {\n          backgroundColor: this.brandBgColor.white.backgroundColor,\n          fontSize: '14px',\n          fontWeight: 500,\n          color: this.brandColor.main.color,\n          paddingBottom: '4px'\n        }\n      };\n    },\n    optionQuantityStyle: function optionQuantityStyle() {\n      return {\n        input: {\n          width: '48px',\n          height: '24px',\n          backgroundColor: '',\n          border: 'none',\n          textAlign: 'center',\n          fontSize: '14px',\n          color: this.brandColor.main.color,\n          fontWeight: '700',\n          fontFamily: 'Noto Sans CJK KR'\n        },\n        btn: {\n          backgroundColor: this.brandBgColor.sub.backgroundColor,\n          color: this.brandColor.main.color,\n          borderRadius: '4px',\n          width: '24px',\n          height: '24px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: '16px'\n        }\n      };\n    },\n    imgStyle: function imgStyle() {\n      return {\n        width: '100%',\n        height: '256px',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundImage: \"url(\\\"\".concat(this.product.img, \"\\\")\")\n      };\n    },\n    arrowLeftStyle: function arrowLeftStyle() {\n      return {\n        top: 'calc(50% - 20px)',\n        color: 'white',\n        left: '12px',\n        fontSize: '40px'\n      };\n    },\n    arrowRightStyle: function arrowRightStyle() {\n      return {\n        top: 'calc(50% - 20px)',\n        color: 'white',\n        right: '12px',\n        fontSize: '40px'\n      };\n    },\n    computedPrice: function computedPrice() {\n      if (this.product.price.discount_type === 1) {\n        return this.product.price.price - this.product.price.discount_price;\n      } else if (this.product.price.discount_type === 0) {\n        return this.product.price.price * (1 - this.product.price.discount_rate / 100);\n      }\n    },\n    deliveryCharge: function deliveryCharge() {\n      var delivery = this.product.price.delivery_price;\n      var type = delivery.delivery_type;\n      var result = '';\n\n      switch (type) {\n        // 고정배송비\n        case 0:\n          result = \"<div>\".concat(delivery.fix_price, \"\\uC6D0</div>\");\n          break;\n        // 배송비 무료\n\n        case 1:\n          result = '<div>배송비 무료</div>';\n          break;\n        // 금액별 배송비\n\n        case 2:\n          var arr_price_charge = delivery.delivery_price_setting.sort(function (a, b) {\n            return a.min < b.min ? -1 : a.min > b.min ? 1 : 0;\n          });\n          var str_price_charge = '';\n\n          for (var i = 0; i < arr_price_charge.length; i++) {\n            var item = arr_price_charge[i];\n            var price_price_charge = 0;\n            if (item.price !== undefined) price_price_charge = item.price;else if (item.parcel_price !== undefined) price_price_charge = item.parcel_price;\n\n            if (i === arr_price_charge.length - 1) {\n              str_price_charge += \"<div>\".concat(item.min, \"\\uC6D0 \\uC774\\uC0C1 ~ <b>\").concat(price_price_charge, \"\\uC6D0</b></div>\");\n            } else {\n              str_price_charge += \"<div>\".concat(item.min, \"\\uC6D0 \\uC774\\uC0C1 \").concat(item.max, \"\\uC6D0 \\uBBF8\\uB9CC <b>\").concat(price_price_charge, \"\\uC6D0</b></div>\");\n            }\n          }\n\n          result = str_price_charge;\n          break;\n        // 수량별 배송비\n\n        case 3:\n          var arr_quantity_charge = delivery.delivery_price_setting.sort(function (a, b) {\n            return a.min < b.min ? -1 : a.min > b.min ? 1 : 0;\n          });\n          var str_quantity_charge = '';\n\n          for (var _i = 0; _i < arr_quantity_charge.length; _i++) {\n            var _item = arr_quantity_charge[_i];\n            var price_quantity_charge = 0;\n            if (_item.price !== undefined) price_quantity_charge = _item.price;else if (_item.parcel_price !== undefined) price_quantity_charge = _item.parcel_price;\n\n            if (_i === arr_quantity_charge.length - 1) {\n              str_quantity_charge += \"<div>\".concat(_item.min, \"\\uAC1C \\uC774\\uC0C1 ~ <b>\").concat(price_quantity_charge, \"\\uC6D0</b></div>\");\n            } else {\n              str_quantity_charge += \"<div>\".concat(_item.min, \"\\uAC1C \\uC774\\uC0C1 \").concat(_item.max, \"\\uAC1C \\uBBF8\\uB9CC <b>\").concat(price_quantity_charge, \"\\uC6D0</b></div>\");\n            }\n          }\n\n          result = str_quantity_charge;\n          break;\n      }\n\n      return result;\n    },\n    // 속성 옵션\n    optionArr1: function optionArr1() {\n      var options = this.selectorStocks.filter(function (item) {\n        return item.option_type === 0;\n      });\n      return options;\n    },\n    // 속성 옵션\n    optionArr2: function optionArr2() {\n      var options = this.selectorStocks.filter(function (item) {\n        return item.option_type === 1;\n      });\n      return options;\n    },\n    totalPrice: function totalPrice() {\n      var _this = this;\n\n      // console.log('전체 ',this.order_product)\n      var totalPrice = 0;\n      if (!this.order_product) return 0;\n\n      if (this.product.enable_option) {\n        this.order_product.order_product_option.forEach(function (item) {\n          var op = find(_this.selectorStocks, 'id', item.option_id);\n\n          if (op !== undefined) {\n            // 속성 옵션\n            if (op.option_type === 0) {\n              totalPrice += (_this.discountedPrice + op.price) * parseInt(item.quantity);\n            } else totalPrice += op.price * parseInt(item.quantity);\n          }\n        });\n      } else {\n        totalPrice = this.discountedPrice * this.order_product.quantity;\n      }\n\n      return totalPrice;\n    },\n    discountedPrice: function discountedPrice() {\n      if (this.product.price.is_discount) {\n        if (this.product.price.discount_rate !== 0 && this.product.price.discount_type === 0) {\n          var discountedPrice = this.product.price.price * (1 - this.product.price.discount_rate / 100);\n          return discountedPrice;\n        } else if (this.product.price.discount_price !== 0 && this.product.price.discount_type === 1) {\n          return this.product.price.price - this.product.price.discount_price;\n        }\n      } else return this.product.price.price;\n    }\n  },\n  methods: {\n    // 배송유형이 있을 경우 초기화 작업\n    initializeDeliveryMethod: function initializeDeliveryMethod() {\n      var names = [{\n        label: 'parcel',\n        value: '택배'\n      }, {\n        label: 'post',\n        value: '등기 / 소포'\n      }, {\n        label: 'cargo',\n        value: '화물배송'\n      }, {\n        label: 'visit',\n        value: '방문수령'\n      }, {\n        label: 'quick',\n        value: '퀵배송'\n      }]; // 배송 유형\n\n      var items = this.product.price.delivery_price.delivery_method;\n\n      if (items.length > 1) {\n        var arr = [];\n        items.forEach(function (item) {\n          arr.push({\n            label: find(names, 'label', item).value,\n            value: item\n          });\n        });\n        this.deliveryMethodArr = arr;\n      } else {\n        if (items.length === 1) {\n          this.deliveryMethodArr = [{\n            label: find(names, 'label', items[0]).value,\n            value: items[0]\n          }];\n        }\n      }\n\n      if (items.length > 0) this.selectedDeliveryMethod = items[0];\n    },\n    deleteOrderProduct: function deleteOrderProduct(idx) {\n      this.order_product.order_product_option.remove(idx);\n    },\n    //상품 선택\n    selectProduct: function selectProduct() {\n      var comm_price = 0;\n      var point_price = 0;\n      var discount_price = 0;\n      var price = this.product.price;\n      var product_price = price.price; // 속성 옵션일 경우 상품가격 + 옵션가\n      // 0: 비율, 1: 금액\n      // 수수료, 포인트, 할인 계산\n\n      if (price.is_point) {\n        if (price.point_type === 0) point_price = product_price * price.point_rate / 100;else point_price = price.point;\n      }\n\n      if (price.is_discount) {\n        if (price.discount_type === 0) discount_price = product_price * price.discount_rate / 100;else discount_price = price.discount_price;\n      }\n\n      if (price.is_comm) {\n        if (price.comm_type === 0) comm_price = product_price * price.comm_rate / 100;else comm_price = price.comm_price;\n      }\n\n      this.order_product.comm_price = comm_price;\n      this.order_product.point = point_price;\n      this.order_product.discount_price = discount_price;\n      this.order_product.product_price = product_price;\n      console.log('product_price', product_price);\n      this.order_product.total_price = product_price - discount_price;\n    },\n    // 옵션 가져오기\n    getSelectorStocks: function getSelectorStocks() {\n      var _this2 = this;\n\n      if (this.product.id) {\n        this.$axios.post(\"public/product/\".concat(this.product.id, \"/selector_stocks\")).then(function (res) {\n          _this2.selectorStocks = res.data.stocks;\n          _this2.order_product.selectorStocks = res.data.stocks;\n        });\n      }\n    },\n    // 상품옵션 선택\n    selectOption: function selectOption(value) {\n      var _this3 = this;\n\n      // order_product 중복 체크 후(option id체크) 있을 경우 종료\n      var op = find(this.order_product.order_product_option, 'option_id', value);\n      if (op) return;\n      var total_price = 0;\n      var comm_price = 0;\n      var point_price = 0;\n      var discount_price = 0;\n      var price = this.product.price;\n      this.selectorStocks.forEach(function (selector) {\n        if (selector.id === value) {\n          // console.log('옵션가',selector.price);\n          // console.log('상품가',price.price);\n          // 속성 옵션일 경우 상품가격 + 옵션가\n          if (selector.option_type === 0) total_price = selector.price + price.price;else total_price = selector.price; // 0: 비율, 1: 금액\n          // 수수료, 포인트, 할인 계산\n\n          if (price.point_type === 0) point_price = total_price * price.point_rate / 100;else point_price = price.point;\n          if (price.discount_type === 0) discount_price = total_price * price.discount_rate / 100;else discount_price = price.discount_price;\n          if (price.comm_type === 0) comm_price = total_price * price.comm_rate / 100;else comm_price = price.comm_price;\n          var order_product_option = {\n            option_id: selector.id,\n            quantity: 1\n          };\n\n          _this3.order_product.order_product_option.push(order_product_option); // console.log('확인', this.order_product);\n\n        }\n      });\n    },\n    // 주문하기\n    clickOrder: function clickOrder() {\n      var _this4 = this;\n\n      // 회원정보 유무 체크\n      var user = this.$store.getters.user; //console.log('회원유무', user)\n      // if(user.user_id===0) {\n      //   this.toast('로그인후 결제하시기 바랍니다.');\n      //   return;\n      // }\n      // 속성옵션 필수값 체크\n\n      if (this.product.enable_option) {\n        if (this.order_product.order_product_option.length === 0) {\n          this.toast('주문할 상품을 선택해주세요.');\n          return;\n        }\n\n        var isOptionType0 = false;\n        this.order_product.order_product_option.some(function (op) {\n          var ss = find(_this4.selectorStocks, 'id', op.option_id); // 속성옵션 0, 추가옵션 1\n\n          if (ss.option_type === 0) isOptionType0 = true;\n          return ss.option_type === 0;\n        });\n\n        if (!isOptionType0) {\n          this.toast('상품 속성 옵션을 선택해주세요.');\n          return;\n        }\n      } // 선택된 배송유형\n\n\n      var order_product = this.cloneItem(this.order_product);\n      order_product.delivery_method = this.selectedDeliveryMethod;\n      var order = order_product;\n      order.uid = this.uuidv4();\n      this.$store.commit('setOrder', [order]);\n      this.$router.push('order');\n    },\n    detectClientHeight: function detectClientHeight() {\n      this.$nextTick(function () {\n        if (this.$refs.cardHeight) {\n          if (document.documentElement.scrollTop > this.$refs.cardHeight.clientHeight) {\n            this.fixedState = true;\n            this.$emit('fixedState', true);\n          } else {\n            this.fixedState = false;\n            this.$emit('fixedState', false);\n          }\n        }\n      });\n    },\n    // 장바구니 넣기\n    clickCart: function clickCart() {\n      if (this.product.enable_option) {\n        if (this.order_product.order_product_option.length === 0) {\n          this.toast('옵션을 선택하세요');\n          return;\n        }\n      }\n\n      var order_product = this.cloneItem(this.order_product); // 선택된 배송유형\n\n      order_product.delivery_method = this.selectedDeliveryMethod;\n      var cart = order_product;\n      cart.uid = this.uuidv4();\n      this.$store.commit('setConcatCart', [cart]);\n      this.toast('장바구니에 담았습니다.');\n      this.$router.push('cart');\n    },\n    optionType: function optionType(selectorStocks, option_id) {\n      if (!selectorStocks) return;\n      var stock = find(selectorStocks, 'id', option_id);\n      if (stock) return stock.option_type;\n    },\n    optionName: function optionName(selectorStocks, option_id) {\n      if (!selectorStocks) return;\n      var stock = find(selectorStocks, 'id', option_id);\n      if (stock) return stock.price > 0 ? \"\".concat(stock.name, \": +\").concat(stock.price, \"\\uC6D0\") : \"\".concat(stock.name, \": \").concat(stock.price, \"\\uC6D0\");\n    },\n    optionPrice: function optionPrice(selectorStocks, option_id) {\n      if (!selectorStocks) return;\n      var stock = find(selectorStocks, 'id', option_id);\n      if (stock) return stock.price;\n    }\n  }\n};",{"version":3,"sources":["BtnDelivery.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div v-if=\"product\" ref=\"cardHeight\">\r\n    <div class=\"full-width\"\r\n         :style=\"[\r\n          brandColor.main,\r\n          pagePadding,\r\n          {borderTop: brandBorder.main.border},\r\n          {borderBottom: brandBorder.main.border}\r\n        ]\"\r\n         style=\"padding-top:12px; padding-bottom:12px;\">\r\n      <div class=\"size-14 weight-500\">배송정보</div>\r\n      <div class=\"size-12\">\r\n        <div v-html=\"deliveryCharge\" :style=\"brandColor.primary\"></div>\r\n        <div v-if=\"product.common_info.delivery_info\" v-html=\"product.common_info.delivery_info\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 주문 버튼 -->\r\n    <div>\r\n      <!-- 옵션 사용 -->\r\n      <div v-if=\"product.enable_option\" style=\"margin-top:20px\" :style=\"pagePadding\">\r\n        <c-input-dropdown\r\n            :style=\"brandBgColor.sub\"\r\n            :options=\"optionArr1\"\r\n            margin-top=\"0\"\r\n            @update:value=\"selectOption\"\r\n            :containerCustomStyle=\"optionDropdownStyle.container\"\r\n            :dropdownCustomStyle=\"optionDropdownStyle.dropdown\"\r\n            placeholder=\"필수 옵션 선택\"\r\n            label=\"옵션선택(필수)\"\r\n            :labelCustomStyle=\"optionDropdownStyle.label\"></c-input-dropdown>\r\n        <div v-if=\"optionArr2.length>0\" style=\"margin-bottom:16px\" :style=\"pagePadding\">\r\n          <c-input-dropdown\r\n              :style=\"brandBgColor.sub\"\r\n              :options=\"optionArr2\"\r\n              margin-top=\"0\"\r\n              @update:value=\"selectOption\"\r\n              :containerCustomStyle=\"optionDropdownStyle.container\"\r\n              :dropdownCustomStyle=\"optionDropdownStyle.dropdown\"\r\n              placeholder=\"추가 옵션 선택\"\r\n              label=\"추가선택\"\r\n              :labelCustomStyle=\"optionDropdownStyle.label\"></c-input-dropdown>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!--이름 수량 가격-->\r\n      <div\r\n          v-if=\"order_product!==undefined && product.enable_option\"\r\n          v-for=\"(op, idx) in order_product.order_product_option\" :key=\"'op-'+idx\"\r\n          class=\" size-12\"\r\n          :style=\"[brandColor.sub, {backgroundColor: '#f8f8f8'}, brandBorder.main, radius, selectorStockStyle]\"\r\n          style=\"padding:12px; margin-bottom:12px;\">\r\n        <div class=\"flex-between\">\r\n          <div>\r\n            <div class=\"flex\">\r\n              <div v-if=\"optionType(selectorStocks, op.option_id)===0\" style=\"min-width:53px;\">[기본옵션]</div>\r\n              <div v-if=\"optionType(selectorStocks, op.option_id)===1\" style=\"min-width:53px;\">[추가옵션]</div>\r\n              <div style=\"margin-left:4px\">{{ optionName(selectorStocks, op.option_id) }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex-between\">\r\n          <div>\r\n            <div style=\"margin-top:8px\">\r\n              <quantity-input :value.sync=\"op.quantity\" :disabled=\"true\" :inputStyle=\"optionQuantityStyle.input\"\r\n                              :btnMinusStyle=\"optionQuantityStyle.btn\" :btnPlusStyle=\"optionQuantityStyle.btn\"></quantity-input>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex-end\">\r\n            <div class=\"size-16 weight-700\" :style=\"brandColor.main\">\r\n              {{ optionPrice(selectorStocks, op.option_id) * op.quantity | currency }}\r\n            </div>\r\n            <div class=\"option-delete-icon unselect\" :style=\"brandBgColor.brand\">\r\n              <i v-if=\"op.option_id\" class=\"material-icons size-16\"\r\n                 :style=\"brandColor.white\" @click=\"deleteOrderProduct(idx)\">close</i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <!--자체상품 (옵션 없을 경우)-->\r\n      <div v-if=\"order_product!==undefined && !product.enable_option\">\r\n        <div class=\"flex-between size-12\"\r\n             :style=\"[brandColor.sub, brandBgColor.white, pagePadding]\"\r\n             style=\"padding: 14px 0;\">\r\n          <div class=\"size-14 weight-500\" :style=\"brandColor.main\">수량</div>\r\n          <quantity-input :value.sync=\"order_product.quantity\" :disabled=\"true\" :inputStyle=\"optionQuantityStyle.input\"\r\n                          :btnMinusStyle=\"optionQuantityStyle.btn\" :btnPlusStyle=\"optionQuantityStyle.btn\"></quantity-input>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div :style=\"[pagePadding, {borderTop: brandBorder.main.border}]\" style=\"padding-top: 16px\">\r\n        <div class=\"flex-between full-width\" :style=\"brandColor.main\"\r\n          style=\"margin-bottom:22px\">\r\n          <div class=\"size-14 weight-500\">상품 총액</div>\r\n          <div class=\"size-18 weight-700\">{{ totalPrice | currency }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"$store.getters.device === 'mobile'\"\r\n        class=\"flex-between\" :style=\"pagePadding\">\r\n        <btn style=\"flex:1\"\r\n            @clicked=\"clickOrder\"\r\n            :customStyle=\"customStyle\"\r\n            :color=\"brandColor.white\"\r\n            :backgroundColor=\"brandBgColor.brand\"\r\n            :ga=\"ga\">{{ name }}</btn>\r\n        <i class=\"material-icons flex-center\" @click=\"clickCart\" :style=\"[brandBgColor.sub, brandColor.main]\"\r\n           style=\"margin:0 8px;width: 48px; height: 48px; border-radius: 8px;\">shopping_cart</i>\r\n        <icon-circle-share @share=\"$refs.share.share=true\" :style=\"brandBgColor.sub\" color=\"main\"></icon-circle-share>\r\n\r\n      </div>\r\n\r\n      <div v-else class=\"flex-between\" :style=\"pagePadding\">\r\n        <btn style=\"flex:1\"\r\n          @clicked=\"clickOrder\"\r\n          :customStyle=\"customStyle\"\r\n          :color=\"brandColor.white\"\r\n          :backgroundColor=\"brandBgColor.brand\"\r\n          :ga=\"ga\">{{ name }}</btn>\r\n        <div class=\"unselect size-14 bold flex-justify\" @click=\"clickCart\"\r\n          :style=\"[brandBgColor.white, brandColor.primary, {border: `1px solid ${brandColor.primary.color}`}]\"\r\n          style=\"margin: 0 8px; width: 108px; height: 48px; border-radius: 8px; align-items: center\">장바구니</div>\r\n        <icon-circle-like likeType=\"product\" :style=\"brandBgColor.sub\"></icon-circle-like>\r\n        <!-- <i class=\"material-icons flex-center\" @click=\"clickCart\" :style=\"[brandBgColor.sub, brandColor.main]\"\r\n           style=\"margin:0 8px;width: 48px; height: 48px; border-radius: 8px;\">shopping_cart</i> -->\r\n        <!-- <icon-circle-share @share=\"$refs.share.share=true\" :style=\"brandBgColor.sub\" color=\"main\"></icon-circle-share> -->\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <!-- 주문 버튼 END -->\r\n    <share ref=\"share\" v-if=\"product\" :product=\"product\"></share>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    components: {},\r\n    name: \"btn-delivery\",\r\n    props: {\r\n      product: {\r\n        type: Object,\r\n        required: true\r\n      },\r\n      name: {\r\n        type: String,\r\n        default: '주문하기'\r\n      },\r\n      customStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      // Google Analytics 세팅할 경우\r\n      ga: {\r\n        type: Object,\r\n        required: false\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        fixedState: false,\r\n        showOption: false,\r\n        order_product: undefined,\r\n        selectorStocks: [],\r\n        deliveryMethodArr: [],\r\n        selectedDeliveryMethod: \"\"\r\n      }\r\n    },\r\n    created () {\r\n      this.order_product = {\r\n        product_id: this.product.id,\r\n        name: this.product.name,\r\n        quantity: 1,\r\n        comm_price: 0,\r\n        point: 0,\r\n        discount_price: 0,\r\n        total_price: 0,\r\n        img: this.product.img,\r\n        delivery_price: this.product.price.delivery_price,\r\n        order_product_option: [],\r\n        product: this.product,\r\n      }\r\n      // 옵션 사용할 경우\r\n      if(this.product.enable_option) this.getSelectorStocks();\r\n      // 자체 상품일 경우\r\n      else this.selectProduct();\r\n\r\n      this.initializeDeliveryMethod();\r\n\r\n\r\n      this.detectClientHeight();\r\n    },\r\n    updated() {\r\n      this.detectClientHeight();\r\n    },\r\n    computed: {\r\n      selectorStockStyle() {\r\n        if (this.$store.getters.device === 'mobile') {\r\n          return {\r\n            marginLeft: '16px',\r\n            marginRight: '16px'\r\n          }\r\n        }\r\n      },\r\n      quanStyle() {\r\n        return {\r\n          borderBottom: `1px solid ${this.getColor('기본 테두리선 색상')}`\r\n        }\r\n      },\r\n      optionDropdownStyle() {\r\n        return {\r\n          container: {\r\n            margin: '0 0 8px 0'\r\n          },\r\n          dropdown: {\r\n            backgroundColor: this.brandBgColor.sub,\r\n            color: this.brandColor.main.color,\r\n            height: '32px',\r\n            padding: '12px',\r\n            fontSize: '12px',\r\n            borderRadius: '4px'\r\n          },\r\n          label: {\r\n            backgroundColor: this.brandBgColor.white.backgroundColor,\r\n            fontSize: '14px',\r\n            fontWeight: 500,\r\n            color: this.brandColor.main.color,\r\n            paddingBottom: '4px'\r\n          }\r\n        }\r\n      },\r\n      optionQuantityStyle() {\r\n        return {\r\n          input: {\r\n            width: '48px',\r\n            height: '24px',\r\n            backgroundColor: '',\r\n            border: 'none',\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            color: this.brandColor.main.color,\r\n            fontWeight: '700',\r\n            fontFamily: 'Noto Sans CJK KR'\r\n          },\r\n          btn: {\r\n            backgroundColor: this.brandBgColor.sub.backgroundColor,\r\n            color: this.brandColor.main.color,\r\n            borderRadius: '4px',\r\n            width: '24px',\r\n            height: '24px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontSize: '16px'\r\n          }\r\n        }\r\n      },\r\n      imgStyle() {\r\n        return {\r\n          width: '100%',\r\n          height: '256px',\r\n          backgroundSize: 'cover',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n          backgroundImage: `url(\"${this.product.img}\")`\r\n        }\r\n      },\r\n      arrowLeftStyle() {\r\n        return {\r\n          top: 'calc(50% - 20px)',\r\n          color: 'white',\r\n          left: '12px',\r\n          fontSize: '40px',\r\n        }\r\n      },\r\n      arrowRightStyle() {\r\n        return {\r\n          top: 'calc(50% - 20px)',\r\n          color: 'white',\r\n          right: '12px',\r\n          fontSize: '40px',\r\n        }\r\n      },\r\n      computedPrice() {\r\n        if(this.product.price.discount_type===1) {\r\n          return this.product.price.price - this.product.price.discount_price;\r\n        }\r\n        else if(this.product.price.discount_type===0) {\r\n          return this.product.price.price * (1 - (this.product.price.discount_rate / 100));\r\n        }\r\n      },\r\n      deliveryCharge() {\r\n        let delivery = this.product.price.delivery_price;\r\n        let type = delivery.delivery_type;\r\n        let result = ''\r\n        switch (type) {\r\n          // 고정배송비\r\n          case 0:\r\n            result = `<div>${delivery.fix_price}원</div>`;\r\n            break;\r\n          // 배송비 무료\r\n          case 1:\r\n            result = '<div>배송비 무료</div>';\r\n            break;\r\n          // 금액별 배송비\r\n          case 2:\r\n            let arr_price_charge = delivery.delivery_price_setting.sort((a,b) => {return a.min<b.min ? -1 : a.min>b.min ? 1 : 0})\r\n            let str_price_charge = '';\r\n            for(let i=0; i<arr_price_charge.length; i++) {\r\n              let item = arr_price_charge[i];\r\n              let price_price_charge = 0;\r\n              if (item.price!==undefined) price_price_charge = item.price;\r\n              else if (item.parcel_price!==undefined) price_price_charge = item.parcel_price;\r\n              if (i===arr_price_charge.length-1) {\r\n                str_price_charge += `<div>${item.min}원 이상 ~ <b>${price_price_charge}원</b></div>`;\r\n              }\r\n              else {\r\n                str_price_charge += `<div>${item.min}원 이상 ${item.max}원 미만 <b>${price_price_charge}원</b></div>`;\r\n              }\r\n            }\r\n            result = str_price_charge;\r\n            break;\r\n          // 수량별 배송비\r\n          case 3:\r\n            let arr_quantity_charge = delivery.delivery_price_setting.sort((a,b) => {return a.min<b.min ? -1 : a.min>b.min ? 1 : 0})\r\n            let str_quantity_charge = '';\r\n            for(let i=0; i<arr_quantity_charge.length; i++) {\r\n              let item = arr_quantity_charge[i];\r\n              let price_quantity_charge = 0;\r\n              if (item.price!==undefined) price_quantity_charge = item.price;\r\n              else if (item.parcel_price!==undefined) price_quantity_charge = item.parcel_price;\r\n              if (i===arr_quantity_charge.length-1) {\r\n                str_quantity_charge += `<div>${item.min}개 이상 ~ <b>${price_quantity_charge}원</b></div>`;\r\n              }\r\n              else {\r\n                str_quantity_charge += `<div>${item.min}개 이상 ${item.max}개 미만 <b>${price_quantity_charge}원</b></div>`;\r\n              }\r\n            }\r\n            result = str_quantity_charge;\r\n            break;\r\n        }\r\n        return result;\r\n      },\r\n      // 속성 옵션\r\n      optionArr1() {\r\n        let options = this.selectorStocks.filter(item=> {\r\n          return item.option_type===0;\r\n        })\r\n        return options;\r\n      },\r\n      // 속성 옵션\r\n      optionArr2() {\r\n        let options = this.selectorStocks.filter(item=> {\r\n          return item.option_type===1;\r\n        })\r\n        return options;\r\n      },\r\n      totalPrice() {\r\n        // console.log('전체 ',this.order_product)\r\n        let totalPrice = 0;\r\n        if(!this.order_product) return 0\r\n        if(this.product.enable_option) {\r\n          this.order_product.order_product_option.forEach(item=> {\r\n            let op = find(this.selectorStocks, 'id', item.option_id);\r\n            if(op!==undefined) {\r\n              // 속성 옵션\r\n              if(op.option_type===0) {\r\n                totalPrice += (this.discountedPrice + op.price) * parseInt(item.quantity)\r\n              }\r\n              else totalPrice += op.price * parseInt(item.quantity)\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          totalPrice =this.discountedPrice * this.order_product.quantity;\r\n        }\r\n        return totalPrice;\r\n      },\r\n      discountedPrice() {\r\n        if(this.product.price.is_discount){\r\n\r\n          if (this.product.price.discount_rate!==0 && this.product.price.discount_type===0) {\r\n            let discountedPrice = this.product.price.price * (1 - (this.product.price.discount_rate / 100))\r\n            return discountedPrice;\r\n          }\r\n          else if(this.product.price.discount_price!==0 && this.product.price.discount_type===1) {\r\n            return this.product.price.price - this.product.price.discount_price;\r\n          }}\r\n        else return this.product.price.price;\r\n      }\r\n    },\r\n    methods: {\r\n      // 배송유형이 있을 경우 초기화 작업\r\n      initializeDeliveryMethod() {\r\n        let names = [\r\n          { label: 'parcel', value: '택배' },\r\n          { label: 'post', value: '등기 / 소포' },\r\n          { label: 'cargo', value: '화물배송' },\r\n          { label: 'visit', value: '방문수령' },\r\n          { label: 'quick', value: '퀵배송' }\r\n        ]\r\n        // 배송 유형\r\n        let items = this.product.price.delivery_price.delivery_method;\r\n        if(items.length>1) {\r\n          let arr = [];\r\n          items.forEach(item=> {\r\n            arr.push({ label: find(names, 'label', item).value, value: item })\r\n          })\r\n          this.deliveryMethodArr = arr;\r\n        }\r\n        else {\r\n          if(items.length===1) {\r\n            this.deliveryMethodArr = [\r\n              { label: find(names, 'label', items[0]).value, value: items[0] }\r\n            ]\r\n          }\r\n        }\r\n        if(items.length>0) this.selectedDeliveryMethod = items[0]\r\n      },\r\n      deleteOrderProduct(idx) {\r\n        this.order_product.order_product_option.remove(idx);\r\n      },\r\n      //상품 선택\r\n      selectProduct() {\r\n        let comm_price = 0;\r\n        let point_price = 0;\r\n        let discount_price = 0;\r\n        let price = this.product.price;\r\n        let product_price = price.price;\r\n\r\n        // 속성 옵션일 경우 상품가격 + 옵션가\r\n        // 0: 비율, 1: 금액\r\n        // 수수료, 포인트, 할인 계산\r\n        if(price.is_point) {\r\n          if(price.point_type===0) point_price = product_price * price.point_rate / 100;\r\n          else point_price = price.point;\r\n        }\r\n        if(price.is_discount) {\r\n          if(price.discount_type===0) discount_price = product_price * price.discount_rate / 100;\r\n          else discount_price = price.discount_price;\r\n        }\r\n        if(price.is_comm) {\r\n          if(price.comm_type===0) comm_price = product_price * price.comm_rate / 100;\r\n          else comm_price = price.comm_price;\r\n        }\r\n\r\n        this.order_product.comm_price = comm_price;\r\n        this.order_product.point = point_price;\r\n        this.order_product.discount_price = discount_price;\r\n        this.order_product.product_price = product_price;\r\n        console.log('product_price', product_price)\r\n        this.order_product.total_price = product_price - discount_price;\r\n      },\r\n      // 옵션 가져오기\r\n      getSelectorStocks() {\r\n        if(this.product.id) {\r\n          this.$axios.post(`public/product/${this.product.id}/selector_stocks`)\r\n            .then( res => {\r\n              this.selectorStocks = res.data.stocks;\r\n              this.order_product.selectorStocks = res.data.stocks;\r\n            });\r\n        }\r\n      },\r\n      // 상품옵션 선택\r\n      selectOption(value) {\r\n        // order_product 중복 체크 후(option id체크) 있을 경우 종료\r\n        let op = find(this.order_product.order_product_option, 'option_id', value);\r\n        if(op) return;\r\n\r\n        let total_price = 0;\r\n        let comm_price = 0;\r\n        let point_price = 0;\r\n        let discount_price = 0;\r\n        let price = this.product.price;\r\n\r\n        this.selectorStocks.forEach(selector=> {\r\n          if(selector.id===value) {\r\n            // console.log('옵션가',selector.price);\r\n            // console.log('상품가',price.price);\r\n            // 속성 옵션일 경우 상품가격 + 옵션가\r\n            if(selector.option_type===0) total_price = selector.price + price.price;\r\n            else total_price = selector.price;\r\n            // 0: 비율, 1: 금액\r\n            // 수수료, 포인트, 할인 계산\r\n            if(price.point_type===0) point_price = total_price * price.point_rate / 100;\r\n            else point_price = price.point;\r\n            if(price.discount_type===0) discount_price = total_price * price.discount_rate / 100;\r\n            else discount_price = price.discount_price;\r\n            if(price.comm_type===0) comm_price = total_price * price.comm_rate / 100;\r\n            else comm_price = price.comm_price;\r\n\r\n            let order_product_option = {\r\n              option_id: selector.id,\r\n              quantity: 1\r\n            }\r\n\r\n            this.order_product.order_product_option.push(order_product_option);\r\n            // console.log('확인', this.order_product);\r\n          }\r\n        })\r\n\r\n      },\r\n      // 주문하기\r\n      clickOrder() {\r\n        // 회원정보 유무 체크\r\n        let user = this.$store.getters.user;\r\n        //console.log('회원유무', user)\r\n        // if(user.user_id===0) {\r\n        //   this.toast('로그인후 결제하시기 바랍니다.');\r\n        //   return;\r\n        // }\r\n        // 속성옵션 필수값 체크\r\n        if(this.product.enable_option) {\r\n          if(this.order_product.order_product_option.length===0) {\r\n            this.toast('주문할 상품을 선택해주세요.');\r\n            return;\r\n          }\r\n\r\n          let isOptionType0 = false;\r\n          this.order_product.order_product_option.some(op=> {\r\n            let ss = find(this.selectorStocks, 'id', op.option_id);\r\n            // 속성옵션 0, 추가옵션 1\r\n            if(ss.option_type===0) isOptionType0 = true;\r\n            return (ss.option_type===0)\r\n          })\r\n          if(!isOptionType0) {\r\n            this.toast('상품 속성 옵션을 선택해주세요.');\r\n            return;\r\n          }\r\n        }\r\n\r\n        // 선택된 배송유형\r\n        let order_product = this.cloneItem(this.order_product);\r\n        order_product.delivery_method = this.selectedDeliveryMethod;\r\n        let order = order_product;\r\n        order.uid = this.uuidv4();\r\n        this.$store.commit('setOrder', [order]);\r\n        this.$router.push('order');\r\n      },\r\n      detectClientHeight() {\r\n        this.$nextTick(function() {\r\n          if(this.$refs.cardHeight) {\r\n            if (document.documentElement.scrollTop > this.$refs.cardHeight.clientHeight) {\r\n              this.fixedState = true;\r\n              this.$emit('fixedState', true);\r\n            }\r\n            else {\r\n              this.fixedState = false;\r\n              this.$emit('fixedState', false);\r\n            }\r\n          }\r\n        })\r\n      },\r\n      // 장바구니 넣기\r\n      clickCart() {\r\n        if(this.product.enable_option) {\r\n          if(this.order_product.order_product_option.length===0) {\r\n            this.toast('옵션을 선택하세요');\r\n            return;\r\n          }\r\n        }\r\n        let order_product = this.cloneItem(this.order_product);\r\n        // 선택된 배송유형\r\n        order_product.delivery_method = this.selectedDeliveryMethod;\r\n        let cart = order_product;\r\n        cart.uid = this.uuidv4();\r\n        this.$store.commit('setConcatCart', [cart]);\r\n        this.toast('장바구니에 담았습니다.');\r\n        this.$router.push('cart');\r\n      },\r\n      optionType(selectorStocks, option_id) {\r\n        if(!selectorStocks) return;\r\n        let stock = find(selectorStocks, 'id', option_id);\r\n        if (stock) return stock.option_type;\r\n      },\r\n      optionName(selectorStocks, option_id) {\r\n        if(!selectorStocks) return;\r\n        let stock = find(selectorStocks, 'id', option_id);\r\n        if (stock) return stock.price > 0 ? `${stock.name}: +${stock.price}원` : `${stock.name}: ${stock.price}원`;\r\n      },\r\n      optionPrice(selectorStocks, option_id) {\r\n        if(!selectorStocks) return;\r\n        let stock = find(selectorStocks, 'id', option_id);\r\n        if (stock) return stock.price;\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .option-modal-wrap {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.5);\r\n    z-index: 999;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: flex-end;\r\n  }\r\n  .option-modal {\r\n    width: 100%;\r\n    height: 375px;\r\n    overflow-y: scroll;\r\n    background-color: #fff;\r\n  }\r\n  .option-delete-icon {\r\n    border-radius: 4px;\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-left: 8px;\r\n  }\r\n  .divider {\r\n    width: 100%;\r\n    height: 1px;\r\n    margin: 16px 0;\r\n  }\r\n</style>"],"sourceRoot":"src/components/Components/Button"}]}