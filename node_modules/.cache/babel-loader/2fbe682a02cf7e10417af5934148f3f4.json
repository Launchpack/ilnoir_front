{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputToggle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputToggle.vue","mtime":1605259989000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'CInputToggle',\n  props: {\n    val: {\n      type: Boolean,\n      required: true\n    },\n    showLabel: {\n      type: Boolean,\n      default: false\n    },\n    onLabel: {\n      type: String,\n      default: null\n    },\n    offLabel: {\n      type: String,\n      default: null\n    }\n  },\n  created: function created() {\n    this.value = this.val;\n  },\n  data: function data() {\n    return {\n      value: this.val\n    };\n  },\n  computed: {\n    barStyle: function barStyle() {\n      var style = {};\n\n      if (this.value) {\n        style.backgroundColor = this.brandColor.brand.color;\n        style.justifyContent = 'flex-start';\n        style.paddingLeft = '6px';\n      } else if (!this.value) {\n        style.backgroundColor = '#D5D5D5';\n        style.justifyContent = 'flex-end';\n        style.paddingRight = '6px';\n      }\n\n      return style;\n    },\n    pointerStyle: function pointerStyle() {\n      var style = {};\n\n      if (this.value) {\n        style.right = '1px';\n      } else if (!this.value) {\n        style.right = '1px';\n        style.left = '1px';\n      }\n\n      return style;\n    }\n  },\n  watch: {\n    val: function val(n) {\n      this.value = n;\n    },\n    value: function value(n) {\n      this.$emit('update:val', n);\n    }\n  },\n  methods: {\n    toggleVal: function toggleVal() {\n      this.value = !this.value;\n    }\n  }\n};",{"version":3,"sources":["CInputToggle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAMA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KANA;AAWA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAXA;AAgBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAhBA,GAHA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,SAAA,KAAA,GAAA,KAAA,GAAA;AACA,GA3BA;AA6BA,EAAA,IA7BA,kBA6BA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAjCA;AAmCA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,KAAA,UAAA,CAAA,KAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,YAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAJA,MAKA,IAAA,CAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,SAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,UAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,KAAA;AACA;;AAEA,aAAA,KAAA;AACA,KAhBA;AAiBA,IAAA,YAjBA,0BAiBA;AACA,UAAA,KAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,OAFA,MAGA,IAAA,CAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,KAAA;AACA;;AAEA,aAAA,KAAA;AACA;AA7BA,GAnCA;AAmEA,EAAA,KAAA,EAAA;AACA,IAAA,GADA,eACA,CADA,EACA;AACA,WAAA,KAAA,GAAA,CAAA;AACA,KAHA;AAIA,IAAA,KAJA,iBAIA,CAJA,EAIA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,CAAA;AACA;AANA,GAnEA;AA4EA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,KAAA,GAAA,CAAA,KAAA,KAAA;AACA;AAHA;AA5EA,CAAA","sourcesContent":["<template>\r\n  <div class=\"lp-base-input base-switch-input\">\r\n    <div class=\"range-bar\"\r\n         :style=\"barStyle\"\r\n         @click.stop.prevent=\"toggleVal\">\r\n      <div class=\"range-pointer\"\r\n           :style=\"pointerStyle\">\r\n      </div>\r\n      <!-- On label -->\r\n      <div class=\"on-text\"\r\n           v-if=\"val\"\r\n           v-show=\"showLabel\">\r\n        <span v-if=\"onLabel\"\r\n              class=\"on-text\">{{ onLabel }}</span>\r\n        <i class=\"material-icons on-text\"\r\n           v-if=\"!onLabel\"\r\n           style=\"line-height: 30px;\">check</i>\r\n      </div>\r\n      <!-- Off label -->\r\n      <div class=\"off-text\"\r\n           v-if=\"!val\"\r\n           v-show=\"showLabel\">\r\n        <span v-if=\"offLabel\"\r\n              class=\"off-text\">{{ offLabel }}</span>\r\n        <i class=\"material-icons off-text\"\r\n           v-if=\"!offLabel\"\r\n           style=\"line-height: 30px;\">close</i>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'CInputToggle',\r\n\r\n    props: {\r\n      val: {\r\n        type: Boolean,\r\n        required: true\r\n      },\r\n\r\n      showLabel: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n\r\n      onLabel: {\r\n        type: String,\r\n        default: null\r\n      },\r\n\r\n      offLabel: {\r\n        type: String,\r\n        default: null\r\n      }\r\n    },\r\n\r\n    created() {\r\n      this.value = this.val;\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        value: this.val\r\n      };\r\n    },\r\n\r\n    computed: {\r\n      barStyle() {\r\n        let style = {};\r\n\r\n        if ( this.value ) {\r\n          style.backgroundColor = this.brandColor.brand.color;\r\n          style.justifyContent = 'flex-start';\r\n          style.paddingLeft = '6px';\r\n        }\r\n        else if ( !this.value ) {\r\n          style.backgroundColor = '#D5D5D5';\r\n          style.justifyContent = 'flex-end';\r\n          style.paddingRight = '6px';\r\n        }\r\n\r\n        return style;\r\n      },\r\n      pointerStyle() {\r\n        let style = {};\r\n\r\n        if ( this.value ) {\r\n          style.right = '1px';\r\n        }\r\n        else if ( !this.value ) {\r\n          style.right = '1px';\r\n          style.left = '1px';\r\n        }\r\n\r\n        return style;\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      val(n) {\r\n        this.value = n;\r\n      },\r\n      value(n) {\r\n        this.$emit('update:val', n);\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      toggleVal() {\r\n        this.value = !this.value;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .base-switch-input\r\n    display inline-flex\r\n    align-items center\r\n    justify-content center\r\n\r\n  .range-bar\r\n    position relative\r\n    border-radius 23px\r\n    cursor pointer\r\n    width 40px\r\n    height 20px\r\n    display flex\r\n    align-items center\r\n\r\n  .range-pointer\r\n    position absolute\r\n    top 1px\r\n    cursor pointer\r\n    background #fff\r\n    width 18px\r\n    height 18px\r\n    border-radius 25px\r\n\r\n  .on-text\r\n  .off-text\r\n    font-size 12px\r\n    font-weight bold\r\n  .on-text\r\n    color #fff\r\n  .off-text\r\n    color #8E8E8E\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}