{"remainingRequest":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js!/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/ilnoir/src/components/Components/Common/FilterSort.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/ilnoir/src/components/Components/Common/FilterSort.vue","mtime":1605259983000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/ilnoir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/ilnoir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"FilterSort\",\n  props: {\n    filterId: {\n      type: Number,\n      default: 1\n    },\n    useSort: {\n      // Sort 사용 여부\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      formTypeData: {\n        input: 'round',\n        // round, underline\n        button: 'round',\n        box: 'round',\n        list: 'vertical',\n        label: false,\n        align: 'block',\n        // block, center, space-between, flex-start, flex-end\n        inputIcon: false,\n        dropdown: 'list' // list, modal\n\n      },\n      categories: [],\n      filterData: [],\n      sortData: undefined,\n      typeList: {\n        'choice_checkbox': 'c-input-checkboxGroup',\n        'choice_radio': 'c-input-radiobuttonGroup',\n        'address': 'c-input-regionForm',\n        'number_range': 'c-input-rangeDual',\n        'date_range': 'c-input-dateRange',\n        'date': 'c-input-date',\n        'date_time': ['c-input-date', 'c-input-time'],\n        'date_time_range': 'c-input-dateTimeRange',\n        'category': 'c-input-cascadingDropdown'\n      }\n    };\n  },\n  created: function created() {\n    // 카테고리 내용 미리 받아두기\n    this.setCategories();\n  },\n  methods: {\n    setCategories: function setCategories() {\n      var _this = this;\n\n      this.$axios.get('public/category?depth=2').then(function (res) {\n        _this.categories = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          var cat1 = res.data[i];\n          var child = [];\n\n          if (cat1.child) {\n            for (var j = 0; j < cat1.child.length; j++) {\n              var cat2 = cat1.child[j];\n              var child2 = [];\n\n              for (var k = 0; k < cat2.child.length; k++) {\n                var cat3 = cat2.child[k];\n                child2.push({\n                  id: cat3.id,\n                  label: cat3.name,\n                  value: cat3.id\n                });\n              }\n\n              cat2 = {\n                id: cat2.id,\n                label: cat2.name,\n                value: cat2.id,\n                child: child2\n              };\n              child.push(cat2);\n            }\n          }\n\n          cat1 = {\n            id: cat1.id,\n            label: cat1.name,\n            value: cat1.id,\n            child: child\n          };\n\n          _this.categories.push(cat1);\n        } // 백엔드에서 필터 가져와서 적용\n\n\n        _this.setFilters();\n      });\n    },\n    setFilters: function setFilters() {\n      var _this2 = this;\n\n      this.$axios.get('public/service/set/filter/' + this.filterId).then(function (res) {\n        res.data.filter.forEach(function (filter) {\n          filter.visible = true;\n          filter.elType = _this2.typeList[filter.type];\n          filter.selectedValue = '';\n          var type = filter.elType; // 기존에 vuex에 저장된 필터 내용 가져오기\n\n          var store = find(_this2.$store.getters.filtered, 'keyword', filter.keyword);\n\n          if (store === undefined) {\n            store = find(_this2.$store.getters.filtered, 'param_id', filter.param_id);\n          }\n\n          filter.formType = {\n            input: 'round',\n            button: 'round',\n            box: 'round',\n            list: 'horizontal',\n            label: false\n          }; // 체크박스 그룹\n\n          if (type === 'c-input-checkboxGroup') {\n            // 버튼 모양 변경 - 'full'\n            if (_this2.$store.getters.commonStyle.filter && _this2.$store.getters.commonStyle.filter.checkbox && _this2.$store.getters.commonStyle.filter.checkbox === 'full') {\n              filter.elType = 'c-input-checkbox-full-group';\n            }\n\n            filter.options = _this2.computedCheckbox(filter.options);\n\n            if (store !== undefined) {\n              filter.value = store.set[0].value;\n            }\n          } // 라디오버튼 그룹\n          else if (type === 'c-input-radiobuttonGroup') {\n              var options = [];\n              filter.options.forEach(function (item) {\n                options.push({\n                  id: item.id,\n                  value: item.id,\n                  label: item.name\n                });\n              });\n              filter.options = options;\n\n              if (store !== undefined && store.value !== undefined) {\n                filter.value = store.value.value;\n              } // 라디오버튼 모양 변경 - 'full'\n\n\n              if (_this2.$store.getters.commonStyle.filter && _this2.$store.getters.commonStyle.filter.radio && _this2.$store.getters.commonStyle.filter.radio === 'full') {\n                filter.elType = 'c-input-radio-full-buttonGroup';\n              }\n            } // 지역\n            else if (type === 'c-input-regionForm') {\n                filter.placeholder = '지역을 선택해주세요';\n\n                if (store !== undefined) {\n                  filter.value = {\n                    sido: {\n                      id: store.set[0].value,\n                      label: store.set[0].label,\n                      name: store.set[0].label,\n                      value: store.set[0].value\n                    },\n                    sigungu: {\n                      id: store.set[1].value,\n                      name: store.set[1].label,\n                      label: store.set[1].label,\n                      value: store.set[1].value\n                    }\n                  };\n                }\n              } // 레인지 듀얼\n              else if (type === 'c-input-rangeDual') {\n                  var min = filter.options.min === 0 ? 1 : filter.options.min;\n                  filter.value = [filter.options.min, filter.options.max];\n                  filter.min = filter.options.min;\n                  filter.max = filter.options.max;\n                  filter.unit = filter.options.unit;\n                  filter.interval = filter.options.max / min / 100 * min;\n\n                  if (store !== undefined) {\n                    var _min = store.set[0].value === '' ? filter.min : store.set[0].value;\n\n                    var max = store.set[1].value === '' ? filter.max : store.set[1].value;\n                    filter.set[0].value = store.set[0].value;\n                    filter.set[1].value = store.set[1].value;\n                    filter.value = [_min, max];\n                  }\n                } //카테고리\n                else if (filter.type === 'category') {\n                    // 캐스캐이딩 드롭다운 내 드롭다운의 options 초기화\n                    filter.dropdown = _this2.categories;\n\n                    if (store !== undefined) {\n                      filter.set[0].value = store.set[0].value;\n                      filter.set[1].value = store.set[1].value;\n                      filter.set[2].value = store.set[2].value;\n                      filter.set[0].label = store.set[0].label;\n                      filter.set[1].label = store.set[1].label;\n                      filter.set[2].label = store.set[2].label;\n\n                      if (store.set[0].value && store.set[0].value !== '') {\n                        filter.selectedValue = store.set[0].label;\n                        filter.value = {\n                          dropdown1: store.set[0].value,\n                          dropdown2: undefined\n                        };\n\n                        if (store.set[1].value && store.set[1].value !== '') {\n                          filter.selectedValue += \" \" + store.set[1].label;\n                          filter.value.dropdown2 = store.set[1].value;\n                        }\n                      }\n                    }\n                  }\n        });\n        _this2.filterData = res.data.filter; // 정렬 설정\n\n        var elType = 'c-input-radiobuttonGroup'; // 라디오버튼 모양 변경 - 'full'\n\n        if (_this2.$store.getters.commonStyle.filter && _this2.$store.getters.commonStyle.filter.radio && _this2.$store.getters.commonStyle.filter.radio === 'full') {\n          elType = 'c-input-radio-full-buttonGroup';\n        } // 정렬 (only active)\n\n\n        var sortsData = res.data.sort;\n        var sorts = sortsData.filter(function (srt) {\n          return srt.is_active === true;\n        });\n        _this2.sortData = {\n          label: '정렬',\n          visible: true,\n          elType: elType,\n          selectedValue: '',\n          value: '',\n          options: sorts,\n          formType: {\n            list: 'vertical'\n          }\n        };\n        var sorted = _this2.$store.getters.sorted;\n\n        if (sorted) {\n          _this2.sortData.value = sorted.value;\n        }\n      });\n    },\n    computedCheckbox: function computedCheckbox(items) {\n      var res = [];\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        res.push({\n          id: item.id,\n          checked: false,\n          label: item.name\n        });\n      }\n\n      return res;\n    },\n    updateValue: function updateValue(item, res) {\n      this.selectedValue = '';\n\n      if (item.type === 'number_range') {\n        item.set[0].value = res[0];\n        item.set[1].value = res[1];\n      } else if (item.type === \"choice_radio\") {\n        item.set[0].value = res;\n      } else if (item.type === 'address' && res.sido) {\n        item.set[0].value = res.sido.id;\n        item.set[0].label = res.sido.label;\n        item.set[1].value = res.sigungu ? res.sigungu.id : '';\n        item.set[1].label = res.sigungu ? res.sigungu.label : '';\n      } else if (item.type === 'category') {\n        if (res.dropdown1) {\n          item.set[0].value = res.dropdown1;\n          item.set[0].label = find(item.dropdown, 'id', res.dropdown1).label;\n        }\n\n        if (res.dropdown2) {\n          item.set[1].value = res.dropdown2;\n          item.set[1].label = find(item.dropdown, 'id', res.dropdown2).label;\n        }\n      } else if (item.type === \"choice_checkbox\") {\n        item.set[0].value = res;\n      }\n    }\n  }\n};",{"version":3,"sources":["FilterSort.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 아코디언 -->\r\n    <div v-for=\"(item,idx) in filterData\" :key=\"'filter-'+idx\">\r\n      <div class=\"grid-box unselect\" @click=\"item.visible = !item.visible\" style=\"padding:12px 16px\" :style=\"brandBgColor.sub\">\r\n        <div class=\"col-11 flex-between\">\r\n          <div :style=\"brandColor.help\">{{ item.label }}</div>\r\n          <div :style=\"brandColor.brand\" style=\"font-size:13px\">{{ item.selectedValue }}</div>\r\n        </div>\r\n        <div class=\"col-1 flex-end\">\r\n          <i class=\"material-icons\" :style=\"brandColor.sub\">{{ item.visible ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\r\n        </div>\r\n      </div>\r\n      <!-- 컨텐트 영역 -->\r\n      <div v-if=\"item.visible\" style=\"padding:20px\">\r\n        <component :is=\"item.elType\" v-bind=\"item\" :gutter=\"0\"\r\n                   :selectedValue.sync=\"item.selectedValue\"\r\n                   :formType=\"formTypeData\"\r\n                   :value.sync=\"item.value\"\r\n                   @update:value=\"res => updateValue(item, res)\"\r\n                   :radioButtonFull=\"{col: 4, gutter: 4}\"\r\n        ></component>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 정렬 -->\r\n    <div v-if=\"sortData && useSort\">\r\n      <div class=\"grid-box unselect\" @click=\"sortData.visible = !sortData.visible\" style=\"padding:16px\" :style=\"brandBgColor.sub\">\r\n        <div class=\"col-11 flex-between\">\r\n          <div :style=\"brandColor.help\">{{ sortData.label }}</div>\r\n          <div :style=\"brandColor.brand\" style=\"font-size:13px\">{{ sortData.selectedValue }}</div>\r\n        </div>\r\n        <div class=\"col-1 flex-end\">\r\n          <i class=\"material-icons\" :style=\"brandColor.sub\">{{ sortData.visible ? 'arrow_drop_up' : 'arrow_drop_down' }}</i>\r\n        </div>\r\n      </div>\r\n      <!-- 컨텐트 영역 -->\r\n      <div v-if=\"sortData.visible\" style=\"padding:20px\">\r\n        <component :is=\"sortData.elType\" v-bind=\"sortData\" :gutter=\"0\"\r\n                   :selectedValue.sync=\"sortData.selectedValue\"\r\n                   :value.sync=\"sortData.value\" @update:value=\"res => updateValue(sortData, res)\"></component>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"FilterSort\",\r\n    props: {\r\n      filterId: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      useSort: {       // Sort 사용 여부\r\n        type: Boolean,\r\n        default: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        formTypeData: {\r\n          input: 'round',         // round, underline\r\n          button: 'round',\r\n          box: 'round',\r\n          list: 'vertical',\r\n          label: false,\r\n          align: 'block',  // block, center, space-between, flex-start, flex-end\r\n          inputIcon: false,\r\n          dropdown: 'list'      // list, modal\r\n        },\r\n        categories: [],\r\n        filterData: [],\r\n        sortData: undefined,\r\n        typeList: {\r\n          'choice_checkbox': 'c-input-checkboxGroup',\r\n          'choice_radio': 'c-input-radiobuttonGroup',\r\n          'address': 'c-input-regionForm',\r\n          'number_range': 'c-input-rangeDual',\r\n          'date_range': 'c-input-dateRange',\r\n          'date': 'c-input-date',\r\n          'date_time': ['c-input-date', 'c-input-time'],\r\n          'date_time_range': 'c-input-dateTimeRange',\r\n          'category': 'c-input-cascadingDropdown'\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      // 카테고리 내용 미리 받아두기\r\n      this.setCategories();\r\n    },\r\n    methods: {\r\n      setCategories() {\r\n        this.$axios.get('public/category?depth=2').then(res => {\r\n          this.categories = [];\r\n          for(let i=0; i<res.data.length; i++) {\r\n            let cat1 = res.data[i];\r\n            let child = [];\r\n            if (cat1.child) {\r\n              for (let j = 0; j < cat1.child.length; j++) {\r\n                let cat2 = cat1.child[j];\r\n                let child2 = [];\r\n                for (let k = 0; k < cat2.child.length; k++) {\r\n                  let cat3 = cat2.child[k];\r\n                  child2.push({id: cat3.id, label: cat3.name, value: cat3.id});\r\n                }\r\n                cat2 = {id: cat2.id, label: cat2.name, value: cat2.id, child: child2};\r\n                child.push(cat2);\r\n              }\r\n            }\r\n            cat1 = {id: cat1.id, label: cat1.name, value: cat1.id, child: child};\r\n            this.categories.push(cat1);\r\n          }\r\n\r\n          // 백엔드에서 필터 가져와서 적용\r\n          this.setFilters();\r\n        });\r\n      },\r\n      setFilters() {\r\n        this.$axios.get('public/service/set/filter/'+this.filterId).then(res =>{\r\n          res.data.filter.forEach(filter => {\r\n            filter.visible = true;\r\n            filter.elType = this.typeList[filter.type];\r\n            filter.selectedValue = '';\r\n\r\n            let type = filter.elType;\r\n\r\n            // 기존에 vuex에 저장된 필터 내용 가져오기\r\n            let store = find(this.$store.getters.filtered, 'keyword', filter.keyword);\r\n            if(store === undefined) {\r\n              store = find(this.$store.getters.filtered, 'param_id', filter.param_id);\r\n            }\r\n\r\n            filter.formType = {\r\n              input: 'round',\r\n              button: 'round',\r\n              box: 'round',\r\n              list: 'horizontal',\r\n              label: false\r\n            };\r\n\r\n            // 체크박스 그룹\r\n            if(type === 'c-input-checkboxGroup') {\r\n              // 버튼 모양 변경 - 'full'\r\n              if (this.$store.getters.commonStyle.filter &&\r\n                this.$store.getters.commonStyle.filter.checkbox &&\r\n                this.$store.getters.commonStyle.filter.checkbox === 'full') {\r\n                filter.elType = 'c-input-checkbox-full-group';\r\n              }\r\n\r\n              filter.options = this.computedCheckbox(filter.options);\r\n\r\n              if(store!==undefined) {\r\n                filter.value = store.set[0].value;\r\n              }\r\n            }\r\n            // 라디오버튼 그룹\r\n            else if(type === 'c-input-radiobuttonGroup') {\r\n              let options = [];\r\n              filter.options.forEach(item => {\r\n                options.push({\r\n                  id: item.id,\r\n                  value: item.id,\r\n                  label: item.name\r\n                });\r\n              });\r\n\r\n              filter.options = options;\r\n\r\n              if(store!==undefined && store.value!==undefined) {\r\n                filter.value = store.value.value;\r\n              }\r\n\r\n              // 라디오버튼 모양 변경 - 'full'\r\n              if (this.$store.getters.commonStyle.filter &&\r\n                this.$store.getters.commonStyle.filter.radio &&\r\n                this.$store.getters.commonStyle.filter.radio === 'full') {\r\n                filter.elType = 'c-input-radio-full-buttonGroup';\r\n              }\r\n            }\r\n            // 지역\r\n            else if(type === 'c-input-regionForm') {\r\n              filter.placeholder = '지역을 선택해주세요';\r\n\r\n              if(store!==undefined) {\r\n                filter.value = {\r\n                  sido: {\r\n                    id: store.set[0].value,\r\n                    label:store.set[0].label,\r\n                    name: store.set[0].label,\r\n                    value: store.set[0].value\r\n                  },\r\n                  sigungu: {\r\n                    id: store.set[1].value,\r\n                    name: store.set[1].label,\r\n                    label: store.set[1].label,\r\n                    value: store.set[1].value\r\n                  }\r\n                };\r\n              }\r\n            }\r\n            // 레인지 듀얼\r\n            else if(type === 'c-input-rangeDual') {\r\n              let min = filter.options.min === 0 ? 1 : filter.options.min;\r\n              filter.value= [filter.options.min, filter.options.max];\r\n              filter.min= filter.options.min;\r\n              filter.max= filter.options.max;\r\n              filter.unit= filter.options.unit;\r\n              filter.interval= (filter.options.max / min) / 100 * min;\r\n\r\n              if(store!==undefined) {\r\n                let min = store.set[0].value === '' ? filter.min : store.set[0].value;\r\n                let max = store.set[1].value === '' ? filter.max : store.set[1].value;\r\n                filter.set[0].value = store.set[0].value;\r\n                filter.set[1].value = store.set[1].value;\r\n                filter.value = [min, max];\r\n              }\r\n            }\r\n\r\n            //카테고리\r\n            else if(filter.type === 'category') {\r\n              // 캐스캐이딩 드롭다운 내 드롭다운의 options 초기화\r\n              filter.dropdown = this.categories;\r\n              if(store!==undefined) {\r\n                filter.set[0].value = store.set[0].value;\r\n                filter.set[1].value = store.set[1].value;\r\n                filter.set[2].value = store.set[2].value;\r\n                filter.set[0].label = store.set[0].label;\r\n                filter.set[1].label = store.set[1].label;\r\n                filter.set[2].label = store.set[2].label;\r\n\r\n                if(store.set[0].value && store.set[0].value!=='') {\r\n                  filter.selectedValue = store.set[0].label;\r\n                  filter.value = {\r\n                    dropdown1: store.set[0].value,\r\n                    dropdown2: undefined\r\n                  };\r\n\r\n                  if(store.set[1].value && store.set[1].value!=='') {\r\n                    filter.selectedValue += \" \" + store.set[1].label;\r\n                    filter.value.dropdown2 = store.set[1].value;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          this.filterData = res.data.filter;\r\n\r\n          // 정렬 설정\r\n\r\n          let elType = 'c-input-radiobuttonGroup';\r\n          // 라디오버튼 모양 변경 - 'full'\r\n          if (this.$store.getters.commonStyle.filter &&\r\n            this.$store.getters.commonStyle.filter.radio &&\r\n            this.$store.getters.commonStyle.filter.radio === 'full') {\r\n            elType = 'c-input-radio-full-buttonGroup';\r\n          }\r\n\r\n          // 정렬 (only active)\r\n          let sortsData = res.data.sort;\r\n          let sorts = sortsData.filter(srt => srt.is_active===true);\r\n          this.sortData = {\r\n            label: '정렬',\r\n            visible: true,\r\n            elType : elType,\r\n            selectedValue: '',\r\n            value: '',\r\n            options: sorts,\r\n            formType: {\r\n              list: 'vertical',\r\n            }\r\n          };\r\n          let sorted = this.$store.getters.sorted;\r\n          if(sorted) {\r\n            this.sortData.value = sorted.value;\r\n          }\r\n        });\r\n      },\r\n      computedCheckbox(items) {\r\n        let res = [];\r\n        for(let i=0; i<items.length; i++) {\r\n          let item = items[i];\r\n          res.push({\r\n            id: item.id,\r\n            checked: false,\r\n            label: item.name\r\n          });\r\n        }\r\n\r\n        return res;\r\n      },\r\n      updateValue(item, res) {\r\n        this.selectedValue = '';\r\n        if(item.type === 'number_range') {\r\n          item.set[0].value = res[0];\r\n          item.set[1].value = res[1];\r\n        }\r\n\r\n        else if(item.type === \"choice_radio\") {\r\n          item.set[0].value = res;\r\n        }\r\n\r\n        else if(item.type === 'address' && res.sido) {\r\n          item.set[0].value = res.sido.id;\r\n          item.set[0].label = res.sido.label;\r\n          item.set[1].value = res.sigungu ? res.sigungu.id : '';\r\n          item.set[1].label = res.sigungu ? res.sigungu.label : '';\r\n\r\n        }\r\n\r\n        else if(item.type === 'category') {\r\n          if(res.dropdown1) {\r\n            item.set[0].value = res.dropdown1;\r\n            item.set[0].label = find(item.dropdown,'id', res.dropdown1).label;\r\n          }\r\n          if(res.dropdown2) {\r\n            item.set[1].value = res.dropdown2;\r\n            item.set[1].label = find(item.dropdown,'id', res.dropdown2).label;\r\n          }\r\n        }\r\n\r\n        else if(item.type === \"choice_checkbox\") {\r\n          item.set[0].value = res;\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/Components/Common"}]}