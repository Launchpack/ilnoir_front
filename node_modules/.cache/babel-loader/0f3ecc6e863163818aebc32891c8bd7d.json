{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/eslint-loader/index.js??ref--13-0!/Users/mard/dev/grit12/src/components/Mixins/FormMixin.js","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Mixins/FormMixin.js","mtime":1605259991000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { formValidate as _formValidate, isValid as _isValid } from '@/utils/helper/form-helper';\nexport default {\n  props: {\n    formType: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          input: 'round',\n          // round, underline\n          button: 'round',\n          box: 'round',\n          list: 'horizontal',\n          // 라디오 버튼 등 가로/세로 정렬(vertical, horizontal)\n          label: true,\n          description: false,\n          unit: false,\n          align: 'block',\n          // 가로 정렬(block, center, space-between, flex-start, flex-end)\n          inputIcon: false,\n          dropdown: 'list',\n          // list, modal\n          vErrorNotShown: false // 에러메시지 비노출 여부\n\n        };\n      }\n    },\n    labelCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    descriptionCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    unitCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    inputCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    dropdownCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    raiobuttonGroupCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    fullSelectedCustomStyle: {\n      // CheckboxFullGroup, RadioFullButtonGroup 버튼 커스텀스타일\n      type: [Object, String, Array],\n      required: false\n    },\n    fullUnselectedCustomStyle: {\n      // CheckboxFullGroup, RadioFullButtonGroup 버튼 커스텀스타일\n      type: [Object, String, Array],\n      required: false\n    },\n    listCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    containerCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    buttonCustomStyle: {\n      type: [Object, String, Array],\n      required: false\n    },\n    boxCustomStyle: {\n      type: [Object, String],\n      required: false\n    },\n    checkCustomStyle: {\n      type: Object,\n      required: false\n    },\n    inputDateStyle: {\n      type: Object,\n      required: false\n    },\n    inputTimeStyle: {\n      type: Object,\n      required: false\n    },\n    imgUploaderStyle: {\n      type: Object,\n      required: false\n    },\n    gutter: {\n      type: Number,\n      required: false\n    },\n    value: {\n      required: false\n    },\n    placeholder: {\n      type: String,\n      required: false\n    },\n    label: {\n      type: String,\n      required: false\n    },\n    description: {\n      type: String,\n      required: false\n    },\n    unit: {\n      type: String,\n      required: false\n    },\n    name: {\n      type: String,\n      required: false\n    },\n    options: {\n      required: false\n    },\n    validate: {\n      type: Object,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false\n    },\n    // 폼 요소들 상위에서 자식 폼 요소들 전체 validation check 감지\n    checkValid: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      checkValidValue: false\n    };\n  },\n  watch: {\n    checkValid: function checkValid(n) {\n      if (n) {\n        // method chkValid가 존재할 경우\n        if (typeof this.chkValid === 'function') {\n          this.chkValid();\n        }\n      }\n    }\n  },\n  methods: {\n    // 폼 구성하는 데이터 마다 elType 추가\n    // 동적 컴포넌트 호출시 elType에 맞춰서 컴포넌트 띄움\n    setForm: function setForm(formData) {\n      var _this = this;\n\n      formData.forEach(function (item) {\n        item.elType = _this.formatChanger(item.format); // valid required true일때 * 추가\n\n        if (item.label && item.validate.valid_required) {\n          item.label = '*' + item.label;\n        } // CRadiobuttonGroup일때, options에 value 추가\n\n\n        if (['CRadiobuttonGroup', 'CCheckboxGroup'].indexOf(item.format) > -1) {\n          item.options.forEach(function (item) {\n            if (item.id) item.value = item.id;\n          });\n        }\n\n        item.type = item.elType.replace('c-input-', '');\n\n        if (item.type === 'checkboxArray' || item.type === 'verify') {\n          item.value = false;\n        } else if (item.value === undefined) {\n          if (item.type === 'checkbox-group' || item.type === 'tag') {\n            item.value = [];\n          } else {\n            item.value = '';\n          }\n        }\n      });\n      return formData;\n    },\n    formatChanger: function formatChanger(format) {\n      switch (format) {\n        case 'CInput_text':\n          return 'c-input-text';\n\n        case 'CInput_number':\n          return 'c-input-number';\n\n        case 'CInput_password':\n          return 'c-input-password';\n\n        case 'CInput_email':\n          return 'c-input-email';\n\n        case 'CInput_phone':\n          return 'c-input-phone';\n\n        case 'CAddress':\n          return 'c-input-address';\n\n        case 'CBankAccount':\n          return 'c-input-bank-account';\n\n        case 'CCasCadingDropDown':\n          return 'c-input-cascadingDropdown';\n\n        case 'CCompanyOperating':\n          return 'c-input-company-operating';\n\n        case 'CInput_checkbox':\n          return 'c-input-checkbox';\n\n        case 'CgCheckboxTextarea':\n          return 'c-input-checkbox-textarea';\n\n        case 'CgCheckboxArray':\n          return 'c-input-checkboxArray';\n\n        case 'CCheckboxGroup':\n          return 'c-input-checkbox-group';\n\n        case 'CDate':\n          return 'c-input-date';\n\n        case 'CDateTime':\n          return 'c-input-datetime';\n\n        case 'CDiscount':\n          return 'c-input-discount';\n\n        case 'CDropdown':\n          return 'c-input-dropdown';\n\n        case 'CFileUploader':\n          return 'c-input-fileUploader';\n\n        case 'CImgUploader':\n          return 'c-input-imgUploader';\n\n        case 'CImgUploaderSingle':\n          return 'c-input-imgUploader-single';\n\n        case 'CFileUploaderSingle':\n          return 'c-input-fileUploader-single';\n\n        case 'CImgUploaderArray':\n          return 'c-input-imgUploaderArray';\n\n        case 'CRadiobuttonGroup':\n          return 'c-input-radiobuttonGroup';\n\n        case 'CRadioFullButtonGroup':\n          return 'c-input-radio-full-buttonGroup';\n\n        case 'CRating':\n          return 'c-input-rating';\n\n        case 'CRegion':\n          return 'c-input-region';\n\n        case 'CRegionForm':\n          return 'c-input-regionForm';\n\n        case 'CRange':\n          return 'c-input-range';\n\n        case 'CInput_textarea':\n          return 'c-input-textarea';\n\n        case 'CInputEditor':\n          return 'c-input-editor';\n\n        case 'CTime':\n          return 'c-input-time';\n\n        case 'CInputTag':\n          return 'c-input-tag';\n\n        case 'CInputVideo':\n          return 'c-input-video';\n\n        case 'CInput_emailSelect':\n          return 'c-input-email-select';\n\n        case 'CVerifyBtn':\n          return 'c-input-verify';\n      }\n    },\n    // kgbf의 에디터 견적요청 스텝폼\n    setStepForm: function setStepForm(step) {\n      var _this2 = this;\n\n      var enable = true;\n      var steps = [];\n      var valid = true;\n      step.forEach(function (formdata) {\n        var newArray = [];\n        formdata.forms.forEach(function (item) {\n          // 유효성 체크\n          if (_this2.formValidate(item, _this2.toast) === '_!valid_false') {\n            valid = false;\n          }\n\n          newArray.push({\n            answer: item.value,\n            question: item.name\n          });\n\n          if (item.options) {\n            var option = item.options.filter(function (opt) {\n              return opt.value === item.value;\n            });\n\n            if (option.length > 0) {\n              option = option[0];\n\n              if (option.forms && option.forms.length > 0) {\n                option.forms.forEach(function (form) {\n                  // 유효성 체크\n                  if (_this2.formValidate(form, _this2.toast) === '_!valid_false') {\n                    valid = false;\n                  }\n\n                  if (form.value !== undefined) {\n                    newArray.push({\n                      answer: form.value,\n                      question: form.name\n                    });\n                  }\n                });\n              }\n            }\n          }\n        });\n        steps.push({\n          title: formdata.title,\n          forms: newArray\n        });\n      });\n      return valid ? steps : [];\n    },\n    // form Data 유효성 체크\n    formValidate: function formValidate(data, toast) {\n      return _formValidate(data, toast);\n    },\n    // formdata의 value 값이 있을 경우 유효성 체크\n    isValid: function isValid(properties, label) {\n      return _isValid(properties, label);\n    },\n    // post 요청 param 데이터 만들기\n    getParamData: function getParamData(formData) {\n      var _this3 = this;\n\n      this.checkValidValue = true;\n      var password_new = find(formData, 'field', 'password');\n      var password_re = find(formData, 'field', 'password_re');\n\n      if (password_new !== undefined && password_new.validate.required && password_new.validate.valid_required && password_re !== undefined && password_re.validate.required && password_re.validate.valid_required) {\n        if (password_new.value !== undefined && password_re.value !== undefined && password_new.value !== password_re.value) {\n          this.toast(\"비밀번호가 일치하지 않습니다.\");\n          return {\n            'enable': false\n          };\n        }\n      }\n\n      var enable = true;\n      var params = {};\n      params['params'] = [];\n      formData.some(function (item) {\n        // 유효성 체크\n        var res = _this3.formValidate(item, _this3.toast);\n\n        var value = '';\n\n        if (res === '_!valid_false') {\n          enable = false;\n          return true; // 유효성 체크 false / Break;\n        } else {\n          value = res;\n        } // 맞춤 디비일 경우\n\n\n        if (item.is_param) {\n          var param = {\n            param_id: item.id,\n            param_type: item.param_type,\n            value: value\n          };\n          params.params.push(param);\n        } // 맞춤 아닐 경우\n        else {\n            params[item.field] = value;\n          }\n      });\n      return {\n        'enable': enable,\n        'params': params\n      };\n    },\n    // counsel request 데이터 만들기 - (answers 부분)\n    setCounselForm: function setCounselForm(formData) {\n      var _this4 = this;\n\n      var enable = true;\n      var result = [];\n      formData.some(function (item) {\n        // 유효성 체크\n        var res = _this4.formValidate(item, _this4.toast);\n\n        var value = '';\n\n        if (res === '_!valid_false') {\n          enable = false;\n          return true; // 유효성 체크 false / Break;\n        } else {\n          value = res;\n        } // answer 데이터 만들기\n\n\n        var answer = item.value;\n\n        if (item.elType === 'c-input-checkbox-group') {\n          answer = '';\n\n          for (var k = 0; k < item.value.length; k++) {\n            if (k < item.value.length - 1) {\n              answer += \"\".concat(item.value[k], \", \");\n            } else if (k === item.value.length - 1) {\n              answer += \"\".concat(item.value[k]);\n            }\n          }\n        } else if (item.elType === 'c-input-regionForm') {\n          answer = \"\".concat(item.value.sido.label, \" \").concat(item.value.sigungu.label);\n        }\n\n        result.push({\n          answer: answer,\n          question: item.name\n        });\n      });\n      return {\n        'enable': enable,\n        'result': result\n      };\n    },\n    // 삭제할 폼 데이터\n    removeFormData: function removeFormData(field) {\n      for (var i = 0; i < this.formData.length; i++) {\n        if (this.formData[i].field === field) {\n          this.formData.remove(i);\n          break;\n        }\n      }\n    },\n    // 추가할 폼 데이터\n    addFormData: function addFormData(data) {\n      var _this5 = this;\n\n      data.forEach(function (d) {\n        var field = find(_this5.formData, 'field', d.field);\n        if (!field) _this5.formData = _this5.formData.concat(_this5.setForm(data));\n      });\n    }\n  },\n  computed: {\n    containerStyle: function containerStyle() {\n      if (this.containerCustomStyle) {\n        return this.containerCustomStyle;\n      }\n\n      var deco = {}; // flex일 경우\n\n      if (this.formType && this.formType.align !== undefined && this.formType.align !== 'block') {\n        deco.display = 'flex';\n        deco.justifyContent = this.formType.align;\n      }\n\n      var gutter = this.gutter !== undefined ? this.gutter : 24;\n      deco.marginTop = gutter + 'px';\n      return deco;\n    },\n    labelStyle: function labelStyle() {\n      if (this.labelCustomStyle) {\n        return this.labelCustomStyle;\n      }\n\n      var deco = {};\n      deco = {\n        margin: '20px 0 6px 0',\n        fontSize: '14px',\n        color: this.getColor('보조 내용 색상')\n      };\n      if (this.formType.align !== 'block') deco.margin = 0;\n      return deco;\n    },\n    descriptionStyle: function descriptionStyle() {\n      if (this.descriptionCustomStyle) {\n        return this.descriptionCustomStyle;\n      }\n\n      var deco = {\n        marginBottom: '8px',\n        fontSize: '12px',\n        color: this.getColor('보조 내용 색상')\n      };\n      return deco;\n    },\n    unitStyle: function unitStyle() {\n      if (this.unitCustomStyle) {\n        return this.unitCustomStyle;\n      }\n\n      var deco = {\n        fontSize: '14px',\n        fontWeight: '500',\n        color: this.getColor('기본 내용 색상')\n      };\n      return deco;\n    },\n    inputStyle: function inputStyle() {\n      if (this.inputCustomStyle) return this.inputCustomStyle;\n      if (this.inputDateStyle) return this.inputDateStyle;\n      if (this.inputTimeStyle) return this.inputTimeStyle;\n      var deco = {\n        border: 0,\n        padding: '12px',\n        fontSize: '14px'\n      };\n\n      switch (this.formType && this.formType.input) {\n        case 'round':\n          deco.borderRadius = this.radius.borderRadius;\n          deco.border = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          break;\n\n        case 'underline':\n          deco.borderBottom = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          break;\n      }\n\n      return deco;\n    },\n    buttonStyle: function buttonStyle() {\n      if (this.addressButtonCustomStyle) return this.addressButtonCustomStyle; // 주소 검색 버튼\n\n      if (this.buttonCustomStyle) return this.buttonCustomStyle;\n      var deco = {\n        border: 0,\n        padding: '10px 20px',\n        fontSize: '14px',\n        color: this.brandColor.main\n      };\n\n      switch (this.formType && this.formType.button) {\n        case 'round':\n          deco.borderRadius = this.radius.borderRadius;\n          deco.border = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          deco.backgroundColor = this.getColor('보조 테두리선 색상');\n          break;\n\n        case 'underline':\n          deco.borderBottom = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          deco.backgroundColor = this.getColor('기본 테두리선 색상');\n          break;\n      }\n\n      return deco;\n    },\n    boxStyle: function boxStyle() {\n      if (this.boxCustomStyle) return this.boxCustomStyle;\n      var deco = {\n        border: 0,\n        width: '18px',\n        height: '18px'\n      };\n\n      switch (this.formType && this.formType.box) {\n        case 'round':\n          deco.borderRadius = '4px';\n          deco.border = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          break;\n      }\n\n      return deco;\n    },\n    checkStyle: function checkStyle() {\n      if (this.checkCustomStyle) return this.checkCustomStyle;\n      var deco = {\n        fontSize: '16px',\n        backgroundColor: this.getColor('Primary Color'),\n        borderRadius: '4px',\n        color: 'white'\n      };\n      return deco;\n    },\n    listStyle: function listStyle() {\n      if (this.listCustomStyle) return this.listCustomStyle;\n      var deco = {};\n\n      switch (this.formType && this.formType.list) {\n        case 'horizontal':\n          deco.display = 'flex';\n          break;\n\n        case 'vertical':\n          deco.display = 'block';\n      }\n\n      return deco;\n    },\n    dropdownStyle: function dropdownStyle() {\n      var deco = {\n        padding: '8px 16px',\n        fontSize: '14px'\n      };\n      if (this.dropdownCustomStyle) return this.dropdownCustomStyle;\n\n      switch (this.formType && this.formType.input) {\n        case 'round':\n          deco.borderRadius = this.radius.borderRadius;\n          deco.border = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          break;\n\n        case 'underline':\n          deco.borderRadius = 0;\n          deco.borderBottom = \"1px solid \".concat(this.getColor('기본 테두리선 색상'));\n          break;\n      }\n\n      return deco;\n    },\n    deleteIconStyle: function deleteIconStyle() {\n      return {\n        backgroundColor: 'rgb(221, 221, 221)',\n        color: 'white',\n        borderRadius: '14px',\n        fontSize: '14px',\n        right: '12px',\n        top: '10px',\n        padding: '2px',\n        position: 'absolute'\n      };\n    }\n  }\n};",{"version":3,"sources":["/Users/mard/dev/grit12/src/components/Mixins/FormMixin.js"],"names":["formValidate","isValid","props","formType","type","Object","required","default","input","button","box","list","label","description","unit","align","inputIcon","dropdown","vErrorNotShown","labelCustomStyle","String","Array","descriptionCustomStyle","unitCustomStyle","inputCustomStyle","dropdownCustomStyle","raiobuttonGroupCustomStyle","fullSelectedCustomStyle","fullUnselectedCustomStyle","listCustomStyle","containerCustomStyle","buttonCustomStyle","boxCustomStyle","checkCustomStyle","inputDateStyle","inputTimeStyle","imgUploaderStyle","gutter","Number","value","placeholder","name","options","validate","disabled","Boolean","checkValid","data","checkValidValue","watch","n","chkValid","methods","setForm","formData","forEach","item","elType","formatChanger","format","valid_required","indexOf","id","replace","undefined","setStepForm","step","enable","steps","valid","formdata","newArray","forms","toast","push","answer","question","option","filter","opt","length","form","title","properties","getParamData","password_new","find","password_re","params","some","res","is_param","param","param_id","param_type","field","setCounselForm","result","k","sido","sigungu","removeFormData","i","remove","addFormData","d","concat","computed","containerStyle","deco","display","justifyContent","marginTop","labelStyle","margin","fontSize","color","getColor","descriptionStyle","marginBottom","unitStyle","fontWeight","inputStyle","border","padding","borderRadius","radius","borderBottom","buttonStyle","addressButtonCustomStyle","brandColor","main","backgroundColor","boxStyle","width","height","checkStyle","listStyle","dropdownStyle","deleteIconStyle","right","top","position"],"mappings":"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","sourcesContent":["import { formValidate, isValid } from '@/utils/helper/form-helper'\r\n\r\nexport default {\r\n  props: {\r\n    formType: {\r\n      type: Object,\r\n      required: false,\r\n      default: function() {\r\n        return {\r\n          input: 'round',         // round, underline\r\n          button: 'round',\r\n          box: 'round',\r\n          list: 'horizontal',     // 라디오 버튼 등 가로/세로 정렬(vertical, horizontal)\r\n          label: true,\r\n          description: false,\r\n          unit: false,\r\n          align: 'block',        // 가로 정렬(block, center, space-between, flex-start, flex-end)\r\n          inputIcon: false,\r\n          dropdown: 'list',      // list, modal\r\n          vErrorNotShown: false  // 에러메시지 비노출 여부\r\n        }\r\n      },\r\n    },\r\n    labelCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    descriptionCustomStyle: {\r\n      type: [Object,String,Array],\r\n      required: false\r\n    },\r\n    unitCustomStyle: {\r\n      type: [Object, String, Array],\r\n      required: false\r\n    },\r\n    inputCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    dropdownCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    raiobuttonGroupCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    fullSelectedCustomStyle: {  // CheckboxFullGroup, RadioFullButtonGroup 버튼 커스텀스타일\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    fullUnselectedCustomStyle: {  // CheckboxFullGroup, RadioFullButtonGroup 버튼 커스텀스타일\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },    \r\n    listCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    containerCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    buttonCustomStyle: {\r\n      type: [Object,String, Array],\r\n      required: false\r\n    },\r\n    boxCustomStyle: {\r\n      type: [Object,String],\r\n      required: false\r\n    },\r\n    checkCustomStyle: {\r\n      type: Object,\r\n      required: false\r\n    },    \r\n    inputDateStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    inputTimeStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    imgUploaderStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    gutter: {\r\n      type: Number,\r\n      required: false\r\n    },\r\n    value: {\r\n      required: false\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    unit: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    options: {\r\n      required: false\r\n    },\r\n    validate: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      required: false\r\n    },\r\n    // 폼 요소들 상위에서 자식 폼 요소들 전체 validation check 감지\r\n    checkValid: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      checkValidValue: false\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    checkValid(n) {\r\n      if (n) {\r\n        // method chkValid가 존재할 경우\r\n        if (typeof(this.chkValid)==='function') {\r\n          this.chkValid();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // 폼 구성하는 데이터 마다 elType 추가\r\n    // 동적 컴포넌트 호출시 elType에 맞춰서 컴포넌트 띄움\r\n    setForm(formData) {\r\n      formData.forEach(item => {\r\n        item.elType = this.formatChanger(item.format);\r\n\r\n        // valid required true일때 * 추가\r\n        if(item.label && item.validate.valid_required) {\r\n          item.label = '*' + item.label;\r\n        }\r\n\r\n        // CRadiobuttonGroup일때, options에 value 추가\r\n        if(['CRadiobuttonGroup', 'CCheckboxGroup'].indexOf(item.format)>-1) {\r\n          item.options.forEach(item=>{\r\n            if(item.id)\r\n              item.value = item.id;\r\n          });\r\n        }\r\n\r\n        item.type = item.elType.replace('c-input-','');\r\n        if (item.type === 'checkboxArray' || item.type === 'verify') {\r\n          item.value = false;\r\n        }\r\n        else if(item.value === undefined) {\r\n          if(item.type === 'checkbox-group' || item.type === 'tag') {\r\n            item.value = [];\r\n          } else {\r\n            item.value = '';\r\n          }\r\n        }\r\n      });\r\n      return formData;\r\n    },\r\n    formatChanger(format) {\r\n      switch(format) {\r\n        case 'CInput_text':\r\n          return 'c-input-text';\r\n        case 'CInput_number':\r\n          return 'c-input-number';\r\n        case 'CInput_password':\r\n          return 'c-input-password';\r\n\r\n        case 'CInput_email':\r\n          return 'c-input-email'\r\n\r\n        case 'CInput_phone':\r\n          return 'c-input-phone';\r\n\r\n        case 'CAddress':\r\n          return 'c-input-address';\r\n\r\n        case 'CBankAccount':\r\n          return 'c-input-bank-account';\r\n\r\n        case 'CCasCadingDropDown':\r\n          return 'c-input-cascadingDropdown';\r\n\r\n        case 'CCompanyOperating':\r\n          return 'c-input-company-operating';\r\n\r\n        case 'CInput_checkbox':\r\n          return 'c-input-checkbox';\r\n\r\n        case 'CgCheckboxTextarea':\r\n          return 'c-input-checkbox-textarea';\r\n\r\n        case 'CgCheckboxArray':\r\n          return 'c-input-checkboxArray';\r\n\r\n        case 'CCheckboxGroup':\r\n          return 'c-input-checkbox-group';\r\n\r\n        case 'CDate':\r\n          return 'c-input-date';\r\n\r\n        case 'CDateTime':\r\n          return 'c-input-datetime';\r\n\r\n        case 'CDiscount':\r\n          return 'c-input-discount';\r\n\r\n        case 'CDropdown':\r\n          return 'c-input-dropdown';\r\n\r\n        case 'CFileUploader':\r\n          return 'c-input-fileUploader';\r\n\r\n        case 'CImgUploader':\r\n          return 'c-input-imgUploader';\r\n\r\n        case 'CImgUploaderSingle':\r\n          return 'c-input-imgUploader-single';\r\n\r\n        case 'CFileUploaderSingle':\r\n          return 'c-input-fileUploader-single';\r\n  \r\n        case 'CImgUploaderArray':\r\n          return 'c-input-imgUploaderArray';\r\n\r\n        case 'CRadiobuttonGroup':\r\n          return 'c-input-radiobuttonGroup';\r\n\r\n        case 'CRadioFullButtonGroup':\r\n          return 'c-input-radio-full-buttonGroup';\r\n\r\n        case 'CRating':\r\n          return 'c-input-rating';\r\n\r\n        case 'CRegion':\r\n          return 'c-input-region';\r\n\r\n        case 'CRegionForm':\r\n          return 'c-input-regionForm';\r\n\r\n        case 'CRange':\r\n          return 'c-input-range';\r\n\r\n        case 'CInput_textarea':\r\n          return 'c-input-textarea';\r\n\r\n        case 'CInputEditor':\r\n          return 'c-input-editor';\r\n\r\n        case 'CTime':\r\n          return 'c-input-time';\r\n\r\n        case 'CInputTag':\r\n          return 'c-input-tag';\r\n\r\n        case 'CInputVideo':\r\n          return 'c-input-video';\r\n\r\n        case 'CInput_emailSelect':\r\n          return 'c-input-email-select';\r\n\r\n        case 'CVerifyBtn':\r\n          return 'c-input-verify';\r\n\r\n      }\r\n    },\r\n    // kgbf의 에디터 견적요청 스텝폼\r\n    setStepForm(step) {\r\n      let enable = true;\r\n      let steps = [];\r\n      let valid = true;\r\n\r\n      step.forEach(formdata => {\r\n        let newArray = [];\r\n        formdata.forms.forEach(item => {\r\n          // 유효성 체크\r\n          if (this.formValidate(item, this.toast) === '_!valid_false') {\r\n            valid = false;\r\n          }\r\n\r\n          newArray.push({\r\n            answer: item.value,\r\n            question: item.name,\r\n          });\r\n\r\n          if (item.options) {\r\n\r\n            let option = item.options.filter(opt => { return opt.value === item.value });\r\n            if (option.length > 0) {\r\n              option = option[0];\r\n              if (option.forms && option.forms.length > 0) {\r\n                option.forms.forEach(form => {\r\n                  // 유효성 체크\r\n                  if (this.formValidate(form, this.toast) === '_!valid_false') {\r\n                    valid = false;\r\n                  }\r\n                  if (form.value !== undefined) {\r\n                    newArray.push({\r\n                      answer: form.value,\r\n                      question: form.name\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n        steps.push({\r\n          title: formdata.title,\r\n          forms: newArray\r\n        })\r\n      })\r\n\r\n      return valid ? steps : [];\r\n    },\r\n    // form Data 유효성 체크\r\n    formValidate(data, toast) {\r\n      return formValidate(data, toast);\r\n    },\r\n    // formdata의 value 값이 있을 경우 유효성 체크\r\n    isValid(properties, label) {\r\n      return isValid(properties, label);\r\n    },\r\n    // post 요청 param 데이터 만들기\r\n    getParamData(formData) {\r\n      this.checkValidValue = true;\r\n\r\n      let password_new = find(formData, 'field', 'password');\r\n      let password_re = find(formData, 'field', 'password_re');\r\n\r\n      if (password_new !== undefined &&\r\n        password_new.validate.required &&\r\n        password_new.validate.valid_required &&\r\n        password_re !== undefined &&\r\n        password_re.validate.required &&\r\n        password_re.validate.valid_required\r\n      ) {\r\n        if (password_new.value !== undefined && password_re.value !== undefined &&\r\n          password_new.value !== password_re.value) {\r\n          this.toast(\"비밀번호가 일치하지 않습니다.\");\r\n          return { 'enable': false };\r\n        }\r\n      }\r\n\r\n      let enable = true;\r\n      let params = {};\r\n      params['params'] = [];\r\n\r\n      formData.some(item=>{\r\n        // 유효성 체크\r\n        let res = this.formValidate(item, this.toast);\r\n\r\n        let value = '';\r\n        if (res === '_!valid_false') {\r\n          enable= false;\r\n          return true;    // 유효성 체크 false / Break;\r\n        }\r\n        else {\r\n          value = res;\r\n        }\r\n\r\n        // 맞춤 디비일 경우\r\n        if( item.is_param ) {\r\n          let param = {\r\n            param_id: item.id,\r\n            param_type: item.param_type,\r\n            value: value\r\n          };\r\n          params.params.push(param);\r\n        }\r\n        // 맞춤 아닐 경우\r\n        else {\r\n          params[item.field] = value;\r\n        }\r\n      })\r\n\r\n      return { 'enable': enable, 'params': params }\r\n    },\r\n    // counsel request 데이터 만들기 - (answers 부분)\r\n    setCounselForm(formData) {\r\n      let enable = true;\r\n      let result = [];\r\n\r\n      formData.some(item=>{\r\n        // 유효성 체크\r\n        let res = this.formValidate(item, this.toast);\r\n\r\n        let value = '';\r\n        if (res === '_!valid_false') {\r\n          enable= false;\r\n          return true;    // 유효성 체크 false / Break;\r\n        }\r\n        else {\r\n          value = res;\r\n        }\r\n\r\n        // answer 데이터 만들기\r\n        let answer = item.value;\r\n        if (item.elType === 'c-input-checkbox-group') {\r\n          answer = ''\r\n          for (let k=0; k<item.value.length; k++) {\r\n            if (k<item.value.length-1) {\r\n              answer += `${item.value[k]}, `\r\n            }\r\n            else if (k===item.value.length-1) {\r\n              answer += `${item.value[k]}`\r\n            }\r\n          }\r\n        }\r\n        else if (item.elType === 'c-input-regionForm') {\r\n          answer = `${item.value.sido.label} ${item.value.sigungu.label}`\r\n        }\r\n        result.push({\r\n          answer: answer,\r\n          question: item.name\r\n        })\r\n      })\r\n\r\n      return { 'enable': enable, 'result': result };\r\n    },\r\n    // 삭제할 폼 데이터\r\n    removeFormData(field) {\r\n      for(let i=0; i<this.formData.length; i++) {\r\n        if(this.formData[i].field===field) {\r\n          this.formData.remove(i);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    // 추가할 폼 데이터\r\n    addFormData(data) {\r\n      data.forEach(d => {\r\n        let field =  find(this.formData, 'field', d.field);\r\n        if(!field) this.formData = this.formData.concat(this.setForm(data));\r\n      })\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    containerStyle() {\r\n      if(this.containerCustomStyle) {\r\n        return this.containerCustomStyle;\r\n      }\r\n      \r\n      let deco = {};\r\n\r\n      // flex일 경우\r\n      if (this.formType\r\n        && this.formType.align!==undefined\r\n        && this.formType.align!=='block') {\r\n        deco.display = 'flex';\r\n        deco.justifyContent = this.formType.align;\r\n      }\r\n\r\n      let gutter = this.gutter !== undefined ? this.gutter : 24;\r\n      deco.marginTop = gutter + 'px';\r\n\r\n      return deco;\r\n    },\r\n    labelStyle() {\r\n      if(this.labelCustomStyle) {\r\n        return this.labelCustomStyle;\r\n      }\r\n\r\n      let deco = {};\r\n      deco = {\r\n        margin: '20px 0 6px 0',\r\n        fontSize: '14px',\r\n        color: this.getColor('보조 내용 색상')\r\n      };\r\n      if (this.formType.align!=='block') deco.margin = 0;\r\n      return deco;\r\n    },\r\n    descriptionStyle() {\r\n      if (this.descriptionCustomStyle) {\r\n        return this.descriptionCustomStyle;\r\n      }\r\n\r\n      let deco = {\r\n        marginBottom: '8px',\r\n        fontSize: '12px',\r\n        color: this.getColor('보조 내용 색상')\r\n      };\r\n      return deco;\r\n    },\r\n    unitStyle() {\r\n      if (this.unitCustomStyle) {\r\n        return this.unitCustomStyle;\r\n      }\r\n\r\n      let deco = {\r\n        fontSize: '14px',\r\n        fontWeight: '500',\r\n        color: this.getColor('기본 내용 색상')\r\n      };\r\n      return deco;\r\n    },\r\n    inputStyle() {\r\n      if(this.inputCustomStyle)\r\n        return this.inputCustomStyle;\r\n      if(this.inputDateStyle)\r\n        return this.inputDateStyle;\r\n      if(this.inputTimeStyle)\r\n        return this.inputTimeStyle;\r\n\r\n      let deco = {\r\n        border: 0,\r\n        padding: '12px',\r\n        fontSize: '14px'\r\n      };\r\n\r\n      switch (this.formType && this.formType.input) {\r\n        case 'round':\r\n          deco.borderRadius = this.radius.borderRadius;\r\n          deco.border = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          break;\r\n        case 'underline':\r\n          deco.borderBottom = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          break;\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    buttonStyle() {\r\n      if(this.addressButtonCustomStyle) return this.addressButtonCustomStyle; // 주소 검색 버튼\r\n\r\n      if(this.buttonCustomStyle) return this.buttonCustomStyle;\r\n\r\n      let deco = {\r\n        border: 0,\r\n        padding: '10px 20px',\r\n        fontSize: '14px',\r\n        color: this.brandColor.main,\r\n      };\r\n\r\n      switch (this.formType && this.formType.button) {\r\n        case 'round':\r\n          deco.borderRadius = this.radius.borderRadius;\r\n          deco.border = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          deco.backgroundColor = this.getColor('보조 테두리선 색상');\r\n          break;\r\n        case 'underline':\r\n          deco.borderBottom = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          deco.backgroundColor = this.getColor('기본 테두리선 색상');\r\n          break;\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    boxStyle() {\r\n      if (this.boxCustomStyle) return this.boxCustomStyle;\r\n\r\n      let deco = {\r\n        border: 0,\r\n        width: '18px',\r\n        height: '18px'\r\n      };\r\n\r\n      switch (this.formType && this.formType.box) {\r\n        case 'round':\r\n          deco.borderRadius = '4px';\r\n          deco.border = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          break;\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    checkStyle() {\r\n      if (this.checkCustomStyle) return this.checkCustomStyle;\r\n      let deco = {\r\n        fontSize: '16px',\r\n        backgroundColor: this.getColor('Primary Color'),\r\n        borderRadius:'4px',\r\n        color: 'white'\r\n      };\r\n\r\n      return deco;\r\n    },\r\n    listStyle() {\r\n      if(this.listCustomStyle)\r\n        return this.listCustomStyle;\r\n\r\n      let deco = {};\r\n\r\n      switch (this.formType && this.formType.list) {\r\n        case 'horizontal':\r\n          deco.display = 'flex';\r\n          break;\r\n        case 'vertical':\r\n          deco.display = 'block';\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    dropdownStyle() {\r\n      let deco = {\r\n        padding: '8px 16px',\r\n        fontSize: '14px'\r\n      };\r\n\r\n      if(this.dropdownCustomStyle)\r\n        return this.dropdownCustomStyle;\r\n\r\n      switch (this.formType && this.formType.input) {\r\n        case 'round':\r\n          deco.borderRadius = this.radius.borderRadius;\r\n          deco.border = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          break;\r\n        case 'underline':\r\n          deco.borderRadius = 0;\r\n          deco.borderBottom = `1px solid ${this.getColor('기본 테두리선 색상')}`;\r\n          break;\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    deleteIconStyle() {\r\n      return {\r\n        backgroundColor: 'rgb(221, 221, 221)',\r\n        color: 'white',\r\n        borderRadius: '14px',\r\n        fontSize: '14px',\r\n        right: '12px',\r\n        top: '10px',\r\n        padding: '2px',\r\n        position: 'absolute'\r\n      };\r\n    }\r\n  }\r\n}"]}]}