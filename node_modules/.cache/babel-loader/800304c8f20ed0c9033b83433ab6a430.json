{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Form/CInputImgUploaderSingle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Form/CInputImgUploaderSingle.vue","mtime":1605259987000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mard/dev/grit12/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from '@/components/Mixins/FormMixin';\nimport ImageUploaderMixin from \"@/components/Mixins/ImageUploaderMixin\";\nimport uuidv4 from \"uuid/v4\";\nexport default {\n  name: 'c-input-imgUploader-single',\n  mixins: [ImageUploaderMixin, FormMixin],\n  props: {\n    data: {\n      type: String,\n      required: false\n    },\n    label: {\n      type: String,\n      required: false\n    },\n    index: {\n      type: Number,\n      required: false\n    },\n    borderStyle: {\n      type: String,\n      default: 'rectangle' // circle, rectangle, radius\n\n    },\n    align: {\n      type: String,\n      default: 'left' // left, center, right\n\n    },\n    inputWrapStyle: {\n      type: Object,\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      uid: '',\n      file: this.value,\n      imageArray: []\n    };\n  },\n  created: function created() {\n    this.uid = uuidv4(); // if(this.data!==undefined) {\n    //   this.properties.img = this.objectValue(this.getDataSet(), this.properties.data);\n    // }\n    //this.element('a-input-label').properties.enable = true;\n  },\n  computed: {\n    fileExisted: function fileExisted() {\n      if (this.file === undefined || this.file === '') return false;else return true;\n    },\n    alignStyle: function alignStyle() {\n      var deco = {};\n\n      if (this.align === 'center') {\n        deco.display = 'flex';\n        deco.justifyContent = 'center';\n      }\n\n      if (this.inputWrapStyle) {\n        deco = this.inputWrapStyle;\n      }\n\n      return deco;\n    },\n    viewStyles: function viewStyles() {\n      var deco = {\n        border: '2px solid #ddd',\n        backgroundImage: 'url(' + this.file + ')',\n        marginTop: '8px',\n        marginRight: '6px',\n        width: '96px',\n        height: '96px',\n        borderRadius: '50%'\n      };\n\n      if (this.imgUploaderStyle) {\n        if (this.imgUploaderStyle.width) deco.width = this.imgUploaderStyle.width;\n        if (this.imgUploaderStyle.height) deco.height = this.imgUploaderStyle.height;\n      }\n\n      return deco;\n    },\n    closeStyles: function closeStyles() {\n      return {};\n    },\n    addIconStyle: function addIconStyle() {\n      return {\n        color: '#bbb',\n        fontSize: '36px'\n      }; // return { color: this.getColor('브랜드 강조 색상') }\n    },\n    imgAddButtonStyle: function imgAddButtonStyle() {\n      return {\n        fontSize: '12px',\n        fontWeight: '500',\n        color: this.brandColor.main.color,\n        backgroundColor: '#fff',\n        border: \"1px solid \".concat(this.getColor('기본 테두리선 색상')),\n        borderRadius: this.radius.borderRadius,\n        width: '64px',\n        height: '32px',\n        margin: '0 4px'\n      };\n    },\n    imgRemoveButtonStyle: function imgRemoveButtonStyle() {\n      return {\n        fontSize: '12px',\n        fontWeight: '500',\n        color: '#fff',\n        backgroundColor: '#999',\n        borderRadius: this.radius.borderRadius,\n        width: '64px',\n        height: '32px',\n        margin: '0 4px'\n      };\n    }\n  },\n  watch: {\n    value: function value(n) {\n      if (Array.isArray(this.file)) {\n        this.file = n;\n      } else {\n        this.file = this.image(n);\n      }\n    }\n  },\n  methods: {\n    onFileChange: function () {\n      var _onFileChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(e) {\n        var files, length, j;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$store.commit('setLoadingSpinner', true);\n                files = e.target.files || e.dataTransfer.files;\n\n                if (files.length) {\n                  _context.next = 5;\n                  break;\n                }\n\n                this.$store.commit('setLoadingSpinner', false);\n                return _context.abrupt(\"return\");\n\n              case 5:\n                length = Object.keys(files).length;\n                j = 0;\n\n              case 7:\n                if (!(j < length)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.loadFile(files[j], length, j);\n\n              case 10:\n                j++;\n                _context.next = 7;\n                break;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onFileChange(_x) {\n        return _onFileChange.apply(this, arguments);\n      }\n\n      return onFileChange;\n    }(),\n    loadFile: function loadFile(file, length, index) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = function (f) {\n          var params = {\n            f: f,\n            file: file,\n            length: length,\n            index: index\n          };\n          resolve(params);\n        };\n      }).then(function (params) {\n        return _this.loadImage(params.f, params.file, params.length, params.index);\n      }).catch(function (err) {\n        _this.$store.commit('setLoadingSpinner', false);\n\n        console.log(err);\n      });\n    },\n    loadImage: function loadImage(f, file, length, index) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          var params = {\n            file: file,\n            image: image,\n            length: length,\n            index: index\n          };\n          resolve(params);\n        };\n\n        image.src = f.target.result;\n      }).then(function (params) {\n        var afterAction = function (file, resizeImg, length, index) {\n          var self = this;\n          self.imageArray.push(resizeImg);\n\n          if (length === self.imageArray.length) {\n            if (length === 1) self.file = self.imageArray[0];else self.file = self.imageArray;\n            self.$emit('update:value', self.file);\n            self.imageArray = [];\n            self.$store.commit('setLoadingSpinner', false);\n          }\n        }.bind(_this2);\n\n        return _this2.getFixedImage(params.file, params.image, params.length, params.index, afterAction); // return this.getFixedImage(params.file, params.image, params.length, params.index);\n      }).catch(function (err) {\n        _this2.$store.commit('setLoadingSpinner', false);\n\n        console.log(err);\n      });\n    },\n    deleteImg: function deleteImg() {\n      if (this.file && this.file !== '') {\n        this.file = '';\n        this.$emit('delImg', this.index);\n      }\n    }\n  }\n};",{"version":3,"sources":["CInputImgUploaderSingle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style=\"[containerStyle, alignStyle]\"\r\n       class=\"flex-center wrap\r\n              c-input-imgUploader-container\r\n              position-relative\">\r\n\r\n    <!-- 레이블 -->\r\n    <div v-if=\"formType.label && label\" :style=\"labelStyle\" style=\"width:100%;\">{{ label }}</div>\r\n\r\n    <!-- 이미지 업로더 -->\r\n    <div class=\"imgUploader-view flex-center\"\r\n      :style=\"viewStyles\">\r\n      <i v-if=\"!fileExisted\" \r\n        class=\"material-icons\"\r\n        :style=\"addIconStyle\">add_a_photo</i>\r\n    </div>\r\n\r\n    <div class=\"flex-center full-width\" style=\"margin-top:12px\">\r\n      <input class=\"imgUploader-input\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              @click.stop\r\n              :id=\"uid\"\r\n              @change=\"onFileChange\" \r\n              multiple=\"multiple\" />\r\n      <label class=\"imgUploader-box\"\r\n              @click.stop :for=\"uid\" style=\"width:72px;height:32px;\">          \r\n        <div class=\"flex-center unselect\" :style=\"imgAddButtonStyle\">{{ fileExisted ? '변경' : '추가' }}</div>\r\n      </label>\r\n\r\n      <div v-if=\"fileExisted\" class=\"flex-center unselect\" :style=\"imgRemoveButtonStyle\" @click.stop.prevent=\"deleteImg\">삭제</div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import FormMixin from '@/components/Mixins/FormMixin'\r\n  import ImageUploaderMixin from \"@/components/Mixins/ImageUploaderMixin\";\r\n  import uuidv4 from \"uuid/v4\";\r\n  export default {\r\n    name: 'c-input-imgUploader-single',\r\n    mixins: [\r\n      ImageUploaderMixin,\r\n      FormMixin\r\n    ],\r\n    props: {\r\n      data: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      label: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      index: {\r\n        type: Number,\r\n        required: false\r\n      },\r\n      borderStyle: {\r\n        type: String,\r\n        default: 'rectangle'      // circle, rectangle, radius\r\n      },\r\n      align: {\r\n        type: String,\r\n        default: 'left'           // left, center, right\r\n      },\r\n      inputWrapStyle: {\r\n        type: Object,\r\n        required: false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        uid: '',\r\n        file: this.value,\r\n        imageArray: []\r\n      };\r\n    },\r\n    created() {\r\n      this.uid = uuidv4();\r\n      // if(this.data!==undefined) {\r\n      //   this.properties.img = this.objectValue(this.getDataSet(), this.properties.data);\r\n      // }\r\n      //this.element('a-input-label').properties.enable = true;\r\n    },\r\n    computed: {\r\n      fileExisted() {\r\n        if (this.file===undefined || this.file==='') return false;\r\n        else return true;\r\n      },\r\n      alignStyle() {\r\n        let deco = {};\r\n        if(this.align === 'center') {\r\n          deco.display = 'flex';\r\n          deco.justifyContent = 'center';\r\n        }\r\n        if(this.inputWrapStyle) {\r\n          deco = this.inputWrapStyle;\r\n        }\r\n\r\n        return deco;\r\n      },\r\n      viewStyles() {\r\n        let deco = {\r\n          border: '2px solid #ddd',\r\n          backgroundImage: 'url('+ this.file +')',\r\n          marginTop: '8px',\r\n          marginRight: '6px',\r\n          width: '96px',\r\n          height: '96px',\r\n          borderRadius: '50%'\r\n        };\r\n\r\n        if (this.imgUploaderStyle) {\r\n          if (this.imgUploaderStyle.width) deco.width = this.imgUploaderStyle.width;\r\n          if (this.imgUploaderStyle.height) deco.height = this.imgUploaderStyle.height;\r\n        }\r\n\r\n        return deco;\r\n      },\r\n      closeStyles() {\r\n        return {};\r\n      },\r\n      addIconStyle() {\r\n        return {\r\n          color: '#bbb',\r\n          fontSize: '36px'\r\n        }\r\n        // return { color: this.getColor('브랜드 강조 색상') }\r\n      },\r\n      imgAddButtonStyle() {\r\n        return {\r\n          fontSize: '12px',\r\n          fontWeight: '500',\r\n          color: this.brandColor.main.color,\r\n          backgroundColor: '#fff',\r\n          border: `1px solid ${this.getColor('기본 테두리선 색상')}`,\r\n          borderRadius: this.radius.borderRadius,\r\n          width: '64px',\r\n          height: '32px',\r\n          margin: '0 4px'\r\n        }\r\n      },\r\n      imgRemoveButtonStyle() {\r\n        return {\r\n          fontSize: '12px',\r\n          fontWeight: '500',\r\n          color: '#fff',\r\n          backgroundColor: '#999',\r\n          borderRadius: this.radius.borderRadius,\r\n          width: '64px',\r\n          height: '32px',\r\n          margin: '0 4px'\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      value(n) {\r\n        if (Array.isArray(this.file)) {\r\n          this.file = n;\r\n        }\r\n        else {\r\n          this.file = this.image(n);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      async onFileChange(e) {\r\n        this.$store.commit('setLoadingSpinner', true);\r\n        let files = e.target.files || e.dataTransfer.files;\r\n        if (!files.length) {\r\n          this.$store.commit('setLoadingSpinner', false);\r\n          return;\r\n        }\r\n\r\n        let length = Object.keys(files).length;\r\n\r\n        for(let j=0; j<length; j++) {\r\n          await this.loadFile(files[j], length, j);\r\n        }\r\n      },\r\n      loadFile(file, length, index) {\r\n        return new Promise((resolve) => {\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = (f) => {\r\n            let params = {\r\n              f: f,\r\n              file: file,\r\n              length: length,\r\n              index: index\r\n            };\r\n            resolve(params);\r\n          };\r\n        })\r\n        .then((params) => {\r\n          return this.loadImage(params.f, params.file, params.length, params.index);\r\n        }) \r\n        .catch((err) => {\r\n          this.$store.commit('setLoadingSpinner', false);\r\n          console.log(err);\r\n        })\r\n      },\r\n      loadImage(f, file, length, index) {\r\n        return new Promise((resolve, reject) => {\r\n          const image = new Image;\r\n          image.onload = () => {\r\n            let params = {\r\n              file: file,\r\n              image: image,\r\n              length: length,\r\n              index: index\r\n            };\r\n            resolve(params);\r\n          };\r\n          image.src = f.target.result;\r\n        })  \r\n        .then(params => {\r\n          let afterAction = (function(file, resizeImg, length, index) {\r\n            let self = this;\r\n            self.imageArray.push(resizeImg);\r\n            if (length===self.imageArray.length) {\r\n              if (length===1) self.file = self.imageArray[0];\r\n              else self.file = self.imageArray;\r\n              self.$emit('update:value', self.file);\r\n              self.imageArray = [];\r\n              self.$store.commit('setLoadingSpinner', false);\r\n            }\r\n          }).bind(this);\r\n\r\n          return this.getFixedImage(params.file, params.image, params.length, params.index, afterAction);\r\n          // return this.getFixedImage(params.file, params.image, params.length, params.index);\r\n        })  \r\n        .catch((err) => {\r\n          this.$store.commit('setLoadingSpinner', false);\r\n          console.log(err);\r\n        })           \r\n      },\r\n      deleteImg() {\r\n        if ( this.file && this.file !== '' ) {\r\n          this.file = '';\r\n          this.$emit('delImg', this.index);\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  //@import '~assets/css/ui_main'\r\n  .imgUploader-view\r\n    background-size cover\r\n    background-position center\r\n\r\n  .imgUploader-input\r\n    position fixed\r\n    top -20px\r\n    left -20px\r\n    width 0\r\n    height 0\r\n\r\n  .imgUploader-box\r\n    display flex\r\n    justify-content center\r\n    align-items center\r\n    text-align center\r\n    width 100%\r\n    height 100%\r\n\r\n  .imgUploader-close\r\n    cursor pointer\r\n    background-color rgba(0, 0, 0, 0.4)\r\n    color #eee\r\n    border-radius 50%\r\n    padding 2px\r\n    font-size 12px\r\n    text-align center\r\n    position absolute\r\n    top 0px\r\n    right 0px\r\n    z-index 10\r\n</style>\r\n"],"sourceRoot":"src/components/Components/Form"}]}