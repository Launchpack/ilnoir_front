{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockBannerMobile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockBannerMobile.vue","mtime":1605260035000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BlockMixin from \"@/components/Mixins/BlockMixin\";\nexport default {\n  name: 'BlockBannerMobile',\n  components: {},\n  mixins: [BlockMixin],\n  props: {},\n  data: function data() {\n    return {\n      \"banner\": [],\n      \"reRender\": true,\n      \"imgHeight\": \"100%\"\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.imgHeight = window.innerWidth * 0.55 + 'px';\n    });\n  },\n  methods: {\n    reRenderSlick: function reRenderSlick() {\n      var _this2 = this;\n\n      if (this.reRender === false) return;\n      this.reRender = false;\n      this.$nextTick(function () {\n        _this2.reRender = true;\n      });\n    },\n    handleAfterChange: function handleAfterChange(event, slick, currentSlide) {\n      this.currentSlide = currentSlide;\n    },\n    setScreenWidth: function setScreenWidth() {\n      this.screenWidth = window.innerWidth;\n    },\n    init: function init() {\n      this.getData();\n    },\n    getData: function getData() {\n      var url = 'public/banner/list';\n\n      if (this.bannerId !== 0) {\n        this.getBanner(\"public/banner/1\");\n      } else {\n        if (this.$store.getters.device === 'pc') {\n          url += '/pc';\n        }\n\n        this.getBannerList(url);\n      }\n    },\n    getBanner: function getBanner(url) {\n      var _this3 = this;\n\n      this.$axios.get(url).then(function (res) {\n        _this3.banner = [];\n        var date = new Date().getTime();\n        var start_date = new Date(res.data.start_date).getTime();\n        var end_date = new Date(res.data.end_date).getTime();\n\n        if (date > start_date || date < end_date) {\n          _this3.isShowing = true;\n        } else {\n          _this3.isShowing = false;\n        } // image banner\n\n\n        if (res.data.type === 0) {\n          for (var i = 0; i < res.data.imgs.length; i++) {\n            var img = res.data.imgs[i];\n\n            _this3.banner.push({\n              url: img,\n              link: res.data.links[i]\n            });\n          }\n\n          _this3.imgBannerRatio = res.data.pc ? res.data.ratio_pc : res.data.ratio;\n        }\n\n        _this3.reRenderSlick();\n\n        _this3.$emit('getBanner');\n      }).catch(function () {\n        setTimeout(function () {}, 700);\n      });\n    },\n    getBannerList: function getBannerList(url) {\n      var _this4 = this;\n\n      this.$axios.get(url).then(function (res) {\n        if (res.data.start_date && res.data.end_date) {\n          var date = new Date().getTime();\n          var start_date = new Date(res.data.start_date).getTime();\n          var end_date = new Date(res.data.end_date).getTime();\n\n          if (date > start_date || date < end_date) {\n            _this4.isShowing = true;\n          } else {\n            _this4.isShowing = false;\n          }\n        } else {\n          _this4.isShowing = true;\n        }\n\n        if (res.data.length > 0) {\n          var imgBanner = res.data.filter(function (item) {\n            return item.data[0].type === 0;\n          });\n\n          if (imgBanner.length > 0) {\n            _this4.imgBannerRatio = imgBanner[0].ratio;\n            _this4.banner = imgBanner[0].data;\n          }\n        }\n\n        _this4.reRenderSlick();\n\n        _this4.$emit('getBanner');\n      }).catch(function () {\n        _this4.$emit('getBanner');\n      });\n    }\n  },\n  computed: {\n    containerStyle: function containerStyle() {\n      return {\n        height: \"\".concat(this.imgHeight, \"px\")\n      };\n    },\n    imgStyle: function imgStyle() {\n      return {\n        width: '100%',\n        // height: this.imgHeight,\n        objectFit: 'cover'\n      };\n    },\n    slickOptions: function slickOptions() {\n      return {\n        infinite: true,\n        variableWidth: false,\n        centerPadding: '',\n        centerMode: false,\n        autoplay: true,\n        arrows: false,\n        dots: false,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplaySpeed: 3000\n      };\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["BlockBannerMobile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"full-width\" :style=\"[brandBgColor.main, containerStyle]\" name=\"Banner\">\n  <slick :options=\"slickOptions\" ref=\"slick\"\n    v-if=\"reRender\"\n    @afterChange=\"handleAfterChange\">\n    <div v-for=\"(item,idx) in banner\" :key=\"'img-'+idx\">\n      <img :src=\"item.url\" :style=\"imgStyle\">\n    </div>\n  </slick>\n  </div>\n</template>\n<script>\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'BlockBannerMobile',\n  components: {\n\n  },\n  mixins: [\n    BlockMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"banner\": [],\n      \"reRender\": true,\n      \"imgHeight\": \"100%\"\n    }\n  },\n  created() {\n      this.init()\n    },\n  mounted() {\n    this.$nextTick(()=>{\n      this.imgHeight = window.innerWidth * 0.55 + 'px';\n    });\n  },\n  \n  methods: {\n    reRenderSlick() {\n      if(this.reRender === false) return;\n      this.reRender = false;\n      this.$nextTick(() => {\n        this.reRender = true;\n      });\n    },\n    handleAfterChange(event, slick, currentSlide) {\n        this.currentSlide = currentSlide;\n      },\n    setScreenWidth() {\n        this.screenWidth = window.innerWidth;\n      },\n    init() {\n        this.getData();\n      },\n    getData() {\n        let url = 'public/banner/list'\n        if(this.bannerId !== 0) {\n          this.getBanner(`public/banner/1`);\n\n        }else {\n          if(this.$store.getters.device==='pc') {\n            url += '/pc'\n          }\n          this.getBannerList(url);\n        }\n        \n      },\n    getBanner(url) {\n      this.$axios.get(url).then(res=>{\n        this.banner = [];\n\n        let date = new Date().getTime();\n        let start_date = new Date(res.data.start_date).getTime();\n        let end_date = new Date(res.data.end_date).getTime();\n        \n        if (date > start_date || date < end_date) {\n          this.isShowing = true;\n        } else {\n          this.isShowing = false;\n        }\n      \n        // image banner\n        if(res.data.type === 0) {\n          for(let i=0; i<res.data.imgs.length; i++) {\n            let img = res.data.imgs[i];\n            this.banner.push({\n                url: img,\n                link: res.data.links[i]\n            });\n          }\n          this.imgBannerRatio = res.data.pc ? res.data.ratio_pc : res.data.ratio;\n        }\n        \n        this.reRenderSlick();\n        this.$emit('getBanner');\n      }).catch(()=>{\n        setTimeout(() => {\n          \n        }, 700);\n      });\n    },\n    getBannerList(url) {\n      this.$axios.get(url).then(res=>{\n        if (res.data.start_date && res.data.end_date) {\n          let date = new Date().getTime();\n          let start_date = new Date(res.data.start_date).getTime();\n          let end_date = new Date(res.data.end_date).getTime();\n          \n          if (date > start_date || date < end_date) {\n            this.isShowing = true;\n          } else {\n            this.isShowing = false;\n          }\n        } else {\n          this.isShowing = true;\n        }\n\n        if(res.data.length>0) {\n          let imgBanner = res.data.filter(item => item.data[0].type===0);\n          if(imgBanner.length>0) {\n            this.imgBannerRatio = imgBanner[0].ratio;\n            this.banner = imgBanner[0].data;\n          }\n\n        }\n        this.reRenderSlick();\n        this.$emit('getBanner');\n      }).catch(()=>{\n        this.$emit('getBanner');\n      });\n    }\n  },\n  computed: {\n    containerStyle() {\n      return {\n        height: `${this.imgHeight}px`,\n      }\n    },\n    imgStyle() {\n      return {\n        width: '100%',\n        // height: this.imgHeight,\n        objectFit: 'cover'\n      }\n    },\n    slickOptions() {\n        return {\n          infinite: true,\n          variableWidth: false,\n          centerPadding: '',\n          centerMode: false,\n          autoplay: true,\n          arrows: false,\n          dots: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          autoplaySpeed: 3000,\n        }\n      }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"],"sourceRoot":"src/components/Components/Block"}]}