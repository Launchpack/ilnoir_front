{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockRegions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockRegions.vue","mtime":1605259980000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CardMixin from '@/components/Mixins/CardMixin';\nexport default {\n  name: 'BlockRegion',\n  components: {},\n  mixins: [CardMixin],\n  props: {\n    scrollHeight: {\n      type: Number,\n      default: 300,\n      required: false\n    },\n    filterOptions: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      \"dong\": [],\n      \"sido\": [],\n      \"type\": \"service\",\n      \"address\": {},\n      \"showMap\": false,\n      \"sigungu\": [],\n      \"hoverSido\": {},\n      \"hoverSigungu\": {},\n      \"selectedSido\": {},\n      \"selectedSigungu\": {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // 시/도 데이터 가져오기\n    this.$axios.get(\"public/address/\".concat(this.type, \"/sido\")).then(function (res) {\n      if (res.status === 200) {\n        _this.sido = res.data;\n\n        _this.sido.unshift({\n          id: '',\n          label: '전체',\n          name: '전체',\n          value: ''\n        });\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  },\n  methods: {\n    getAddress: function getAddress(params) {\n      var _this2 = this;\n\n      console.log('params', params);\n      /* 좌표 세팅 로직 시작 */\n\n      if (params === undefined) {\n        // navigator 로 현재 좌표 가져오기\n        if (navigator.geolocation) {\n          // GPS를 지원하면 navigator.geolocation 으로 현재 좌표 얻어오기\n          navigator.geolocation.getCurrentPosition(function (position) {\n            _this2.address.latitude = position.coords.latitude;\n            _this2.address.longitude = position.coords.longitude;\n            var location = {\n              lat: _this2.address.latitude,\n              lng: _this2.address.longitude\n            };\n\n            _this2.$store.commit('setCurrentPosition', location);\n\n            _this2.$store.commit('setCurrentAddress', _this2.address); // this.$emit('currentAddress', this.address);\n            // 다시 호출해서 좌표 업데이트하는 방식 - recursive\n\n\n            _this2.getAddress(location);\n            /*무한루프로 코드 제거*/\n\n          }, function (error) {\n            var address = {\n              lat: 37.5666805,\n              lng: 126.9784147\n            };\n\n            _this2.$axios.get(\"public/service/geocode?latitude=\".concat(address.lat, \"&longitude=\").concat(address.lng)).then(function (res) {\n              if (res.status === 200) {\n                if (res.data.address) {\n                  _this2.address = res.data.address;\n                  var location = {\n                    lat: _this2.address.latitude,\n                    lng: _this2.address.longitude\n                  };\n\n                  _this2.$store.commit('setCurrentPosition', location);\n\n                  _this2.$store.commit('setCurrentAddress', _this2.address);\n\n                  _this2.$emit('currentAddress', _this2.address);\n                } // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\n                // if (res.data.address === false) this.setFullAddress(false);\n                // else this.setFullAddress(true);\n                // 위치 업데이트 emit\n\n\n                _this2.$emit('updatePosition'); // this.setFullAddress();\n\n              }\n            }).catch(function (err) {\n              console.log(err);\n            });\n          }, {\n            enableHighAccuracy: false,\n            maximumAge: Infinity,\n            timeout: 10000\n          });\n        } else {\n          console.log('GPS를 지원하지 않습니다');\n        }\n      } else {\n        console.log('address', this.address);\n        this.address.latitude = params.lat;\n        this.address.longitude = params.lng;\n        var location = {\n          lat: this.address.latitude,\n          lng: this.address.longitude\n        };\n        this.$store.commit('setCurrentPosition', location);\n        this.$store.commit('setCurrentAddress', this.address);\n        this.$emit('changePosition', location); // this.$emit('currentAddress', this.address);\n        // 가져온 좌표로 주소 받아오기\n\n        setTimeout(function () {\n          _this2.$axios.get(\"public/service/geocode?latitude=\".concat(_this2.address.latitude, \"&longitude=\").concat(_this2.address.longitude)).then(function (res) {\n            if (res.status === 200) {\n              if (res.data.address) {\n                _this2.address = res.data.address;\n                var addressLabel = \"\".concat(_this2.address.sido, \" \").concat(_this2.address.sigungu);\n                var _location = {\n                  lat: _this2.address.latitude,\n                  lng: _this2.address.longitude\n                };\n\n                _this2.$store.commit('setCurrentPosition', _location);\n\n                var sido = {\n                  id: _this2.address.sido_id,\n                  name: _this2.address.sido,\n                  label: _this2.address.sido,\n                  value: _this2.address.sido_id\n                };\n                var sigungu = {\n                  id: _this2.address.sigungu_id,\n                  name: _this2.address.sigungu,\n                  label: _this2.address.sigungu,\n                  value: _this2.address.sigungu_id\n                };\n\n                _this2.$emit('selectedRegion', {\n                  sido: sido,\n                  sigungu: sigungu\n                });\n\n                _this2.filterOptions.set.forEach(function (setItem) {\n                  if (setItem.operator === '__sido__id') {\n                    setItem.value = _this2.address.sido_id;\n                    setItem.label = _this2.address.sido;\n                  } else if (setItem.operator === '__sigungu__id') {\n                    setItem.value = _this2.address.sigungu_id;\n                    setItem.label = _this2.address.sigungu;\n                  }\n                });\n\n                _this2.$emit('update:filterOptions', _this2.filterOptions);\n\n                _this2.$emit('selectedLabel', 0, addressLabel);\n\n                _this2.$emit('selectFilter');\n              } // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\n              // if (res.data.address === false) this.setFullAddress(false);\n              // else this.setFullAddress(true);\n              // 위치 업데이트 emit\n              // this.$emit('updatePosition');\n              // this.setFullAddress();\n\n            }\n          }).catch(function (err) {\n            console.log(err);\n\n            _this2.toast('현위치 설정에 실패하였습니다');\n          });\n        }, 500);\n      } //this.$emit('selectedLabel',0,this.address)\n      //this.$emit('selectFilter')\n\n\n      this.selectedSido = {};\n      this.selectedSigungu = {};\n      this.$emit('closeModal');\n      /* 좌표 세팅 로직 끝 */\n    },\n    // 현재 위치로 설정\n    clickCurrent: function clickCurrent() {\n      this.getAddress();\n    },\n    // 마우스 오버, 클릭 style 때문에 methods로 처리\n    itemStyle: function itemStyle(item, type, idx) {\n      var deco = {\n        color: this.brandColor.main.color,\n        borderBottom: this.brandBorder.main.border // marginBottom: this.layout_gutter+'px'\n\n      }; // 시도 아이템: 마우스오버 or 클릭 시 배경색상\n\n      if (type === 'sido' && item !== undefined) {\n        deco.background = this.brandBgColor.sub.backgroundColor;\n\n        if (item.id === this.hoverSido.id || item.id === this.selectedSido.id) {\n          deco.background = this.brandBgColor.primary.backgroundColor;\n          deco.color = '#fff';\n          if (idx === this.sido.length - 1) deco.border = 'none';\n        }\n      } // 시군구 아이템: 마우스오버 or 클릭 시 배경색상\n\n\n      if (type === 'sigungu' && item !== undefined) {\n        deco.background = this.brandBgColor.white.backgroundColor;\n\n        if (item.id === this.hoverSigungu.id || item.id === this.selectedSigungu.id) {\n          deco.background = this.brandBgColor.primary.backgroundColor;\n          deco.color = '#fff';\n          deco.justifyContent = 'space-between';\n          if (idx === this.sigungu.length - 1) deco.border = 'none';\n        }\n      }\n\n      return deco;\n    },\n    clickSido: function clickSido(item) {\n      var _this3 = this;\n\n      // 시군구 데이터 가져오기\n      if (item.id !== '') {\n        this.$axios.get(\"public/address/\".concat(this.type, \"/sido/\").concat(item.id, \"/sigungu\")).then(function (res) {\n          if (res.status === 200) {\n            _this3.sigungu = res.data;\n            _this3.selectedSido = item;\n            _this3.selectedSigungu = {};\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        this.sigungu = [{\n          id: '',\n          label: '전체',\n          name: '전체',\n          sido_id: '',\n          value: ''\n        }];\n        this.selectedSido = item;\n        this.selectedSigungu = {};\n      }\n    },\n    clickSigungu: function clickSigungu(item) {\n      this.selectedSigungu = item;\n      this.$emit('selectedRegion', {\n        sido: this.selectedSido,\n        sigungu: this.selectedSigungu\n      });\n    },\n    selectRegion: function selectRegion() {\n      var _this4 = this;\n\n      var address = \"\".concat(this.selectedSido.name, \" \").concat(this.selectedSigungu.name);\n      if (this.selectedSido.name === '세종특별자치시') address = this.selectedSido.name;\n      if (this.selectedSido.name === '전체') address = this.selectedSido.name;\n      var url = \"/public/service/local?search_text=\".concat(address);\n\n      if (this.isIE) {\n        url = encodeURI(\"/public/service/local?search_text=\".concat(address));\n      }\n\n      this.$axios.get(url).then(function (res) {\n        if (res.status === 200) {\n          var location = res.data.local_list[0];\n\n          if (location && Object.keys(location).length !== 0) {\n            _this4.$store.commit('setCurrentPosition', {\n              lng: location.x,\n              lat: location.y\n            });\n          }\n\n          _this4.filterOptions.set.forEach(function (setItem) {\n            if (setItem.operator === '__sido__id') {\n              setItem.value = _this4.selectedSido.id;\n              setItem.label = _this4.selectedSido.label;\n            } else if (setItem.operator === '__sigungu__id') {\n              setItem.value = _this4.selectedSigungu.id;\n              setItem.label = _this4.selectedSigungu.label;\n            }\n          });\n\n          _this4.$emit('update:filterOptions', _this4.filterOptions);\n\n          _this4.$emit('selectedLabel', 0, address);\n\n          _this4.$emit('selectFilter');\n\n          _this4.$emit('closeModal');\n        }\n      });\n    },\n    selectMap: function selectMap(val) {\n      this.$store.commit('setCurrentPosition', {\n        lng: val.x,\n        lat: val.y\n      });\n      this.$emit('changePosition', {\n        lng: val.x,\n        lat: val.y\n      });\n      this.showMap = false;\n      this.selectedSido = {};\n      this.selectedSigungu = {};\n    },\n    overSido: function overSido(item) {\n      this.hoverSido = item;\n    },\n    leaveSido: function leaveSido() {\n      this.hoverSido = {};\n    },\n    overSigungu: function overSigungu(item) {\n      this.hoverSigungu = item;\n    },\n    leaveSigungu: function leaveSigungu() {\n      this.hoverSigungu = {};\n    }\n  },\n  computed: {\n    colLeft: function colLeft() {\n      return {\n        width: '38%',\n        marginRight: \"\".concat(this.layout_gutter / 2, \"px\")\n      };\n    },\n    colRight: function colRight() {\n      return {\n        width: '62%',\n        marginLeft: \"\".concat(this.layout_gutter / 2, \"px\")\n      };\n    },\n    scrollLeftStyle: function scrollLeftStyle() {\n      var scrollbar = this.getScrollbarWidth();\n      return {\n        width: \"calc(38% + \".concat(scrollbar, \"px)\"),\n        height: \"calc(100vh - \".concat(this.scrollHeight, \"px)\"),\n        overflowY: 'scroll',\n        overflowX: 'hidden'\n      };\n    },\n    scrollRightStyle: function scrollRightStyle() {\n      var scrollbar = this.getScrollbarWidth();\n      return {\n        width: \"calc(62% + \".concat(scrollbar, \"px)\"),\n        height: \"calc(100vh - \".concat(this.scrollHeight, \"px)\"),\n        overflowY: 'scroll',\n        overflowX: 'hidden'\n      };\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["BlockRegions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div :style=\"pagePadding\" style=\"padding-top:20px; padding-bottom:20px;\">\r\n  \r\n  <!--주소 선택-->\r\n  <div class=\"flex-between\" style=\"margin-bottom:12px;\">\r\n    <div class=\"title size-20 bold\" :style=\"brandColor.main\">지역 선택</div>\r\n    <!--<div class=\"flex-align\">-->\r\n    <div v-if=\"$store.getters.social_key.naver.map.client_id !== ''\" class=\"col-6 button size-12 flex-between unselect\" style=\"padding:8px; width: 116px; height:32px; border-radius:4px;\" \r\n      :style=\"[brandBgColor.sub, brandColor.main]\"\r\n      @click=\"clickCurrent\">\r\n      <i class=\"material-icons size-20\" style=\"color: #48b0f7;\">gps_fixed</i>\r\n      <span>내 위치로 설정</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"full-width\" style=\"height: 40vh; overflow-y: scroll\">\r\n    <!-- 시도/시군구 데이터 -->\r\n    <div class=\"flex size-12 weight-500\" :style=\"{borderTop: brandBorder.main.border, borderBottom: brandBorder.main.border}\">\r\n      <!-- 시도 (좌측) -->\r\n        <div :style=\"[colLeft, scrollLeftStyle]\">\r\n          <div v-for=\"(item, idx) in sido\"\r\n               :key=\"`sido${idx}`\"\r\n               class=\"sido-item flex-align unselect\"\r\n               :style=\"[itemStyle(item, 'sido', idx)]\"\r\n               @click.stop.prevent=\"clickSido(item)\"\r\n               @mouseover.stop.prevent=\"overSido(item)\"\r\n               @mouseleave.stop.prevent=\"leaveSido\">\r\n            {{ item.name }}\r\n          </div>\r\n        </div>\r\n      <!-- 시군구 (우측) -->\r\n        <div :style=\"[colRight, scrollRightStyle]\">\r\n          <div v-for=\"(item, idx) in sigungu\"\r\n               :key=\"`sigungu${idx}`\"\r\n               class=\"sigungu-item flex-align unselect\"\r\n               :style=\"[itemStyle(item, 'sigungu', idx)]\"\r\n               @click.stop.prevent=\"clickSigungu(item)\"\r\n               @mouseover.stop.prevent=\"overSigungu(item)\"\r\n               @mouseleave.stop.prevent=\"leaveSigungu\">\r\n            {{ item.name }}\r\n            <i v-if=\"item.id===selectedSigungu.id\" class=\"material-icons size-20\" :style=\"brandColor.white\">check</i>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"flex\" style=\"margin-top:24px;\">\r\n    <div class=\"weight-500 size-14 flex-center\" :style=\"[radius, brandBgColor.sub, brandColor.main]\"\r\n      style=\"height: 48px; width: 50%; margin-right: 4px;\" @click.stop.prevent=\"$emit('closeModal')\">취소</div>\r\n    <div class=\"weight-500 size-14 flex-center\" :style=\"[radius, brandBgColor.primary, brandColor.white]\"\r\n      style=\"height: 48px; width: 50%; margin-left: 4px;\" @click.stop.prevent=\"selectRegion\">완료</div>\r\n  </div>\r\n  \r\n</div>\r\n</template>\r\n<script>\r\nimport CardMixin from '@/components/Mixins/CardMixin';\r\n\r\nexport default {\r\n  name: 'BlockRegion',\r\n  components: {\r\n\r\n  },\r\n  mixins: [\r\n    CardMixin\r\n  ],\r\n  props: {\r\n    scrollHeight: {\r\n      type: Number,\r\n      default: 300,\r\n      required: false,\r\n    },\r\n    filterOptions: {\r\n      type: Object,\r\n    },\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      \"dong\": [],\r\n      \"sido\": [],\r\n      \"type\": \"service\",\r\n      \"address\": {},\r\n      \"showMap\": false,\r\n      \"sigungu\": [],\r\n      \"hoverSido\": {},\r\n      \"hoverSigungu\": {},\r\n      \"selectedSido\": {},\r\n      \"selectedSigungu\": {}\r\n    }\r\n  },\r\n  created() {\r\n    // 시/도 데이터 가져오기\r\n    this.$axios.get(`public/address/${this.type}/sido`)\r\n      .then(res => {\r\n        if ( res.status === 200 ) {\r\n          this.sido = res.data;\r\n          this.sido.unshift({\r\n            id: '',\r\n            label: '전체',\r\n            name: '전체',\r\n            value: ''\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  },\r\n  \r\n  methods: {\r\n    getAddress(params) {\r\n      \r\n      console.log('params',params)\r\n\r\n      /* 좌표 세팅 로직 시작 */\r\n      if (params === undefined) {\r\n        // navigator 로 현재 좌표 가져오기\r\n        if (navigator.geolocation) { // GPS를 지원하면 navigator.geolocation 으로 현재 좌표 얻어오기\r\n          navigator.geolocation.getCurrentPosition(position => {\r\n            this.address.latitude = position.coords.latitude;\r\n            this.address.longitude = position.coords.longitude;\r\n            \r\n            let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n            this.$store.commit('setCurrentPosition', location);\r\n            this.$store.commit('setCurrentAddress', this.address);\r\n            // this.$emit('currentAddress', this.address);\r\n            \r\n            \r\n            // 다시 호출해서 좌표 업데이트하는 방식 - recursive\r\n            this.getAddress(location);\r\n            /*무한루프로 코드 제거*/\r\n          }, error => {\r\n            let address = {\r\n              lat: 37.5666805,\r\n              lng: 126.9784147\r\n            };\r\n            this.$axios.get(`public/service/geocode?latitude=${address.lat}&longitude=${address.lng}`)\r\n            .then(res => {\r\n              if (res.status === 200) {\r\n                if (res.data.address) {\r\n                  this.address = res.data.address;\r\n  \r\n                  let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n                  this.$store.commit('setCurrentPosition', location);                \r\n                  this.$store.commit('setCurrentAddress', this.address);\r\n                  this.$emit('currentAddress', this.address);\r\n                }\r\n  \r\n                // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\r\n                // if (res.data.address === false) this.setFullAddress(false);\r\n                // else this.setFullAddress(true);\r\n  \r\n                // 위치 업데이트 emit\r\n                this.$emit('updatePosition');\r\n  \r\n                // this.setFullAddress();\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n          }, {\r\n            enableHighAccuracy: false,\r\n            maximumAge:Infinity,\r\n            timeout: 10000\r\n          });\r\n        } \r\n        else {\r\n          console.log('GPS를 지원하지 않습니다');\r\n        }\r\n      }\r\n      else {\r\n        console.log('address', this.address)\r\n        \r\n        this.address.latitude = params.lat;\r\n        this.address.longitude = params.lng;\r\n        \r\n        let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n        this.$store.commit('setCurrentPosition', location);\r\n        this.$store.commit('setCurrentAddress', this.address);\r\n        this.$emit('changePosition', location)\r\n        // this.$emit('currentAddress', this.address);\r\n        \r\n        // 가져온 좌표로 주소 받아오기\r\n        setTimeout(() => {\r\n          this.$axios.get(`public/service/geocode?latitude=${this.address.latitude}&longitude=${this.address.longitude}`)\r\n            .then(res => {\r\n              if (res.status === 200) {\r\n                if (res.data.address) {\r\n                  this.address = res.data.address;\r\n\r\n                  let addressLabel = `${this.address.sido} ${this.address.sigungu}`;\r\n  \r\n                  let location = {lat: this.address.latitude, lng: this.address.longitude};\r\n                  this.$store.commit('setCurrentPosition', location);  \r\n                  \r\n                  let sido = {\r\n                    id: this.address.sido_id,\r\n                    name: this.address.sido,\r\n                    label: this.address.sido,\r\n                    value: this.address.sido_id\r\n                  };\r\n                  let sigungu = {\r\n                    id: this.address.sigungu_id,\r\n                    name: this.address.sigungu,\r\n                    label: this.address.sigungu,\r\n                    value: this.address.sigungu_id\r\n                  }\r\n                  this.$emit('selectedRegion', {\r\n                    sido: sido,\r\n                    sigungu: sigungu\r\n                  });\r\n\r\n                  this.filterOptions.set.forEach(setItem => {\r\n                    if (setItem.operator ==='__sido__id') {\r\n                      setItem.value = this.address.sido_id;\r\n                      setItem.label = this.address.sido;\r\n                    } else if(setItem.operator ==='__sigungu__id') {\r\n                      setItem.value = this.address.sigungu_id;\r\n                      setItem.label = this.address.sigungu;\r\n                    }\r\n                  })\r\n                  this.$emit('update:filterOptions', this.filterOptions)\r\n\r\n                  this.$emit('selectedLabel',0,addressLabel)\r\n                  this.$emit('selectFilter')\r\n                }\r\n  \r\n                // API 키가 없을 경우 예외처리, (사용하지 않을 경우) 서비스명으로 처리하도록 인자값 false 전달\r\n                // if (res.data.address === false) this.setFullAddress(false);\r\n                // else this.setFullAddress(true);\r\n  \r\n                // 위치 업데이트 emit\r\n                // this.$emit('updatePosition');\r\n  \r\n                // this.setFullAddress();\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              this.toast('현위치 설정에 실패하였습니다')\r\n            })\r\n        }, 500)\r\n      }\r\n      //this.$emit('selectedLabel',0,this.address)\r\n      //this.$emit('selectFilter')\r\n      this.selectedSido = {};\r\n      this.selectedSigungu = {};\r\n      this.$emit('closeModal');\r\n      /* 좌표 세팅 로직 끝 */\r\n    },\r\n    // 현재 위치로 설정\r\n    clickCurrent() {\r\n      this.getAddress();\r\n    },\r\n    // 마우스 오버, 클릭 style 때문에 methods로 처리\r\n    itemStyle(item, type, idx) {\r\n      let deco = {\r\n        color: this.brandColor.main.color,\r\n        borderBottom: this.brandBorder.main.border\r\n        // marginBottom: this.layout_gutter+'px'\r\n      };\r\n\r\n      // 시도 아이템: 마우스오버 or 클릭 시 배경색상\r\n      if ( type === 'sido' && item !== undefined ) {\r\n        deco.background = this.brandBgColor.sub.backgroundColor;\r\n        if ( item.id === this.hoverSido.id || item.id === this.selectedSido.id ) {\r\n          deco.background = this.brandBgColor.primary.backgroundColor;\r\n          deco.color = '#fff';\r\n          if (idx === this.sido.length-1) deco.border = 'none';\r\n        }\r\n      }\r\n\r\n      // 시군구 아이템: 마우스오버 or 클릭 시 배경색상\r\n      if ( type === 'sigungu' && item !== undefined ) {\r\n        deco.background = this.brandBgColor.white.backgroundColor;\r\n        if ( item.id === this.hoverSigungu.id || item.id === this.selectedSigungu.id ) {\r\n          deco.background = this.brandBgColor.primary.backgroundColor;\r\n          deco.color = '#fff';\r\n          deco.justifyContent = 'space-between';\r\n          if (idx === this.sigungu.length-1) deco.border = 'none';\r\n        }\r\n      }\r\n\r\n      return deco;\r\n    },\r\n    clickSido(item) {\r\n        // 시군구 데이터 가져오기\r\n        if (item.id !== '') {\r\n          this.$axios.get(`public/address/${this.type}/sido/${item.id}/sigungu`)\r\n          .then(res => {\r\n            if ( res.status === 200 ) {\r\n              this.sigungu = res.data;\r\n              this.selectedSido = item;\r\n              this.selectedSigungu = {};\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n        } else {\r\n          this.sigungu = [\r\n            {\r\n              id: '',\r\n              label: '전체',\r\n              name: '전체',\r\n              sido_id: '',\r\n              value: '',\r\n            }\r\n          ];\r\n          this.selectedSido = item;\r\n          this.selectedSigungu = {};\r\n        }\r\n      },\r\n    clickSigungu(item) {\r\n        this.selectedSigungu = item;\r\n        this.$emit('selectedRegion', {\r\n          sido: this.selectedSido,\r\n          sigungu: this.selectedSigungu\r\n        });\r\n      },\r\n    selectRegion() {\r\n        let address = `${this.selectedSido.name} ${this.selectedSigungu.name}`;\r\n        if (this.selectedSido.name==='세종특별자치시') address = this.selectedSido.name;\r\n        if (this.selectedSido.name === '전체') address = this.selectedSido.name;\r\n        let url = `/public/service/local?search_text=${address}`;\r\n\r\n        if (this.isIE) {\r\n          url = encodeURI(`/public/service/local?search_text=${address}`);\r\n        }\r\n\r\n        this.$axios.get(url)\r\n        .then(res => {\r\n          if (res.status===200) {\r\n            let location = res.data.local_list[0];\r\n            if (location && Object.keys(location).length !== 0) {\r\n              this.$store.commit('setCurrentPosition', {\r\n                lng: location.x,\r\n                lat: location.y\r\n              })\r\n            }\r\n            this.filterOptions.set.forEach(setItem => {\r\n              if (setItem.operator ==='__sido__id') {\r\n                setItem.value = this.selectedSido.id;\r\n                setItem.label = this.selectedSido.label;\r\n              } else if(setItem.operator ==='__sigungu__id') {\r\n                setItem.value = this.selectedSigungu.id;\r\n                setItem.label = this.selectedSigungu.label;\r\n              }\r\n            })\r\n            this.$emit('update:filterOptions', this.filterOptions)\r\n            this.$emit('selectedLabel',0,address)\r\n            this.$emit('selectFilter')\r\n            this.$emit('closeModal');\r\n          }\r\n        })       \r\n      },\r\n    selectMap(val) {\r\n        this.$store.commit('setCurrentPosition', {\r\n          lng: val.x,\r\n          lat: val.y\r\n        })\r\n        this.$emit('changePosition', {\r\n          lng: val.x,\r\n          lat: val.y\r\n        })\r\n        this.showMap = false;\r\n        this.selectedSido = {};\r\n        this.selectedSigungu = {};\r\n      },\r\n    overSido(item) {\r\n        this.hoverSido = item;\r\n      },\r\n    leaveSido() {\r\n        this.hoverSido = {};\r\n      },\r\n    overSigungu(item) {\r\n        this.hoverSigungu = item;\r\n      },\r\n    leaveSigungu() {\r\n        this.hoverSigungu = {};\r\n      }\r\n  },\r\n  computed: {\r\n    colLeft() {\r\n      return {\r\n        width: '38%',\r\n        marginRight: `${this.layout_gutter/2}px`\r\n      }\r\n    },\r\n    colRight() {\r\n      return {\r\n        width: '62%',\r\n        marginLeft: `${this.layout_gutter/2}px`\r\n      }\r\n    },\r\n    scrollLeftStyle() {\r\n      let scrollbar = this.getScrollbarWidth();\r\n      return {\r\n        width: `calc(38% + ${scrollbar}px)`,\r\n        height: `calc(100vh - ${this.scrollHeight}px)`,\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden'\r\n      }\r\n    },\r\n    scrollRightStyle() {\r\n      let scrollbar = this.getScrollbarWidth();\r\n      return {\r\n        width: `calc(62% + ${scrollbar}px)`,\r\n        height: `calc(100vh - ${this.scrollHeight}px)`,\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden'\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    \r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" type=\"stylus\" scoped>\r\n  .sido-item, .sigungu-item\r\n    padding: 12px 8px\r\n    height: 40px\r\n</style>\r\n\r\n"],"sourceRoot":"src/components/Components/Block"}]}