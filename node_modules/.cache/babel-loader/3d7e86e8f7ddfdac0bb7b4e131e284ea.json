{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockSignin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockSignin.vue","mtime":1605260001000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from \"@/components/Mixins/FormMixin\";\nimport AuthMixin from \"@/components/Mixins/AuthMixin\";\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\";\nexport default {\n  name: 'BlockSignin',\n  components: {},\n  mixins: [FormMixin, AuthMixin, FormCustomMixin],\n  props: {},\n  data: function data() {\n    return {\n      \"formData\": []\n    };\n  },\n  created: function created() {\n    this.getForm();\n  },\n  methods: {\n    getForm: function getForm() {\n      var data = [{\n        name: '아이디',\n        field: 'username',\n        label: '',\n        placeholder: '아이디',\n        format: 'CInput_email',\n        validate: {\n          required: true,\n          // 값 필수 여부\n          valid_required: true,\n          // validation 필수 여부\n          min_length: 4,\n          // 최소 문자 수\n          max_length: 30,\n          // 최대 문자 수\n          alpha_s: true,\n          // 알파벳 소문자\n          alpha_g: true,\n          // 알파벳 대문자\n          num: true,\n          // 숫자\n          special: true // 특수문자\n\n        },\n        value: ''\n      }, {\n        name: '비밀번호',\n        field: 'password',\n        label: '',\n        placeholder: '비밀번호',\n        format: 'CInput_password',\n        validate: {\n          required: true,\n          // 값 필수 여부\n          valid_required: true // validation 필수 여부\n\n        },\n        value: ''\n      }];\n      this.formData = this.setForm(data);\n    },\n    login: function login() {\n      var _this = this;\n\n      var result = this.getParamData(this.formData);\n\n      if (result.enable) {\n        this.$axios.post(\"auth/user/login\", result.params).then(function (res) {\n          if (res.status === 200) {\n            _this.toast('로그인 되었습니다.');\n\n            _this.setUserData(res.data);\n\n            _this.setAuthHeader();\n\n            var path = _this.$store.getters.previousPath;\n\n            if (!path) {\n              path = _this.$store.getters.brand.startpage;\n            }\n\n            _this.$router.replace(path);\n          }\n        }).catch(function (err) {\n          if (!err.response.data.message) _this.toast(err.response.data.detail);else _this.toast(err.response.data.message);\n        });\n      }\n    }\n  },\n  computed: {},\n  watch: {}\n};",{"version":3,"sources":["BlockSignin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n\n  <!--로그인 폼 요소-->\n  <component :is=\"form.elType\" v-for=\"(form,idx) in formData\" :key=\"'form-'+idx\"\n             v-bind=\"form\" :value.sync=\"form.value\" @onEnter=\"login\"\n             :formType=\"formTypeCustom\"\n             :containerCustomStyle=\"{marginTop: '8px'}\"\n             :inputCustomStyle=\"inputCustom\"></component>\n\n  <!--로그인 버튼-->\n  <div :style=\"buttonCustom\" style=\"margin-top:16px\" @click=\"login\">로그인</div>\n\n  <!--회원가입/비밀번호찾기-->\n  <div class=\"flex-center size-14\" style=\"margin-top:32px\" :style=\"brandColor.primary\">\n    <div class=\"weight-500 unselect\" @click=\"routerPush('signup')\" style=\"padding:4px 16px\">회원가입</div>\n    <div class=\"weight-500 unselect\" style=\"padding:4px 16px\" @click=\"routerModal('PasswordEmail')\">비밀번호 찾기</div>\n  </div>\n  \n  <!-- 소셜 로그인 폼 -->\n  <c-sns-signin style=\"margin-top: 48px;\"></c-sns-signin>\n    \n\n</div>\n</template>\n<script>\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport AuthMixin from \"@/components/Mixins/AuthMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockSignin',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    AuthMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": []\n    }\n  },\n  created() {\n      this.getForm();\n    },\n  \n  methods: {\n    getForm() {\n        let data = [\n          {\n            name: '아이디',\n            field: 'username',\n            label: '',\n            placeholder: '아이디',\n            format: 'CInput_email',\n            validate: {\n              required: true,          // 값 필수 여부\n              valid_required: true,     // validation 필수 여부\n              min_length: 4,            // 최소 문자 수\n              max_length: 30,           // 최대 문자 수\n              alpha_s: true,            // 알파벳 소문자\n              alpha_g: true,            // 알파벳 대문자\n              num: true,                // 숫자\n              special: true             // 특수문자\n            },\n            value: '',\n          },\n          {\n            name: '비밀번호',\n            field: 'password',\n            label: '',\n            placeholder: '비밀번호',\n            format: 'CInput_password',\n            validate: {\n              required: true,           // 값 필수 여부\n              valid_required: true,     // validation 필수 여부\n            },\n            value: '',\n          }\n        ];\n        this.formData = this.setForm(data);\n      },\n    login() {\n        let result = this.getParamData(this.formData);\n\n        if(result.enable) {\n          this.$axios.post(`auth/user/login`, result.params)\n          .then(res=>{\n            if(res.status===200) {\n              this.toast('로그인 되었습니다.');\n              this.setUserData(res.data);\n              this.setAuthHeader();\n              let path = this.$store.getters.previousPath;\n              if(!path) {\n                path = this.$store.getters.brand.startpage;\n              }\n              this.$router.replace(path);\n\n            }\n          })\n          .catch(err=> {\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      }\n  },\n  computed: {\n    \n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"],"sourceRoot":"src/components/Components/Block"}]}