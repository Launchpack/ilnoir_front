{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Button/IconBtnLike.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Button/IconBtnLike.vue","mtime":1605259982000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"IconBtnLike\",\n  props: {\n    id: {\n      type: Number,\n      required: false\n    },\n    likeType: {\n      type: String,\n      required: true\n    },\n    size: {\n      type: Number,\n      default: 24\n    },\n    color: {\n      type: String,\n      default: 'sub'\n    },\n    activeColor: {\n      type: String,\n      default: 'brand'\n    },\n    count: {\n      // 숫자표시\n      type: Number,\n      required: false\n    },\n    countCustomStyle: {\n      type: Object,\n      required: false\n    },\n    menuTitle: {\n      type: String,\n      default: '마이페이지 > 즐겨찾기'\n    },\n    hover: {\n      type: Boolean,\n      required: false,\n      default: function _default() {\n        return false;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      icon: 'favorite_border',\n      isLike: false,\n      url: '',\n      computedCount: undefined\n    };\n  },\n  mounted: function mounted() {\n    this.setUrl();\n  },\n  watch: {\n    isLogin: function isLogin(n) {\n      if (n) {\n        this.setUrl();\n      }\n    }\n  },\n  computed: {\n    iconStyle: function iconStyle() {\n      var color = this.isLike ? this.activeColor : this.color;\n      var deco = {};\n      deco.fontSize = this.size.toString() + 'px';\n      deco.height = this.size.toString() + 'px';\n      deco.textAlign = 'center';\n\n      if (this.hover) {\n        deco.color = 'white';\n      } else {\n        deco.color = this.brandColor[color].color;\n      }\n\n      return deco;\n    },\n    countStyle: function countStyle() {\n      var deco = {};\n      deco.color = this.brandColor.main.color;\n      deco.fontSize = '11px';\n      deco.textAlign = 'center';\n      if (this.countCustomStyle) deco = this.countCustomStyle;\n      return deco;\n    }\n  },\n  methods: {\n    setUrl: function setUrl() {\n      var _this = this;\n\n      if (this.count !== undefined) this.computedCount = this.count;\n      if (!this.isLogin) return;\n      var id = this.$route.query.id;\n      if (this.id) id = this.id;\n      this.url = \"user/\".concat(this.$store.getters.user.user_id, \"/\").concat(this.likeType, \"/\").concat(id, \"/islike\");\n      this.$axios.get(this.url).then(function (res) {\n        _this.isLike = res.data.is_liked;\n      });\n    },\n    clickBtn: function clickBtn() {\n      var _this2 = this;\n\n      if (!this.isLogin) {\n        this.toast('찜하시려면 로그인이 필요합니다');\n        return;\n      }\n\n      var computedUrl = this.url.replace('islike', 'like');\n      this.$axios.post(computedUrl).then(function () {\n        _this2.isLike = !_this2.isLike;\n\n        _this2.$emit('liked', _this2.isLike);\n\n        if (_this2.isLike) {\n          if (_this2.likeType === 'product') _this2.toast('상품을 찜하였습니다.\\n' + _this2.menuTitle + '에서 \\n' + '확인하실 수 있습니다._icon_favorite');else if (_this2.likeType === 'partner') _this2.toast('파트너를 찜하였습니다.\\n' + _this2.menuTitle + '에서 \\n' + '확인하실 수 있습니다._icon_favorite');\n        } // 클릭 공통 emit\n\n\n        _this2.$emit('click'); // 카운트 숫자 있을 경우\n\n\n        if (!_this2.isLike) _this2.computedCount -= 1;else _this2.computedCount += 1;\n        if (_this2.computedCount < 0) _this2.computedCount = 0;\n      });\n    }\n  }\n};",{"version":3,"sources":["IconBtnLike.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"flex wrap\">\r\n    <i class=\"material-icons unselect full-width\"\r\n       :style=\"iconStyle\"\r\n       @click.stop.prevent=\"clickBtn\">{{ isLike ? 'favorite' : 'favorite_border' }}</i>\r\n    <div v-if=\"count!==undefined&&computedCount!==undefined\"\r\n         class=\"full-width\" :style=\"countStyle\">{{ computedCount }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"IconBtnLike\",\r\n\r\n    props: {\r\n      id: {\r\n        type: Number,\r\n        required: false\r\n      },\r\n      likeType: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      size: {\r\n        type: Number,\r\n        default: 24\r\n      },\r\n      color: {\r\n        type: String,\r\n        default: 'sub'\r\n      },\r\n      activeColor: {\r\n        type: String,\r\n        default: 'brand'\r\n      },\r\n      count: {          // 숫자표시\r\n        type: Number,\r\n        required: false\r\n      },\r\n      countCustomStyle: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      menuTitle: {\r\n        type: String,\r\n        default: '마이페이지 > 즐겨찾기'\r\n      },\r\n      hover: {\r\n        type: Boolean,\r\n        required: false,\r\n        default: function() {\r\n          return false;\r\n        }\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        icon: 'favorite_border',\r\n        isLike: false,\r\n        url: '',\r\n        computedCount: undefined\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.setUrl();\r\n    },\r\n\r\n    watch: {\r\n      isLogin(n) {\r\n        if (n) {\r\n          this.setUrl();\r\n        }\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      iconStyle() {\r\n        let color = this.isLike ? this.activeColor : this.color;\r\n        let deco = {};\r\n        deco.fontSize = (this.size).toString()+'px';\r\n        deco.height = (this.size).toString()+'px';\r\n        deco.textAlign = 'center';\r\n\r\n        if(this.hover) {\r\n          deco.color = 'white'\r\n        }\r\n        else {\r\n          deco.color = this.brandColor[color].color;\r\n        }\r\n\r\n        return deco;\r\n      },\r\n\r\n      countStyle() {\r\n        let deco = {};\r\n\r\n        deco.color = this.brandColor.main.color;\r\n        deco.fontSize = '11px';\r\n        deco.textAlign = 'center';\r\n\r\n        if (this.countCustomStyle) deco = this.countCustomStyle;\r\n\r\n        return deco;\r\n      },\r\n\r\n    },\r\n\r\n    methods: {\r\n      setUrl() {\r\n        if (this.count !== undefined) this.computedCount = this.count;\r\n\r\n        if(!this.isLogin) return;\r\n\r\n        let id = this.$route.query.id;\r\n        if (this.id) id = this.id;\r\n        this.url = `user/${this.$store.getters.user.user_id}/${this.likeType}/${id}/islike`;\r\n\r\n        this.$axios.get(this.url).then(res => {\r\n          this.isLike = res.data.is_liked;\r\n        });\r\n      },\r\n      clickBtn() {\r\n        if(!this.isLogin) {\r\n          this.toast('찜하시려면 로그인이 필요합니다')\r\n          return;\r\n        }\r\n\r\n        let computedUrl = this.url.replace('islike','like');\r\n\r\n        this.$axios.post(computedUrl)\r\n          .then(() => {\r\n            this.isLike = !this.isLike;\r\n            this.$emit('liked', this.isLike);\r\n\r\n            if (this.isLike) {\r\n              if (this.likeType === 'product')\r\n                this.toast('상품을 찜하였습니다.\\n' +\r\n                  this.menuTitle + '에서 \\n' +\r\n                  '확인하실 수 있습니다._icon_favorite');\r\n              else if (this.likeType === 'partner')\r\n                this.toast('파트너를 찜하였습니다.\\n' +\r\n                  this.menuTitle + '에서 \\n' +\r\n                  '확인하실 수 있습니다._icon_favorite');\r\n            }\r\n\r\n            // 클릭 공통 emit\r\n            this.$emit('click');\r\n\r\n            // 카운트 숫자 있을 경우\r\n            if (!this.isLike) this.computedCount -= 1;\r\n            else this.computedCount += 1;\r\n\r\n            if (this.computedCount<0) this.computedCount = 0;\r\n          });\r\n      }\r\n    }\r\n\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/Components/Button"}]}