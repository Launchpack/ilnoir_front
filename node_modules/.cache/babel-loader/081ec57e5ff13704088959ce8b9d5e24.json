{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockContactReg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockContactReg.vue","mtime":1605260024000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormMixin from \"@/components/Mixins/FormMixin\";\nimport BlockMixin from \"@/components/Mixins/BlockMixin\";\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\";\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\";\nexport default {\n  name: 'BlockContactReg',\n  components: {},\n  mixins: [FormMixin, BlockMixin, HeaderMixin, FormCustomMixin],\n  props: {},\n  data: function data() {\n    return {\n      \"formData\": [{\n        \"name\": \"첨부파일\",\n        \"field\": \"file\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CFileUploader\",\n        \"validate\": {\n          \"required\": false,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"\"\n      }, {\n        \"name\": \"이름\",\n        \"field\": \"name\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_text\",\n        \"validate\": {\n          \"required\": true,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"이름\"\n      }, {\n        \"name\": \"연락처\",\n        \"field\": \"name\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_text\",\n        \"validate\": {\n          \"required\": true,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"연락처\"\n      }, {\n        \"name\": \"이메일\",\n        \"field\": \"name\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_text\",\n        \"validate\": {\n          \"required\": true,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"이메일\"\n      }, {\n        \"name\": \"문의 유형\",\n        \"field\": \"title\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CDropdown\",\n        \"options\": [{\n          \"label\": \"문의 유형 1\",\n          \"value\": \"type1\"\n        }, {\n          \"label\": \"문의 유형 2\",\n          \"value\": \"type2\"\n        }, {\n          \"label\": \"문의 유형 3\",\n          \"value\": \"type3\"\n        }],\n        \"validate\": {\n          \"required\": false,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"문의 유형 선택\"\n      }, {\n        \"name\": \"문의 제목\",\n        \"field\": \"title\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_text\",\n        \"validate\": {\n          \"required\": true,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"문의제목을 입력해주세요\"\n      }, {\n        \"name\": \"문의 내용\",\n        \"field\": \"content\",\n        \"label\": \"\",\n        \"value\": \"\",\n        \"format\": \"CInput_textarea\",\n        \"validate\": {\n          \"required\": true,\n          \"valid_required\": false\n        },\n        \"placeholder\": \"문의내용을 입력해주세요\"\n      }, {\n        \"name\": \"이용약관 및 개인정보처리방침 동의\",\n        \"items\": [{\n          \"link\": \"termsofservice_overlay\",\n          \"text\": \"이용약관\",\n          \"styles\": {\n            \"container\": {\n              \"fontWeight\": \"bold\"\n            }\n          },\n          \"linkType\": \"overlay\"\n        }, {\n          \"text\": \" 및 \",\n          \"styles\": {\n            \"container\": {\n              \"padding\": \"0 4px\"\n            }\n          }\n        }, {\n          \"link\": \"privacy_overlay\",\n          \"text\": \"개인정보처리방침\",\n          \"styles\": {\n            \"container\": {\n              \"fontWeight\": \"bold\"\n            }\n          },\n          \"linkType\": \"overlay\"\n        }, {\n          \"text\": \"에 동의하기\"\n        }],\n        \"label\": \"\",\n        \"value\": false,\n        \"format\": \"CgCheckboxArray\",\n        \"validate\": {\n          \"valid_required\": true\n        }\n      }]\n    };\n  },\n  created: function created() {\n    // this.formData = this.setForm(this.formData);\n    this.getForm();\n  },\n  methods: {\n    getForm: function getForm() {\n      var _this = this;\n\n      this.$axios.get('public/inquiry/personal/category').then(function (res) {\n        var categories = res.data;\n\n        _this.$axios.get('public/inquiry/personal/formdata').then(function (res2) {\n          var result = [];\n          res2.data.forEach(function (item) {\n            if (item.field === 'type_id') {\n              item.options = categories;\n            }\n\n            result.push(item);\n          });\n          _this.formData = _this.setForm(result);\n          var dropdown = find(_this.formData, 'format', 'CDropdown');\n\n          var dropStyle = _this.cloneItem(_this.inputCustom);\n\n          dropStyle.color = _this.brandColor.primary.color;\n          dropStyle.fontWeight = '500';\n          dropdown.dropdownCustom = dropStyle;\n          var name = find(_this.formData, 'field', 'name');\n          name.inputCustom = _this.inputCustom;\n          var phone = find(_this.formData, 'field', 'phone');\n          phone.inputCustom = _this.inputCustom;\n          var email = find(_this.formData, 'field', 'email');\n          email.inputCustom = _this.inputCustom;\n          var content = find(_this.formData, 'field', 'content');\n          content.inputCustom = _this.inputCustomTextarea;\n        });\n      });\n    },\n    register: function register() {\n      var _this2 = this;\n\n      var result = this.getParamData(this.formData);\n\n      if (result.enable) {\n        var user_id = this.$store.getters.user.user_id;\n        if (user_id) result.params.user_id = user_id;\n        this.$axios.post('public/inquiry/personal', result.params).then(function (res) {\n          if (res.status === 200) {\n            _this2.toast('문의글이 작성되었습니다.');\n\n            _this2.$router.replace('home');\n          }\n        }).catch(function (err) {\n          if (!err.response.data.message) _this2.toast(err.response.data.detail);else _this2.toast(err.response.data.message);\n        });\n      }\n    }\n  },\n  computed: {\n    titleStyle: function titleStyle() {\n      if (this.$store.getters.device === 'pc') {\n        return {\n          padding: '80px 0 40px',\n          borderBottom: this.brandBorder.main.border,\n          fontSize: '40px'\n        };\n      } else {\n        return {\n          padding: '40px 0 20px',\n          borderBottom: this.brandBorder.main.border,\n          fontSize: '20px'\n        };\n      }\n    },\n    btnColor: function btnColor() {\n      return {\n        backgroundColor: '#9b9b9b'\n      };\n    },\n    buttonCustomCancel: function buttonCustomCancel() {\n      var styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea: function inputCustomTextarea() {\n      var styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    },\n    dropListCustomStyle: function dropListCustomStyle() {\n      return {\n        top: '48px'\n      };\n    },\n    dropItemCustomStyle: function dropItemCustomStyle() {\n      return {\n        backgroundColor: '#fff'\n      };\n    },\n    iconCustomStyle: function iconCustomStyle() {\n      return {\n        fontSize: '22px',\n        position: 'absolute',\n        right: '16px',\n        color: this.brandColor.main.color\n      };\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["BlockContactReg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,SAAA,MAAA,+BAAA;AACA,OAAA,UAAA,MAAA,gCAAA;AACA,OAAA,WAAA,MAAA,iCAAA;AACA,OAAA,eAAA,MAAA,+CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAKA,EAAA,MAAA,EAAA,CACA,SADA,EAEA,UAFA,EAGA,WAHA,EAIA,eAJA,CALA;AAWA,EAAA,KAAA,EAAA,EAXA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,kBAAA,CACA;AACA,gBAAA,MADA;AAEA,iBAAA,MAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,eALA;AAMA,oBAAA;AACA,sBAAA,KADA;AAEA,4BAAA;AAFA,SANA;AAUA,uBAAA;AAVA,OADA,EAaA;AACA,gBAAA,IADA;AAEA,iBAAA,MAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,aALA;AAMA,oBAAA;AACA,sBAAA,IADA;AAEA,4BAAA;AAFA,SANA;AAUA,uBAAA;AAVA,OAbA,EAyBA;AACA,gBAAA,KADA;AAEA,iBAAA,MAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,aALA;AAMA,oBAAA;AACA,sBAAA,IADA;AAEA,4BAAA;AAFA,SANA;AAUA,uBAAA;AAVA,OAzBA,EAqCA;AACA,gBAAA,KADA;AAEA,iBAAA,MAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,aALA;AAMA,oBAAA;AACA,sBAAA,IADA;AAEA,4BAAA;AAFA,SANA;AAUA,uBAAA;AAVA,OArCA,EAiDA;AACA,gBAAA,OADA;AAEA,iBAAA,OAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,WALA;AAMA,mBAAA,CACA;AACA,mBAAA,SADA;AAEA,mBAAA;AAFA,SADA,EAKA;AACA,mBAAA,SADA;AAEA,mBAAA;AAFA,SALA,EASA;AACA,mBAAA,SADA;AAEA,mBAAA;AAFA,SATA,CANA;AAoBA,oBAAA;AACA,sBAAA,KADA;AAEA,4BAAA;AAFA,SApBA;AAwBA,uBAAA;AAxBA,OAjDA,EA2EA;AACA,gBAAA,OADA;AAEA,iBAAA,OAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,aALA;AAMA,oBAAA;AACA,sBAAA,IADA;AAEA,4BAAA;AAFA,SANA;AAUA,uBAAA;AAVA,OA3EA,EAuFA;AACA,gBAAA,OADA;AAEA,iBAAA,SAFA;AAGA,iBAAA,EAHA;AAIA,iBAAA,EAJA;AAKA,kBAAA,iBALA;AAMA,oBAAA;AACA,sBAAA,IADA;AAEA,4BAAA;AAFA,SANA;AAUA,uBAAA;AAVA,OAvFA,EAmGA;AACA,gBAAA,oBADA;AAEA,iBAAA,CACA;AACA,kBAAA,wBADA;AAEA,kBAAA,MAFA;AAGA,oBAAA;AACA,yBAAA;AACA,4BAAA;AADA;AADA,WAHA;AAQA,sBAAA;AARA,SADA,EAWA;AACA,kBAAA,KADA;AAEA,oBAAA;AACA,yBAAA;AACA,yBAAA;AADA;AADA;AAFA,SAXA,EAmBA;AACA,kBAAA,iBADA;AAEA,kBAAA,UAFA;AAGA,oBAAA;AACA,yBAAA;AACA,4BAAA;AADA;AADA,WAHA;AAQA,sBAAA;AARA,SAnBA,EA6BA;AACA,kBAAA;AADA,SA7BA,CAFA;AAmCA,iBAAA,EAnCA;AAoCA,iBAAA,KApCA;AAqCA,kBAAA,iBArCA;AAsCA,oBAAA;AACA,4BAAA;AADA;AAtCA,OAnGA;AADA,KAAA;AAgJA,GA/JA;AAgKA,EAAA,OAhKA,qBAgKA;AACA;AACA,SAAA,OAAA;AACA,GAnKA;AAqKA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,MAAA,CAAA,GAAA,CAAA,kCAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,YAAA,UAAA,GAAA,GAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,kCAAA,EACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,cAAA,MAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,gBAAA,IAAA,CAAA,KAAA,KAAA,SAAA,EAAA;AACA,cAAA,IAAA,CAAA,OAAA,GAAA,UAAA;AACA;;AAEA,YAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AAEA,WAPA;AAQA,UAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AAEA,cAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,CAAA;;AACA,cAAA,SAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,WAAA,CAAA;;AACA,UAAA,SAAA,CAAA,KAAA,GAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,KAAA;AACA,UAAA,SAAA,CAAA,UAAA,GAAA,KAAA;AACA,UAAA,QAAA,CAAA,cAAA,GAAA,SAAA;AAEA,cAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,OAAA,EAAA,MAAA,CAAA;AACA,UAAA,IAAA,CAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AAEA,cAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA,CAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AAEA,cAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA,CAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AAEA,cAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,OAAA,EAAA,SAAA,CAAA;AACA,UAAA,OAAA,CAAA,WAAA,GAAA,KAAA,CAAA,mBAAA;AAEA,SA/BA;AAgCA,OAnCA;AAoCA,KAtCA;AAuCA,IAAA,QAvCA,sBAuCA;AAAA;;AACA,UAAA,MAAA,GAAA,KAAA,YAAA,CAAA,KAAA,QAAA,CAAA;;AACA,UAAA,MAAA,CAAA,MAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,YAAA,OAAA,EACA,MAAA,CAAA,MAAA,CAAA,OAAA,GAAA,OAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,eAAA;;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AACA;AACA,SANA,EAOA,KAPA,CAOA,UAAA,GAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EACA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EADA,KAGA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,SAZA;AAaA;AACA;AA3DA,GArKA;AAkOA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,eAAA;AACA,UAAA,OAAA,EAAA,aADA;AAEA,UAAA,YAAA,EAAA,KAAA,WAAA,CAAA,IAAA,CAAA,MAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA,OANA,MAOA;AACA,eAAA;AACA,UAAA,OAAA,EAAA,aADA;AAEA,UAAA,YAAA,EAAA,KAAA,WAAA,CAAA,IAAA,CAAA,MAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA;AACA,KAhBA;AAiBA,IAAA,QAjBA,sBAiBA;AACA,aAAA;AACA,QAAA,eAAA,EAAA;AADA,OAAA;AAGA,KArBA;AAsBA,IAAA,kBAtBA,gCAsBA;AACA,UAAA,MAAA,GAAA,KAAA,SAAA,CAAA,KAAA,YAAA,CAAA;AACA,MAAA,MAAA,CAAA,eAAA,GAAA,KAAA,UAAA,CAAA,GAAA,CAAA,KAAA;AACA,aAAA,MAAA;AACA,KA1BA;AA2BA,IAAA,mBA3BA,iCA2BA;AACA,UAAA,MAAA,GAAA,KAAA,SAAA,CAAA,KAAA,WAAA,CAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,OAAA;AACA,aAAA,MAAA;AACA,KA/BA;AAgCA,IAAA,mBAhCA,iCAgCA;AACA,aAAA;AACA,QAAA,GAAA,EAAA;AADA,OAAA;AAGA,KApCA;AAqCA,IAAA,mBArCA,iCAqCA;AACA,aAAA;AACA,QAAA,eAAA,EAAA;AADA,OAAA;AAGA,KAzCA;AA0CA,IAAA,eA1CA,6BA0CA;AACA,aAAA;AACA,QAAA,QAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA,MAHA;AAIA,QAAA,KAAA,EAAA,KAAA,UAAA,CAAA,IAAA,CAAA;AAJA,OAAA;AAMA;AAjDA,GAlOA;AAqRA,EAAA,KAAA,EAAA;AArRA,CAAA","sourcesContent":["<template>\n<div class=\"full-width\" :style=\"[brandBgColor.main]\">\n  <div class=\"text-center bold\" :style=\"[titleStyle, brandColor.brand]\">수업 문의</div>\n\n    <div>\n      <component \n          v-for=\"form in formData\"\n          :key=\"form.name\"\n          :is=\"form.elType\" \n          v-bind=\"form\"\n          :value.sync=\"form.value\"\n          :options=\"form.options\"\n          :formType=\"formTypeCustomLabel\"\n          :containerCustomStyle=\"form.containerCustom\"\n          :labelCustomStyle=\"labelCustom\"\n          :dropdownCustomStyle=\"form.dropdownCustom\"\n          :dropListCustomStyle=\"dropListCustomStyle\"\n          :dropItemCustomStyle=\"inputCustom\"\n          :inputCustomStyle=\"form.inputCustom\"\n          :buttonCustomStyle=\"buttonCustom\"\n          :iconCustomStyle=\"iconCustomStyle\"\n        ></component>\n    </div>\n    <div v-if=\"$store.getters.device === 'mobile'\">\n      <div :style=\"buttonCustom\" style=\"margin: 48px 0 0;\" @click=\"register\">제출하기</div>         \n      <!--<div :style=\"buttonCustomCancel\" style=\"margin: 12px 0 20px;\" @click=\"clickBack\">취소</div>      -->\n    </div>\n    <div v-else class=\"flex-justify\" style=\"margin-top:48px\">\n      <!--<div :style=\"buttonCustomCancel\" style=\"margin-right:16px;\" class=\"pc-style\" @click=\"clickBack\">취소</div>-->\n      <div :style=\"buttonCustom\" class=\"pc-style size-20 bold\" @click=\"register\">제출하기</div>         \n    </div>\n    \n\n    <!--<div>-->\n    <!--  <btn :color=\"brandColor.white\"-->\n    <!--    :backgroundColor=\"brandBgColor.brand\"-->\n    <!--    @clicked=\"register\"-->\n    <!--    style=\"margin: 48px 0 12px;\">제출하기</btn>  -->\n    <!--</div>-->\n    <!--<div>-->\n    <!--    <btn :backgroundColor=\"btnColor\" :color=\"brandColor.white\"-->\n    <!--      @clicked=\"clickBack\">취소</btn>-->\n    <!--  </div>-->\n  </div>\n</template>\n<script>\nimport FormMixin from \"@/components/Mixins/FormMixin\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\nimport HeaderMixin from \"@/components/Mixins/HeaderMixin\"\nimport FormCustomMixin from \"@/components/Components/Mixin/FormCustomMixin\"\n\nexport default {\n  name: 'BlockContactReg',\n  components: {\n\n  },\n  mixins: [\n    FormMixin,\n    BlockMixin,\n    HeaderMixin,\n    FormCustomMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"formData\": [\n        {\n          \"name\": \"첨부파일\",\n          \"field\": \"file\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CFileUploader\",\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"\"\n        },\n        {\n          \"name\": \"이름\",\n          \"field\": \"name\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"이름\"\n        },\n        {\n          \"name\": \"연락처\",\n          \"field\": \"name\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"연락처\"\n        },\n        {\n          \"name\": \"이메일\",\n          \"field\": \"name\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"이메일\"\n        },\n        {\n          \"name\": \"문의 유형\",\n          \"field\": \"title\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CDropdown\",\n          \"options\": [\n            {\n              \"label\": \"문의 유형 1\",\n              \"value\": \"type1\"\n            },\n            {\n              \"label\": \"문의 유형 2\",\n              \"value\": \"type2\"\n            },\n            {\n              \"label\": \"문의 유형 3\",\n              \"value\": \"type3\"\n            }\n          ],\n          \"validate\": {\n            \"required\": false,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"문의 유형 선택\"\n        },\n        {\n          \"name\": \"문의 제목\",\n          \"field\": \"title\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_text\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"문의제목을 입력해주세요\"\n        },\n        {\n          \"name\": \"문의 내용\",\n          \"field\": \"content\",\n          \"label\": \"\",\n          \"value\": \"\",\n          \"format\": \"CInput_textarea\",\n          \"validate\": {\n            \"required\": true,\n            \"valid_required\": false\n          },\n          \"placeholder\": \"문의내용을 입력해주세요\"\n        },\n        {\n          \"name\": \"이용약관 및 개인정보처리방침 동의\",\n          \"items\": [\n            {\n              \"link\": \"termsofservice_overlay\",\n              \"text\": \"이용약관\",\n              \"styles\": {\n                \"container\": {\n                  \"fontWeight\": \"bold\"\n                }\n              },\n              \"linkType\": \"overlay\"\n            },\n            {\n              \"text\": \" 및 \",\n              \"styles\": {\n                \"container\": {\n                  \"padding\": \"0 4px\"\n                }\n              }\n            },\n            {\n              \"link\": \"privacy_overlay\",\n              \"text\": \"개인정보처리방침\",\n              \"styles\": {\n                \"container\": {\n                  \"fontWeight\": \"bold\"\n                }\n              },\n              \"linkType\": \"overlay\"\n            },\n            {\n              \"text\": \"에 동의하기\"\n            }\n          ],\n          \"label\": \"\",\n          \"value\": false,\n          \"format\": \"CgCheckboxArray\",\n          \"validate\": {\n            \"valid_required\": true\n          }\n        }\n      ]\n    }\n  },\n  created() {\n      // this.formData = this.setForm(this.formData);\n      this.getForm();\n    },\n  \n  methods: {\n    getForm() {\n        this.$axios.get('public/inquiry/personal/category')\n        .then(res => {\n          let categories = res.data;\n          this.$axios.get('public/inquiry/personal/formdata')\n          .then(res2 => {\n            let result = [];\n            res2.data.forEach(item => {\n              if (item.field==='type_id') {\n                item.options = categories;\n              }\n\n              result.push(item);\n              \n            })\n            this.formData = this.setForm(result);\n\n            let dropdown = find(this.formData, 'format', 'CDropdown');\n            let dropStyle = this.cloneItem(this.inputCustom);\n            dropStyle.color = this.brandColor.primary.color;\n            dropStyle.fontWeight = '500';\n            dropdown.dropdownCustom = dropStyle;\n            \n            let name = find(this.formData, 'field', 'name');\n            name.inputCustom = this.inputCustom;\n            \n            let phone = find(this.formData, 'field', 'phone');\n            phone.inputCustom = this.inputCustom;\n            \n            let email = find(this.formData, 'field', 'email');\n            email.inputCustom = this.inputCustom;\n            \n            let content = find(this.formData, 'field', 'content');\n            content.inputCustom = this.inputCustomTextarea;\n            \n          })\n        })\n      },\n    register() {\n        let result = this.getParamData(this.formData);\n        if (result.enable) {\n          let user_id = this.$store.getters.user.user_id;\n          if (user_id)\n            result.params.user_id = user_id;\n          this.$axios.post('public/inquiry/personal', result.params)\n          .then(res => {\n            if (res.status === 200) {\n              this.toast('문의글이 작성되었습니다.');\n              this.$router.replace('home');\n            }\n          })\n          .catch(err => {\n            if(!err.response.data.message)\n              this.toast(err.response.data.detail);\n            else\n              this.toast(err.response.data.message);\n          })\n        }\n      }\n  },\n  computed: {\n    titleStyle() {\n      if(this.$store.getters.device==='pc') {\n        return {\n          padding: '80px 0 40px',\n          borderBottom: this.brandBorder.main.border,\n          fontSize: '40px'\n        } \n      }\n      else {\n        return {\n          padding: '40px 0 20px',\n          borderBottom: this.brandBorder.main.border,\n          fontSize: '20px'\n        }\n      }\n    },\n    btnColor() {\n      return {\n        backgroundColor: '#9b9b9b'\n      }\n    },\n    buttonCustomCancel() {\n      let styles = this.cloneItem(this.buttonCustom);\n      styles.backgroundColor = this.brandColor.sub.color;\n      return styles;\n    },\n    inputCustomTextarea() {\n      let styles = this.cloneItem(this.inputCustom);\n      styles.height = '160px';\n      return styles;\n    },\n    dropListCustomStyle() {\n      return {\n        top: '48px'\n      }\n    },\n    dropItemCustomStyle() {\n      return {\n        backgroundColor: '#fff'\n      }\n    },\n    iconCustomStyle() {\n      return {\n        fontSize: '22px',\n        position: 'absolute',\n        right: '16px',\n        color: this.brandColor.main.color\n      }\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n<style scoped>\n.pc-style {\n  width: 192px !important;\n}\n</style>\n\n"],"sourceRoot":"src/components/Components/Block"}]}