{"remainingRequest":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js!/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mard/dev/grit12/src/components/Components/Block/BlockEventPc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mard/dev/grit12/src/components/Components/Block/BlockEventPc.vue","mtime":1605260021000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mard/dev/grit12/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mard/dev/grit12/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CardEventPc from \"@/components/Components/Card/CardEventPc\";\nimport BreadCrumbPc from \"@/components/Components/Common/BreadCrumbPc\";\nimport BlockMixin from \"@/components/Mixins/BlockMixin\";\nexport default {\n  name: 'BlockEventPc',\n  components: {\n    CardEventPc: CardEventPc,\n    BreadCrumbPc: BreadCrumbPc\n  },\n  mixins: [BlockMixin],\n  props: {},\n  data: function data() {\n    return {\n      \"menu\": [{\n        \"id\": 0,\n        \"name\": \"진행중인 이벤트\"\n      }, {\n        \"id\": 1,\n        \"name\": \"종료된 이벤트\"\n      }],\n      \"event\": undefined,\n      \"breadcrumb\": [{\n        \"link\": \"home\",\n        \"name\": \"홈\"\n      }, {\n        \"name\": \"이벤트\"\n      }]\n    };\n  },\n  created: function created() {\n    this.getData();\n  },\n  mounted: function mounted() {},\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      var url = 'public/board/event?page_num=1&page_length=10';\n      this.$axios.get(url).then(function (res) {\n        _this.event = res.data.data;\n      });\n    },\n    cardStyle: function cardStyle(idx) {\n      var obj = {};\n      var gutters = 16;\n      obj.paddingLeft = \"\".concat(gutters / 2, \"px\");\n      obj.paddingRight = \"\".concat(gutters / 2, \"px\");\n      obj.paddingBottom = \"\".concat(gutters, \"px\");\n      if (idx % 2 === 0) obj.paddingLeft = 0;else if (idx % 2 === 1) obj.paddingRight = 0;\n      return obj;\n    }\n  },\n  computed: {\n    selectedTabStyle: function selectedTabStyle() {\n      return {\n        color: \"\".concat(this.getColor('Primary Color')),\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: 'white',\n        padding: '14px 16px',\n        fontWeight: '500'\n      };\n    },\n    unselectedTabStyle: function unselectedTabStyle() {\n      return {\n        color: \"\".concat(this.getColor('기본 내용 색상')),\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        padding: '14px 16px',\n        fontWeight: '500'\n      };\n    },\n    onList: function onList() {\n      var _this2 = this;\n\n      var result = [];\n\n      if (this.event) {\n        this.event.forEach(function (item) {\n          if (_this2.moment().isBefore(item.end_date) || _this2.moment().isSame(item.end_date, 'day')) {\n            result.push(item);\n          }\n        });\n      }\n\n      return result;\n    },\n    endList: function endList() {\n      var _this3 = this;\n\n      var result = [];\n\n      if (this.event) {\n        this.event.forEach(function (item) {\n          if (_this3.moment().isAfter(item.end_date, 'day')) {\n            result.push(item);\n          }\n        });\n      }\n\n      return result;\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["BlockEventPc.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"flex-justify\">\n    <div style=\"padding:32px 0 100px\" :style=\"pcMaxWidth\" v-if=\"event\"\n  class=\"position-relative\">\n  <!--<div class=\"position-absolute\" style=\"top:0\">-->\n  <!--  <bread-crumb-pc :breadcrumb=\"breadcrumb\"></bread-crumb-pc>-->\n  <!--</div>-->\n  <tab :menu=\"menu\" tabPosition=\"flex-end\" :selectedTabStyle=\"selectedTabStyle\"\n    :unselectedTabStyle=\"unselectedTabStyle\" :dividerStyle=\"{}\" :wrapRadius=\"true\">\n    <div slot=\"0\" style=\"margin-top:32px\">\n      <div class=\"size-20 weight-500 margin-bottom-6\" :style=\"brandColor.main\">진행중인 이벤트</div>\n      <div class=\"size-14 margin-bottom-16\" :style=\"brandColor.sub\">{{ moment().locale('ko').format('LL') }}</div>\n      <list-vertical v-if=\"$route.query.tab===0\">\n        <transition-group name=\"fade\" slot=\"card\" class=\"grid-box\" tag=\"div\">\n        <div \n          v-for=\"(item,idx) in onList\" class=\"col-6\"\n          :key=\"`card-prod-${item.id}-${idx}`\"\n          :style=\"cardStyle(idx)\">\n          <card-event-pc :card=\"item\"\n                      ></card-event-pc>\n        </div>\n        </transition-group>\n      </list-vertical>\n      <div v-if=\"onList&&onList.length===0\" class=\"empty-view\" :style=\"brandColor.sub\"\n          style=\"font-family: 'Arita Dotum Medium';font-size:16px\">진행중인 이벤트가 없습니다.</div>\n    </div>\n    \n    <div slot=\"1\" style=\"margin-top:32px\">\n     <div class=\"size-20 weight-500 margin-bottom-16\" :style=\"brandColor.main\">종료된 이벤트</div>\n      <list-vertical v-if=\"$route.query.tab===1\">\n        <transition-group name=\"fade\" slot=\"card\" class=\"grid-box\" tag=\"div\">\n        <div \n          v-for=\"(item,idx) in endList\" class=\"col-6\"\n          :key=\"`card-prod-${item.id}-${idx}`\"\n          :style=\"cardStyle(idx)\">\n          <card-event-pc :card=\"item\"\n                      ></card-event-pc>\n        </div>\n        </transition-group>\n      </list-vertical>\n      <div v-if=\"endList&&endList.length===0\" class=\"empty-view\" :style=\"brandColor.sub\"\n          style=\"font-family: 'Arita Dotum Medium';font-size:16px\">종료된 이벤트가 없습니다.</div>\n    </div>\n  </tab>\n</div>\n  </div>\n</template>\n<script>\nimport CardEventPc from \"@/components/Components/Card/CardEventPc\"\nimport BreadCrumbPc from \"@/components/Components/Common/BreadCrumbPc\"\nimport BlockMixin from \"@/components/Mixins/BlockMixin\"\n\nexport default {\n  name: 'BlockEventPc',\n  components: {\n    CardEventPc,\n    BreadCrumbPc\n  },\n  mixins: [\n    BlockMixin\n  ],\n  props: {\n\n  },\n  data() {\n    return {\n      \"menu\": [\n        {\n          \"id\": 0,\n          \"name\": \"진행중인 이벤트\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"종료된 이벤트\"\n        }\n      ],\n      \"event\": undefined,\n      \"breadcrumb\": [\n        {\n          \"link\": \"home\",\n          \"name\": \"홈\"\n        },\n        {\n          \"name\": \"이벤트\"\n        }\n      ]\n    }\n  },\n  created() {\n    this.getData();\n  },\n  mounted() {\n\n  },\n  \n  methods: {\n    getData() {\n      let url = 'public/board/event?page_num=1&page_length=10'\n      this.$axios.get(url)\n      .then(res => {\n        this.event = res.data.data;\n      })\n    },\n    cardStyle(idx) {\n      let obj = {}\n      \n      let gutters = 16;\n      obj.paddingLeft = `${gutters/2}px`;\n      obj.paddingRight = `${gutters/2}px`;\n      obj.paddingBottom = `${gutters}px`;\n      \n      if(idx%2===0) obj.paddingLeft = 0;\n      else if(idx%2===1) obj.paddingRight = 0;\n      \n      return obj;\n    }\n  },\n  computed: {\n    selectedTabStyle() {\n      return {\n        color: `${this.getColor('Primary Color')}`,\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: 'white',\n        padding: '14px 16px',\n        fontWeight: '500'\n      }\n    },\n    unselectedTabStyle() {\n      return {\n        color: `${this.getColor('기본 내용 색상')}`,\n        textAlign: 'center',\n        fontSize: '14px',\n        backgroundColor: `rgba(0, 0, 0, 0.05)`,\n        padding: '14px 16px',\n        fontWeight: '500'\n      }\n    },\n    onList() {\n      let result = []\n      if(this.event) {\n        this.event.forEach(item => {\n          if(this.moment().isBefore(item.end_date) || this.moment().isSame(item.end_date, 'day')) {\n            result.push(item)\n          }\n        })\n      }\n      return result;\n    },\n    endList() {\n      let result = []\n      if(this.event) {\n        this.event.forEach(item => {\n          if(this.moment().isAfter(item.end_date, 'day')) {\n            result.push(item)\n          }\n        })\n      }\n      return result;\n    }\n  },\n  watch: {\n    \n  }\n}\n</script>\n\n\n"],"sourceRoot":"src/components/Components/Block"}]}